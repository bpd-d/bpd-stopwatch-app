{"version":3,"sources":["webpack:///./src/ui/components/common/PageHeader.tsx","webpack:///./src/ui/components/common/ErrorsList.tsx","webpack:///./src/ui/components/common/BpdConfirmDrop.tsx","webpack:///./src/ui/components/common/MainComponentBase.tsx","webpack:///./src/ui/components/actions/ActionTypeRadioChooser.tsx","webpack:///./src/ui/components/actions/AddActionDialog.tsx","webpack:///./src/ui/components/common/ClearableInput.tsx","webpack:///./src/ui/components/actions/ActionsEditGrid.tsx","webpack:///./src/ui/components/actions/StopwatchActionsComponent.tsx","webpack:///./src/ui/components/common/BpdActionIcon.tsx","webpack:///./src/ui/components/trainings/IconLabel.tsx"],"names":["PageHeader","props","className","icon","cui-icon","title","description","ErrorsList","errors","length","map","error","index","key","BpdConfirmDrop","cancelLabel","confirmLabel","cui-drop","id","message","onClick","window","$cui","get","emit","onCancel","onConfirm","MainComponentBase","routeData","MAPPIGNS","getRoute","routeName","React","name","setTitle","updateTitle","is","setPageTitle","setNavbarTitle","createArray","children","child","type","ActionTypeRadioChooser","groupId","radioId","actions","setActions","onChange","ev","target","checked","found","find","act","value","matches","buildItem","StopwatchActionType","WARMUP","EXERCISE","BREAK","COOLDOWN","action","htmlFor","BpdActionIcon","AddActionDialog","undefined","duration","removable","editable","state","setState","setErrors","onValueChange","event","BpdDialog","body","placeholder","min","max","footer","cui-close","onSave","actionValidator","ActionValidator","validate","status","dialogCui","ClearableInput","setValue","changeValue","onUpdate","ActionsEditGrid","filter","match","toLowerCase","matchesName","getBgClassByType","option","onEdit","onDelete","onOption","IconLabel","label","defaultAction","StopwatchActionsComponent","DefaultActions","current","setFilter","onGetAll","onAddOrEditClick","getAllSub","$actionsFlow","subscribe","ACTIONS_FLOW_ACTIONS","GET_ALL","finish","setActionSub","SET_ACTION","removeActionSub","REMOVE_ACTION","perform","unsubscribe"],"mappings":"2FAAA,8DAeO,SAASA,EAAWC,GACvB,OAAQ,uBAAKC,UAAU,2CACnB,uBAAKA,UAAU,mDACX,uBAAKA,UAAU,8BACVD,EAAME,MAAQ,uBAAKD,UAAU,qCAAoC,wBAAME,WAAUH,EAAME,QACxF,sBAAID,UAAU,oEAAoED,EAAMI,OACxF,qBAAGH,UAAU,6FAA6FD,EAAMK,eAGxH,gBAAC,IAAD,S,oCCxBR,kDAOO,SAASC,EAAWN,GACvB,OACI,gCACKA,EAAMO,QACHP,EAAMO,OAAOC,OAAS,GACtB,sBAAIP,UAAU,YAEND,EAAMO,OAAOE,KAAI,SAACC,EAAeC,GAC7B,OAAO,sBAAIC,IAAKD,EAAOV,UAAU,yBAAwB,wBAAMA,UAAU,kBAAkBS,W,kCCfvH,kDAWO,SAASG,EAAeb,GAA2B,QAChDc,EAAmB,UAAGd,EAAMc,mBAAT,QAAwB,SAC3CC,EAAoB,UAAGf,EAAMe,oBAAT,QAAyB,KAYnD,OAAQ,uBAAKd,UAAU,0CAA0Ce,WAAS,4BAA4BC,GAAIjB,EAAMiB,IAC5G,yBAAIjB,EAAMkB,SACV,uBAAKjB,UAAU,qCACX,0BAAQA,UAAU,uBAAuBkB,QAAS,WAbtDC,OAAOC,KAAKC,IAAI,IAAMtB,EAAMiB,IAAIM,KAAK,SACjCvB,EAAMwB,UACNxB,EAAMwB,aAWmEV,GACzE,0BAAQb,UAAU,wDAAwDkB,QAAS,WARvFC,OAAOC,KAAKC,IAAI,IAAMtB,EAAMiB,IAAIM,KAAK,SACrCvB,EAAMyB,cAOyGV,O,kwDCdhH,SAASW,EAAkB1B,GAC9B,IAAM2B,EAAYC,IAASC,SAAS7B,EAAM8B,WADmB,IAEnCC,WAAeJ,EAAUK,MAFU,GAEtD5B,EAFsD,KAE/C6B,EAF+C,KAI7D,SAASC,EAAY9B,GACZ+B,YAAG/B,KAGRgC,YAAaT,EAAUK,MACvBK,YAAeV,EAAUK,MACzBC,EAAS7B,IAOb,OAJA2B,aAAgB,WACZK,YAAaT,EAAUK,MACvBK,YAAeV,EAAUK,QAC1B,IAEC,gCACI,gBAAC,IAAD,CAAY5B,MAAOA,EAAOF,KAAMyB,EAAUzB,KAAMG,YAAasB,EAAUtB,cACvE,uBAAKJ,UAAU,0CAEPqC,YAAYtC,EAAMuC,UAAU9B,KAAI,SAAA+B,GAC5B,MAA0B,iBAAfA,EAAMC,KACNV,eAAmBS,EAAnB,KAA+BA,EAAMxC,QAEzC+B,eAAmBS,EAAnB,GAA4BJ,aAAcF,GAAgBM,EAAMxC,e,woCCvBxF,SAAS0C,EAAuB1C,GACnC,IAAM2C,EAAU,cAAgB3C,EAAMiB,GAChC2B,EAAU,SAAW5C,EAAMiB,GAFsC,IAGzCc,WAAmC,IAHM,GAGhEc,EAHgE,KAGvDC,EAHuD,KAKvE,SAASC,EAASC,GACd,GAAIhD,EAAM+C,UAAYC,EAAGC,OAAOC,QAAS,CACrC,IAAIC,EAAQN,EAAQO,MAAK,SAAAC,GAAG,OAAIA,EAAIpC,KAAO+B,EAAGC,OAAOhC,MACjDkB,YAAGgB,IAAUA,EAAMnB,OAAShC,EAAMsD,OAClCtD,EAAM+C,SAASI,EAAMnB,OAKjC,SAASuB,EAAQd,GACb,OAAOzC,EAAMsD,QAAUb,EAG3B,SAASe,EAAUf,EAAc9B,GAC7B,MAAO,CACHqB,KAAMS,EACNS,QAASK,EAAQd,GACjBxB,GAAI2B,EAAUjC,GAetB,OAXAoB,aAAgB,WAQZ,OAPAe,EAAW,CACPU,EAAUC,IAAoBC,OAAQ,GACtCF,EAAUC,IAAoBE,SAAU,GACxCH,EAAUC,IAAoBG,MAAO,GACrCJ,EAAUC,IAAoBI,SAAU,KAGrC,eAER,CAAC7D,EAAMsD,QACF,uBAAKrC,GAAIjB,EAAMiB,GAAIhB,UAAU,qCAChC4C,EAAQpC,KAAI,SAAAqD,GACT,OAAO,uBAAKlD,IAAKkD,EAAO7C,IAAI,uBAAKhB,UAAU,kCACvC,yBAAOwC,KAAK,QAAQxB,GAAI6C,EAAO7C,GAAIe,KAAMW,EAASO,QAASY,EAAOZ,QAASH,SAAUA,IACrF,yBAAOgB,QAASD,EAAO7C,GAAIhB,UAAU,+CACjC,uBAAKA,UAAU,uBAAsB,gBAAC+D,EAAA,EAAD,CAAevB,KAAMqB,EAAO9B,QACjE,uBAAK/B,UAAU,uBAAsB,wBAAMA,UAAU,kBAAkB6D,EAAO9B,c,8nDC/C3F,SAASiC,EAAgBjE,GAA6B,QAC/B+B,WAAgC,CACtDd,QAAIiD,EACJlC,KAAM,GACNmC,SAAU,IACVC,WAAW,EACXC,UAAU,EACV5B,KAAMgB,IAAoBE,WAP2B,GAClDW,EADkD,KAC3CC,EAD2C,SAU7BxC,WAAyB,IAVI,GAUlDxB,EAVkD,KAU1CiE,EAV0C,KAYzD,SAASC,EAAcC,GACPA,EAAMzB,OAAOK,MAAzB,IACItB,EAAO0C,EAAMzB,OAAOjB,KACxB,OAAQA,GACJ,IAAK,OACL,IAAK,WACL,IAAK,OACDuC,EAAS,EAAD,KAAMD,GAAN,QAActC,EAAO0C,EAAMzB,OAAOK,SAC1C,MACJ,IAAK,YACL,IAAK,WACDiB,EAAS,EAAD,KAAMD,GAAN,QAActC,EAAO0C,EAAMzB,OAAOC,YAiCtD,OAXAnB,aAAgB,WAOZ,OANI/B,EAAM8D,SACNS,EAAS,EAAD,GACDvE,EAAM8D,SAEbU,EAAU,KAEP,eAGR,CAACxE,EAAM8D,SACF,gBAACa,EAAA,EAAD,CACJvE,MAAM,UACNa,GAAG,oBACH2D,KAAM,gCACF,uBAAK3E,UAAU,YACX,yBAAOA,UAAU,kBAAjB,QACA,yBAAOA,UAAU,kCAAkCwC,KAAK,OAAOT,KAAK,OAAOsB,MAAOgB,EAAMtC,KAAM6C,YAAY,OAAO9B,SAAU0B,KAE/H,uBAAKxE,UAAU,2BACX,yBAAOA,UAAU,kBAAjB,YACA,yBAAOA,UAAU,kCAAkCwC,KAAK,SAASqC,IAAI,IAAIC,IAAI,MAAM/C,KAAK,WAAWsB,MAAOgB,EAAMH,SAAUU,YAAY,WAAW9B,SAAU0B,KAE/J,uBAAKxE,UAAU,2BACX,yBAAOA,UAAU,kBAAjB,QAOA,uBAAKA,UAAU,wCACX,gBAACyC,EAAD,CAAwBzB,GAAG,aAAaqC,MAAOgB,EAAM7B,KAAMM,SAjD3E,SAA4Be,GACxBS,EAAS,EAAD,KAAMD,GAAN,IAAa,KAAQR,UAmDzB,uBAAK7D,UAAU,2DACX,yBAAOwC,KAAK,WAAWxC,UAAU,eAAegB,GAAG,eAAee,KAAK,WAAWkB,QAASoB,EAAMD,SAAUtB,SAAU0B,IACrH,yBAAOV,QAAQ,gBAAf,cAEJ,uBAAK9D,UAAU,2DACX,yBAAOwC,KAAK,WAAWxC,UAAU,eAAegB,GAAG,eAAee,KAAK,YAAYkB,QAASoB,EAAMF,UAAWrB,SAAU0B,IACvH,yBAAOV,QAAQ,gBAAf,eAEJ,gBAACzD,EAAA,EAAD,CAAYC,OAAQA,KAGxByE,OACI,uBAAK/E,UAAU,sBACX,0BAAQA,UAAU,oCAAoCgF,YAAU,IAAhE,UACA,0BAAQhF,UAAU,wBAAwBkB,QA9DtD,WACI,GAAInB,EAAMkF,OAAQ,CACd,IAAIpB,EAA0B,EAAH,GAAQQ,GAC/Ba,GAAkB,IAAIC,KAAkBC,SAASvB,GACrD,GAAIqB,EAAgBG,OAAQ,CACxB,IAAIC,EAAYnE,OAAOC,KAAKC,IAAI,sBAChCtB,EAAMkF,OAAOpB,GACbyB,EAAUhE,KAAK,SAEnBiD,EAAUW,EAAgB5E,WAqDtB,W,u9BClGT,SAASiF,EAAexF,GAA4B,QAC7B+B,WAAuB,IADM,GAChDuB,EADgD,KACzCmC,EADyC,KAOvD,SAASC,EAAYpC,GACjBmC,EAASnC,GACLnB,YAAGnC,EAAM2F,WACT3F,EAAM2F,SAASrC,GAIvB,OAAQ,uBAAKrD,UAAW,iBAAmBD,EAAMC,WAC7C,yBAAOwC,KAAK,OAAOxC,UAAU,YAAY4E,YAAY,SAASvB,MAAOA,EAAOP,SAZhF,SAAuBC,GACnB0C,EAAY1C,EAAGC,OAAOK,UAYrBnB,YAAGmB,IAAU,qBAAGrD,UAAU,WAAWE,WAAS,QAAQgB,QAAS,kBAAMuE,EAAY,Q,4BCXnF,SAASE,EAAgB5F,GAoB5B,OAAQ,uBAAKC,UAAU,mHAClBkC,YAAGnC,EAAM6C,UAAY7C,EAAM6C,QAAQpC,KAAI,SAACqD,EAAyBnD,GAC9D,OArBR,SAAqBqB,GACjB,IAAKG,YAAGnC,EAAM6F,QACV,OAAO,EAEX,IAAIC,EAAQ9D,EAAK+D,cAAcD,MAAM9F,EAAM6F,OAAOE,eAClD,OAAO5D,YAAG2D,GAgBEE,CAAYlC,EAAO9B,OACvB,uBAAKpB,IAAKD,GAEN,uBAAKV,UAAW,8CAAgDgG,YAAiBnC,EAAOrB,OACpF,uBAAKxC,UAAU,8DACX,wBAAMA,UAAU,wDAAwD6D,EAAO9B,MAC/E,gBAACgC,EAAA,EAAD,CAAe/D,UAAU,oBAAoBwC,KAAMqB,EAAOrB,QAE9D,uBAAKxC,UAAU,mEACX,uBAAKA,UAAU,qCACX,uBAAKA,UAAU,qBAAoB,4BAAO6D,EAAOK,SAAd,cAGvC,uBAAKlE,UAAU,mBACX,sBAAIA,UAAU,gBACT6D,EAAOO,UAAY,0BAAI,qBAAGpE,UAAU,WAAWE,WAAS,OAAOgB,QAAS,YA5BzG,SAAkB+E,EAAgBpC,GAC9B,OAAQoC,GACJ,IAAK,OACDlG,EAAMmG,OAAOrC,GACb,MACJ,IAAK,SACD9D,EAAMoG,SAAStC,IAsBsFuC,CAAS,OAAQvC,KAAY,gBAACwC,EAAA,EAAD,CAAWC,MAAM,WAC9HzC,EAAOM,WAAa,8BAAK,uBAAKnE,UAAU,oBACrC,qBAAGA,UAAU,WAAWE,WAAS,SAAQ,gBAACmG,EAAA,EAAD,CAAWC,MAAM,YAC1D,gBAAC1F,EAAA,EAAD,CAAgBK,QAAQ,4CAA4CJ,YAAY,KAAKC,aAAa,MAAME,GAAG,qBAAqBQ,UAAW,WAAQzB,EAAMoG,SAAStC,iB,w+DC1C1M,IAAM0C,EAAiC,CACnCvF,QAAIiD,EACJlC,KAAM,GACNS,KAAM,WACN0B,SAAU,IACVC,WAAW,EACXC,UAAU,GAaC,SAASoC,IAA4B,QACtB1E,WAAsC,CAC5Dc,QAAS,EAAI6D,KACbC,QAAS,OAHmC,GACzCrC,EADyC,KAClCC,EADkC,KAM1C5C,EAAYC,IAASC,SAAS,WANY,IAQpBE,WAAuB,IARH,GAQzC8D,EARyC,KAQjCe,EARiC,KAkBhD,SAASC,EAAShE,GACd0B,EAAS,OACFD,GADC,IAEJzB,QAAS,GAAF,SAAM6D,KAAN,EAAyB7D,OAIxC,SAASiE,EAAiBhD,GACtBS,EAAS,OACFD,GADC,IAEJqC,QAAS7C,GAAU,KAAK0C,MAEZpF,OAAOC,KAAKC,IAAI,sBACtBC,KAAK,QA6BnB,OAdAQ,aAAgB,WACZK,YAAaT,EAAUK,MACvB,IAAM+E,EAAY3F,OAAO4F,aAAaC,UAAUC,IAAqBC,QAAS,CAAEC,OAAQP,IAClFQ,EAAejG,OAAO4F,aAAaC,UAAUC,IAAqBI,YAClEC,EAAkBnG,OAAO4F,aAAaC,UAAUC,IAAqBM,eAE3E,OADApG,OAAO4F,aAAaS,QAAQP,IAAqBC,SAC1C,WAEH/F,OAAO4F,aAAaU,YAAYR,IAAqBC,QAASJ,EAAU9F,IACxEG,OAAO4F,aAAaU,YAAYR,IAAqBI,WAAYD,EAAapG,IAC9EG,OAAO4F,aAAaU,YAAYR,IAAqBM,cAAeD,EAAgBtG,OAEzF,CAACqD,EAAMzB,UAEF,gCACJ,gBAACnB,EAAA,EAAD,CAAmBI,UAAU,WACzB,uBAAKlB,IAAI,eAAeX,UAAU,wEAC9B,gBAACuF,EAAD,CAAgBlC,MAAOuC,EAAQF,SA7B3C,SAAsBrC,GAClBsD,EAAUtD,IA4BqDrD,UAAU,qDAErE,gBAAC2F,EAAD,CAAiBhF,IAAI,eAAeiF,OAAQA,EAAQhD,QAASyB,EAAMzB,QAASsD,OAAQW,EAAkBV,SAnD9G,SAAkBtC,GACd1C,OAAO4F,aAAaS,QAAQP,IAAqBM,cAAe1D,MAmD5D,uBAAKlD,IAAI,UAAUX,UAAU,mHACzB,0BAAQA,UAAU,kEAAkEE,WAAS,OAAOgB,QAAS,WAAQ2F,SAG7H,gBAAC7C,EAAD,CAAiBH,OAAQQ,EAAMqC,QAASzB,OA5D5C,SAAsBpB,GAClB1C,OAAO4F,aAAaS,QAAQP,IAAqBI,WAAYxD,S,kCC3CrE,kDAOO,SAASE,EAAchE,GAA2B,MACrD,OACI,wBAAMC,UAAW,uBAAeD,EAAMC,iBAArB,QAAkC,IAAKE,WAAA,oBAAuBH,EAAMyC,U,kCCT7F,kDAIO,SAAS6D,EAAUtG,GACtB,OAAQ,wBAAMC,UAAU,yCAAyCD,EAAMuG","file":"stopwatch.chunk.2.59b505dd89bc6f9e8754.js","sourcesContent":["import * as React from 'react'\r\nimport { RouteDetails } from '../../../api/routes/routes';\r\nimport { TriangleShadow } from './TriangleShadow';\r\n\r\nexport interface PageHeaderProps {\r\n    title: string;\r\n    description: string;\r\n    icon?: string;\r\n}\r\n\r\nexport interface PageHeaderWrapperProps {\r\n    route: RouteDetails;\r\n}\r\n\r\n\r\nexport function PageHeader(props: PageHeaderProps) {\r\n    return (<div className=\"stopwatch-page-header cui-margin-bottom\">\r\n        <div className=\"cui-container cui-center cui-background-default\">\r\n            <div className=\"cui-padding-large-vertical\">\r\n                {props.icon && <div className=\"cui-flex-center cui-margin-bottom\"><span cui-icon={props.icon}></span></div>}\r\n                <h1 className=\"cui-h1 cui-text-center cui-margin-remove-bottom cui-anim-fade-in\">{props.title}</h1>\r\n                <p className=\"cui-text-center cui-text-muted cui-scale-y-in cui-animation-delay cui-margin-large-bottom\">{props.description}</p>\r\n            </div>\r\n        </div>\r\n        <TriangleShadow />\r\n    </div>);\r\n}\r\n\r\n\r\nexport function PageHeaderRouteWrapper(props: PageHeaderWrapperProps) {\r\n    return (<PageHeader title={props.route.name} description={props.route.description} icon={props.route.icon} />);\r\n}","import * as React from 'react'\r\n\r\nexport interface ErrorsListProps {\r\n    errors: string[];\r\n}\r\n\r\n\r\nexport function ErrorsList(props: ErrorsListProps) {\r\n    return (\r\n        <>\r\n            {props.errors &&\r\n                props.errors.length > 0 &&\r\n                <ul className=\"cui-list\">\r\n                    {\r\n                        props.errors.map((error: string, index: number) => {\r\n                            return <li key={index} className=\"cui-animation-fade-in\"><span className=\"cui-text-error\">{error}</span></li>\r\n                        })\r\n                    }\r\n                </ul>}\r\n        </>\r\n    );\r\n}\r\n","import * as React from 'react'\r\n\r\nexport interface BpdConfirmDropProp {\r\n    message: string;\r\n    id: string;\r\n    cancelLabel?: string;\r\n    confirmLabel?: string;\r\n    onCancel?: () => void;\r\n    onConfirm: () => void;\r\n}\r\n\r\nexport function BpdConfirmDrop(props: BpdConfirmDropProp) {\r\n    const cancelLabel: string = props.cancelLabel ?? \"Cancel\";\r\n    const confirmLabel: string = props.confirmLabel ?? \"OK\";\r\n    function onCancel() {\r\n        window.$cui.get(\"#\" + props.id).emit(\"close\");\r\n        if (props.onCancel)\r\n            props.onCancel()\r\n    }\r\n\r\n    function onConfirm() {\r\n        window.$cui.get(\"#\" + props.id).emit(\"close\");\r\n        props.onConfirm()\r\n    }\r\n\r\n    return (<div className=\"cui-dropdown cui-section drop-max-width\" cui-drop=\"outClose: Y; autoClose: Y\" id={props.id}>\r\n        <p>{props.message}</p>\r\n        <div className=\"cui-flex cui-right cui-margin-top\">\r\n            <button className=\"cui-button cui-small\" onClick={() => { onCancel() }}>{cancelLabel}</button>\r\n            <button className=\"cui-button cui-accent cui-small cui-margin-small-left\" onClick={() => { onConfirm() }}>{confirmLabel}</button>\r\n        </div>\r\n    </div>);\r\n}\r\n","import { is } from 'bpd-toolkit/dist/esm/index';\r\nimport * as React from 'react'\r\nimport { setPageTitle, setNavbarTitle, createArray } from '../../../core/helpers';\r\nimport { MAPPIGNS } from '../../../ui/routes';\r\nimport { PageHeader } from './PageHeader';\r\n\r\nexport interface MainComponentBaseProps {\r\n    routeName: string;\r\n    children: JSX.Element | JSX.Element[] | undefined;\r\n}\r\n\r\nexport interface BaseComponentProps {\r\n    setPageTitle: (value: string) => void;\r\n}\r\n\r\nexport function MainComponentBase(props: MainComponentBaseProps) {\r\n    const routeData = MAPPIGNS.getRoute(props.routeName);\r\n    const [title, setTitle] = React.useState(routeData.name);\r\n\r\n    function updateTitle(title: string) {\r\n        if (!is(title)) {\r\n            return;\r\n        }\r\n        setPageTitle(routeData.name);\r\n        setNavbarTitle(routeData.name);\r\n        setTitle(title)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setPageTitle(routeData.name);\r\n        setNavbarTitle(routeData.name);\r\n    }, [])\r\n    return (\r\n        <>\r\n            <PageHeader title={title} icon={routeData.icon} description={routeData.description} />\r\n            <div className=\"stopwatch-content-width cui-margin-top\">\r\n                {\r\n                    createArray(props.children).map(child => {\r\n                        if (typeof child.type === 'string') {\r\n                            return React.cloneElement(child, { ...child.props })\r\n                        }\r\n                        return React.cloneElement(child, { setPageTitle: updateTitle, ...child.props })\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import { is } from 'bpd-toolkit/dist/esm/index';\r\nimport * as React from 'react'\r\nimport { StopwatchActionType } from '../../../core/models';\r\nimport { BpdActionIcon } from '../common/BpdActionIcon';\r\n\r\nexport interface ActionTypeRadioChooserProps {\r\n    value: string;\r\n    onChange: (action: string) => void;\r\n    id: string;\r\n}\r\n\r\n\r\ninterface RadioChooserItem {\r\n    name: string;\r\n    checked: boolean;\r\n    id: string;\r\n}\r\n\r\nexport function ActionTypeRadioChooser(props: ActionTypeRadioChooserProps) {\r\n    const groupId = \"radio-group\" + props.id;\r\n    const radioId = \"radio-\" + props.id;\r\n    const [actions, setActions] = React.useState<RadioChooserItem[]>([])\r\n\r\n    function onChange(ev: any) {\r\n        if (props.onChange && ev.target.checked) {\r\n            let found = actions.find(act => act.id === ev.target.id);\r\n            if (is(found) && found.name !== props.value) {\r\n                props.onChange(found.name);\r\n            }\r\n        }\r\n    }\r\n\r\n    function matches(type: string) {\r\n        return props.value === type;\r\n    }\r\n\r\n    function buildItem(type: string, index: number): RadioChooserItem {\r\n        return {\r\n            name: type,\r\n            checked: matches(type),\r\n            id: radioId + index,\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setActions([\r\n            buildItem(StopwatchActionType.WARMUP, 0),\r\n            buildItem(StopwatchActionType.EXERCISE, 1),\r\n            buildItem(StopwatchActionType.BREAK, 2),\r\n            buildItem(StopwatchActionType.COOLDOWN, 3)\r\n        ])\r\n\r\n        return () => {\r\n        }\r\n    }, [props.value]);\r\n    return (<div id={props.id} className=\"cui-flex-grid cui-child-width-1-4\">\r\n        {actions.map(action => {\r\n            return <div key={action.id}><div className=\"cui-radio-custom cui-width-1-1\">\r\n                <input type=\"radio\" id={action.id} name={groupId} checked={action.checked} onChange={onChange} />\r\n                <label htmlFor={action.id} className=\"cui-content cui-padding-small cui-width-1-1\">\r\n                    <div className=\"cui-flex cui-center\"><BpdActionIcon type={action.name} /></div>\r\n                    <div className=\"cui-flex cui-center\"><span className=\"cui-text-small\">{action.name}</span></div>\r\n                </label>\r\n            </div></div>\r\n        })}\r\n    </div >);\r\n}\r\n","import * as React from \"react\";\r\nimport { DefaultActions } from \"../../../core/statics\";\r\nimport { StopwatchAction, StopwatchActionType } from \"../../../core/models\";\r\nimport { ActionValidator } from \"../../../core/validators\";\r\nimport { BpdDialog } from \"../common/BpdDialog\";\r\nimport { ErrorsList } from \"../common/ErrorsList\";\r\nimport { ActionsSelect } from \"./ActionsSelect\";\r\nimport { ActionTypeRadioChooser } from \"./ActionTypeRadioChooser\";\r\n\r\nexport interface AddActionDialogProps {\r\n    action: StopwatchAction;\r\n    onSave: (action: StopwatchAction) => void;\r\n}\r\n\r\nexport function AddActionDialog(props: AddActionDialogProps) {\r\n    const [state, setState] = React.useState<StopwatchAction>({\r\n        id: undefined,\r\n        name: \"\",\r\n        duration: \"5\",\r\n        removable: true,\r\n        editable: false,\r\n        type: StopwatchActionType.EXERCISE\r\n    })\r\n\r\n    const [errors, setErrors] = React.useState<string[]>([])\r\n\r\n    function onValueChange(event: any) {\r\n        let value = event.target.value;\r\n        let name = event.target.name;\r\n        switch (name) {\r\n            case \"name\":\r\n            case \"duration\":\r\n            case \"type\":\r\n                setState({ ...state, [name]: event.target.value })\r\n                break;\r\n            case \"removable\":\r\n            case \"editable\":\r\n                setState({ ...state, [name]: event.target.checked })\r\n                break;\r\n        }\r\n    }\r\n\r\n    function onActionTypeChange(action: string) {\r\n        setState({ ...state, \"type\": action })\r\n    }\r\n\r\n    function onSave() {\r\n        if (props.onSave) {\r\n            let action: StopwatchAction = { ...state };\r\n            let actionValidator = new ActionValidator().validate(action)\r\n            if (actionValidator.status) {\r\n                let dialogCui = window.$cui.get(\"#add-action-dialog\");\r\n                props.onSave(action);\r\n                dialogCui.emit('close');\r\n            }\r\n            setErrors(actionValidator.errors);\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (props.action) {\r\n            setState({\r\n                ...props.action\r\n            })\r\n            setErrors([]);\r\n        }\r\n        return () => {\r\n\r\n        }\r\n    }, [props.action])\r\n    return (<BpdDialog\r\n        title=\"Add new\"\r\n        id=\"add-action-dialog\"\r\n        body={<>\r\n            <div className=\"cui-form\">\r\n                <label className=\"cui-form-label\">Name</label>\r\n                <input className=\"cui-input stopwatch-input-width\" type=\"text\" name=\"name\" value={state.name} placeholder=\"Name\" onChange={onValueChange} />\r\n            </div>\r\n            <div className=\"cui-form cui-margin-top\">\r\n                <label className=\"cui-form-label\">Duration</label>\r\n                <input className=\"cui-input stopwatch-input-width\" type=\"number\" min=\"0\" max=\"100\" name=\"duration\" value={state.duration} placeholder=\"Duration\" onChange={onValueChange} />\r\n            </div>\r\n            <div className=\"cui-form cui-margin-top\">\r\n                <label className=\"cui-form-label\">Type</label>\r\n                {/* <select className=\"cui-select stopwatch-input-width\" value={state.type} name=\"type\" onChange={onValueChange} >\r\n                    <option value=\"warmup\">Warmup</option>\r\n                    <option value=\"exercise\">Exercise</option>\r\n                    <option value=\"break\">Break</option>\r\n                    <option value=\"cooldown\">Cooldown</option>\r\n                </select> */}\r\n                <div className=\"stopwatch-input-width cui-margin-top\">\r\n                    <ActionTypeRadioChooser id=\"add-action\" value={state.type} onChange={onActionTypeChange} />\r\n                </div>\r\n            </div>\r\n            <div className=\"cui-form cui-flex cui-middle cui-reverse cui-margin-top\">\r\n                <input type=\"checkbox\" className=\"cui-checkbox\" id=\"checkbox-1-2\" name=\"editable\" checked={state.editable} onChange={onValueChange} />\r\n                <label htmlFor=\"checkbox-1-2\"> Editable</label>\r\n            </div>\r\n            <div className=\"cui-form cui-flex cui-middle cui-reverse cui-margin-top\">\r\n                <input type=\"checkbox\" className=\"cui-checkbox\" id=\"checkbox-1-1\" name=\"removable\" checked={state.removable} onChange={onValueChange} />\r\n                <label htmlFor=\"checkbox-1-1\"> Removable</label>\r\n            </div>\r\n            <ErrorsList errors={errors} />\r\n        </>\r\n        }\r\n        footer={\r\n            <div className=\"cui-flex cui-right\">\r\n                <button className=\"cui-button cui-margin-small-right\" cui-close=\"\">Cancel</button>\r\n                <button className=\"cui-button cui-accent\" onClick={onSave}>Save</button>\r\n            </div>\r\n        }\r\n    />);\r\n}","import * as React from 'react'\r\nimport { is } from '../../../../node_modules/bpd-toolkit/dist/esm/index';\r\n\r\nexport interface ClearableInputProps {\r\n    value: string;\r\n    onUpdate?: (value: string) => void;\r\n    className?: string;\r\n}\r\n\r\n\r\nexport function ClearableInput(props: ClearableInputProps) {\r\n    const [value, setValue] = React.useState<string>('');\r\n\r\n    function onInputChange(ev: any) {\r\n        changeValue(ev.target.value);\r\n    }\r\n\r\n    function changeValue(value: string) {\r\n        setValue(value);\r\n        if (is(props.onUpdate)) {\r\n            props.onUpdate(value);\r\n        }\r\n    }\r\n\r\n    return (<div className={\"cui-input-mix \" + props.className}>\r\n        <input type=\"text\" className=\"cui-input\" placeholder=\"Filter\" value={value} onChange={onInputChange} />\r\n        {is(value) && <a className=\"cui-icon\" cui-icon=\"close\" onClick={() => changeValue(\"\")}></a>}\r\n    </div>);\r\n}\r\n","import * as React from 'react'\r\nimport { StopwatchAction } from '../../../core/models';\r\nimport { is } from 'bpd-toolkit/dist/esm/index';\r\nimport { getBgClassByType } from '../../../core/helpers';\r\nimport { BpdActionIcon } from '../common/BpdActionIcon';\r\nimport { IconLabel } from '../trainings/IconLabel';\r\nimport { BpdConfirmDrop } from '../common/BpdConfirmDrop';\r\n\r\nexport interface ActionsEditGridProps {\r\n    actions: StopwatchAction[];\r\n    filter: string;\r\n    onEdit: (action: StopwatchAction) => void;\r\n    onDelete: (action: StopwatchAction) => void;\r\n}\r\n\r\nexport function ActionsEditGrid(props: ActionsEditGridProps) {\r\n    function matchesName(name: string): boolean {\r\n        if (!is(props.filter)) {\r\n            return true;\r\n        }\r\n        let match = name.toLowerCase().match(props.filter.toLowerCase());\r\n        return is(match);\r\n    }\r\n\r\n    function onOption(option: string, action: StopwatchAction) {\r\n        switch (option) {\r\n            case 'edit':\r\n                props.onEdit(action)\r\n                break;\r\n            case \"delete\":\r\n                props.onDelete(action)\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (<div className=\"cui-container cui-flex-grid cui-flex-grid-match cui-child-width-1-1 cui-child-width-1-3--m cui-animatio-fade-in\">\r\n        {is(props.actions) && props.actions.map((action: StopwatchAction, index: number) => {\r\n            return (matchesName(action.name) &&\r\n                <div key={index}>\r\n\r\n                    <div className={\"cui-card cui-default cui-animation-fade-in \" + getBgClassByType(action.type)}>\r\n                        <div className=\"cui-card-header cui-flex cui-between cui-nowrap cui-middle\">\r\n                            <span className=\"cui-card-title cui-text-truncate cui-overflow-hidden\">{action.name}</span>\r\n                            <BpdActionIcon className=\"cui-padding-small\" type={action.type} />\r\n                        </div>\r\n                        <div className=\"cui-card-body cui-flex cui-middle cui-nowrap action-card-height\">\r\n                            <div className=\"cui-flex-grow cui-overflow-hidden\">\r\n                                <div className=\"cui-text-truncate\"><span>{action.duration} seconds</span></div>\r\n                            </div>\r\n\r\n                            <div className=\"cui-flex-shrink\">\r\n                                <ul className=\"cui-icon-nav\">\r\n                                    {action.editable && <li><a className=\"cui-icon\" cui-icon=\"edit\" onClick={() => { onOption('edit', action) }} ><IconLabel label=\"Edit\" /></a></li>}\r\n                                    {action.removable && <li> <div className=\"cui-drop-trigger\">\r\n                                        <a className=\"cui-icon\" cui-icon=\"trash\"><IconLabel label=\"Delete\" /></a>\r\n                                        <BpdConfirmDrop message=\"Do you really want to delete this action?\" cancelLabel=\"No\" confirmLabel=\"Yes\" id=\"action-delete-drop\" onConfirm={() => { props.onDelete(action) }} />\r\n                                    </div></li>}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>)\r\n        })}\r\n    </div>);\r\n}\r\n","import * as React from 'react'\r\nimport { StopwatchAction } from '../../../core/models';\r\nimport { DefaultActions } from '../../../core/statics';\r\nimport { ACTIONS_FLOW_ACTIONS } from '../../../app/flow/actions';\r\nimport { AddActionDialog } from './AddActionDialog';\r\nimport { PageHeader } from '../common/PageHeader';\r\nimport { setNavbarTitle, setPageTitle } from '../../../core/helpers';\r\nimport { is } from '../../../../node_modules/bpd-toolkit/dist/esm/index';\r\nimport { ClearableInput } from '../common/ClearableInput';\r\nimport { ActionsEditGrid } from './ActionsEditGrid';\r\nimport { MAPPIGNS } from '../../../ui/routes';\r\nimport { MainComponentBase } from '../common/MainComponentBase';\r\n\r\nconst defaultAction: StopwatchAction = {\r\n    id: undefined,\r\n    name: \"\",\r\n    type: \"exercise\",\r\n    duration: \"5\",\r\n    removable: true,\r\n    editable: true\r\n}\r\n\r\ninterface BpdDialogState {\r\n    action: StopwatchAction;\r\n}\r\n\r\ninterface StopWatchActionsState {\r\n    actions: StopwatchAction[];\r\n    current: StopwatchAction;\r\n}\r\n\r\n\r\nexport default function StopwatchActionsComponent() {\r\n    const [state, setState] = React.useState<StopWatchActionsState>({\r\n        actions: [...DefaultActions],\r\n        current: null\r\n    })\r\n\r\n    const routeData = MAPPIGNS.getRoute('actions');\r\n\r\n    const [filter, setFilter] = React.useState<string>(\"\");\r\n\r\n    function onDialogSave(action: StopwatchAction) {\r\n        window.$actionsFlow.perform(ACTIONS_FLOW_ACTIONS.SET_ACTION, action);\r\n    }\r\n\r\n    function onDelete(action: StopwatchAction) {\r\n        window.$actionsFlow.perform(ACTIONS_FLOW_ACTIONS.REMOVE_ACTION, action);\r\n    }\r\n\r\n    function onGetAll(actions: StopwatchAction[]) {\r\n        setState({\r\n            ...state,\r\n            actions: [...DefaultActions, ...actions]\r\n        })\r\n    }\r\n\r\n    function onAddOrEditClick(action?: StopwatchAction) {\r\n        setState({\r\n            ...state,\r\n            current: action || { ...defaultAction }\r\n        })\r\n        let dialogCui = window.$cui.get(\"#add-action-dialog\");\r\n        dialogCui.emit('open');\r\n    }\r\n\r\n    function updateFilter(value: string) {\r\n        setFilter(value);\r\n    }\r\n\r\n    function matchesName(name: string): boolean {\r\n        if (!is(filter)) {\r\n            return true;\r\n        }\r\n        let match = name.toLowerCase().match(filter.toLowerCase());\r\n        return is(match);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setPageTitle(routeData.name);\r\n        const getAllSub = window.$actionsFlow.subscribe(ACTIONS_FLOW_ACTIONS.GET_ALL, { finish: onGetAll })\r\n        const setActionSub = window.$actionsFlow.subscribe(ACTIONS_FLOW_ACTIONS.SET_ACTION)\r\n        const removeActionSub = window.$actionsFlow.subscribe(ACTIONS_FLOW_ACTIONS.REMOVE_ACTION)\r\n        window.$actionsFlow.perform(ACTIONS_FLOW_ACTIONS.GET_ALL);\r\n        return () => {\r\n            //setNavbarTitle(\"\");\r\n            window.$actionsFlow.unsubscribe(ACTIONS_FLOW_ACTIONS.GET_ALL, getAllSub.id);\r\n            window.$actionsFlow.unsubscribe(ACTIONS_FLOW_ACTIONS.SET_ACTION, setActionSub.id);\r\n            window.$actionsFlow.unsubscribe(ACTIONS_FLOW_ACTIONS.REMOVE_ACTION, removeActionSub.id);\r\n        }\r\n    }, [state.actions])\r\n\r\n    return (<>\r\n        <MainComponentBase routeName=\"actions\" >\r\n            <div key=\"search-input\" className=\"cui-container cui-flex cui-middle cui-middle cui-center cui-right--s\">\r\n                <ClearableInput value={filter} onUpdate={updateFilter} className=\"cui-width-1-1 cui-width-1-3--m cui-width-1-4--l\" />\r\n            </div>\r\n            <ActionsEditGrid key=\"actions-grid\" filter={filter} actions={state.actions} onEdit={onAddOrEditClick} onDelete={onDelete} />\r\n            <div key=\"btn-bar\" className=\"cui-position-float cui-position-bottom cui-position-center cui-margin-large-bottom app-float-bottom z-index-100\">\r\n                <button className=\"cui-icon-button cui-large cui-background-default cui-box-shadow\" cui-icon=\"plus\" onClick={() => { onAddOrEditClick() }}></button>\r\n            </div>\r\n        </MainComponentBase>\r\n        <AddActionDialog action={state.current} onSave={onDialogSave} /></>);\r\n}","import * as React from 'react'\r\n\r\nexport interface BpdActionIconProps {\r\n    type: string;\r\n    className?: string;\r\n}\r\n\r\nexport function BpdActionIcon(props: BpdActionIconProps) {\r\n    return (\r\n        <span className={\"cui-icon \" + (props.className ?? \"\")} cui-icon={`stopwatch_${props.type}`}></span>\r\n    );\r\n}\r\n","import * as React from 'react'\r\nexport interface IconLabelProps {\r\n    label: string;\r\n}\r\nexport function IconLabel(props: IconLabelProps) {\r\n    return (<span className=\"cui-margin-small-left cui-unhidden--m\">{props.label}</span>);\r\n}\r\n"],"sourceRoot":""}