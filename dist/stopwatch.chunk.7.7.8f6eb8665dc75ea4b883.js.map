{"version":3,"sources":["webpack:///./src/ui/components/common/PageHeader.tsx","webpack:///./src/ui/components/common/MainComponentBase.tsx","webpack:///./src/ui/hooks/fetch.tsx","webpack:///./src/ui/components/common/BpdLoading.tsx","webpack:///./src/ui/components/common/BpdError.tsx","webpack:///./src/ui/components/docs/components.tsx","webpack:///./src/ui/components/help/help.tsx"],"names":["PageHeader","props","className","icon","cui-icon","title","description","MainComponentBase","routeData","MAPPIGNS","getRoute","routeName","React","name","setTitle","updateTitle","is","setPageTitle","setNavbarTitle","createArray","children","map","child","type","useFetch","url","options","response","undefined","error","loading","setResponse","fetch","then","json","jsonData","e","BpdLoading","BpdError","cls","modifiers","message","DocComponentSection","id","section","content","paragraph","index","DocComponentParagraph","key","header","text","list","item","Help","HelpContent","helpDocsData","HelpDoc","doc","sections","href","version"],"mappings":"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","file":"stopwatch.chunk.7.7.8f6eb8665dc75ea4b883.js","sourcesContent":["import * as React from 'react'\r\nimport { RouteDetails } from '../../../api/routes/routes';\r\nimport { TriangleShadow } from './TriangleShadow';\r\n\r\nexport interface PageHeaderProps {\r\n    title: string;\r\n    description: string;\r\n    icon?: string;\r\n}\r\n\r\nexport interface PageHeaderWrapperProps {\r\n    route: RouteDetails;\r\n}\r\n\r\n\r\nexport function PageHeader(props: PageHeaderProps) {\r\n    return (<div className=\"stopwatch-page-header cui-margin-bottom\">\r\n        <div className=\"cui-container cui-center cui-background-default\">\r\n            <div className=\"cui-padding-large-vertical\">\r\n                {props.icon && <div className=\"cui-flex-center cui-margin-bottom\"><span cui-icon={props.icon}></span></div>}\r\n                <h1 className=\"cui-h1 cui-text-center cui-margin-remove-bottom cui-anim-fade-in\">{props.title}</h1>\r\n                <p className=\"cui-text-center cui-text-muted cui-scale-y-in cui-animation-delay cui-margin-large-bottom\">{props.description}</p>\r\n            </div>\r\n        </div>\r\n        <TriangleShadow />\r\n    </div>);\r\n}\r\n\r\n\r\nexport function PageHeaderRouteWrapper(props: PageHeaderWrapperProps) {\r\n    return (<PageHeader title={props.route.name} description={props.route.description} icon={props.route.icon} />);\r\n}","import { is } from 'bpd-toolkit/dist/esm/index';\r\nimport * as React from 'react'\r\nimport { setPageTitle, setNavbarTitle, createArray } from '../../../core/helpers';\r\nimport { MAPPIGNS } from '../../../ui/routes';\r\nimport { PageHeader } from './PageHeader';\r\n\r\nexport interface MainComponentBaseProps {\r\n    routeName: string;\r\n    children: JSX.Element | JSX.Element[] | undefined;\r\n}\r\n\r\nexport interface BaseComponentProps {\r\n    setPageTitle: (value: string) => void;\r\n}\r\n\r\nexport function MainComponentBase(props: MainComponentBaseProps) {\r\n    const routeData = MAPPIGNS.getRoute(props.routeName);\r\n    const [title, setTitle] = React.useState(routeData.name);\r\n\r\n    function updateTitle(title: string) {\r\n        if (!is(title)) {\r\n            return;\r\n        }\r\n        setPageTitle(routeData.name);\r\n        setNavbarTitle(routeData.name);\r\n        setTitle(title)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setPageTitle(routeData.name);\r\n        setNavbarTitle(routeData.name);\r\n    }, [])\r\n    return (\r\n        <>\r\n            <PageHeader title={title} icon={routeData.icon} description={routeData.description} />\r\n            <div className=\"stopwatch-content-width cui-margin-top\">\r\n                {\r\n                    createArray(props.children).map(child => {\r\n                        if (typeof child.type === 'string') {\r\n                            return React.cloneElement(child, { ...child.props })\r\n                        }\r\n                        return React.cloneElement(child, { setPageTitle: updateTitle, ...child.props })\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import * as React from \"react\";\r\n\r\nexport interface FetchResponse<T> {\r\n    response: T;\r\n    error: Error;\r\n    loading: boolean;\r\n}\r\n\r\nexport function useFetch<T>(url: string, options?: any): FetchResponse<T> {\r\n    const [response, setResponse] = React.useState<FetchResponse<T>>({\r\n        response: undefined,\r\n        error: undefined,\r\n        loading: false\r\n    });\r\n\r\n    function getDataAsync() {\r\n        setResponse({\r\n            ...response,\r\n            loading: true\r\n        })\r\n        fetch(url, options).\r\n            then(response => response.json()).\r\n            then((jsonData) => {\r\n                setResponse({\r\n                    error: undefined,\r\n                    response: jsonData,\r\n                    loading: false\r\n                })\r\n            }).catch((e) => {\r\n                setResponse({\r\n                    error: e,\r\n                    response: undefined,\r\n                    loading: false\r\n                })\r\n            });\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        getDataAsync();\r\n    }, [])\r\n\r\n    return response;\r\n}","import * as React from 'react'\r\n\r\nexport function BpdLoading() {\r\n    return (<div className=\"cui-height-1-1 cui-width-1-1 cui-flex-center\">\r\n        <span>Loading...</span>\r\n    </div>);\r\n}\r\n","import * as React from 'react'\r\n\r\nexport interface BpdErrorProps {\r\n    message: string;\r\n    modifiers?: string;\r\n}\r\nexport function BpdError(props: BpdErrorProps) {\r\n    let cls = \"cui-flex-center\";\r\n    if (props.modifiers) {\r\n        cls += \" \" + props.modifiers;\r\n    }\r\n    return (<div className={cls}><span className=\"cui-text-error\">{props.message}</span></div>);\r\n}\r\n","import * as React from \"react\";\r\nimport { DocComponentSectionProps, DocComponentParagraphProps } from \"./interfaces\";\r\n\r\nexport function DocComponentSection(props: DocComponentSectionProps) {\r\n    return (\r\n        <div className=\"cui-section\">\r\n            <h2 className=\"cui-h2\" id={props.section.id}>{props.section.name}</h2>\r\n            {props.section.content && props.section.content.map((paragraph, index) => {\r\n                return <DocComponentParagraph key={index} paragraph={paragraph} />\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport function DocComponentParagraph(props: DocComponentParagraphProps) {\r\n    return (\r\n        <div className=\"\">\r\n            {props.paragraph.header && <h3 className=\"cui-h3\">{props.paragraph.header}</h3>}\r\n            {props.paragraph.text && <p>{props.paragraph.text}</p>}\r\n            {props.paragraph.list && <ul className=\"cui-list cui-bullet-shade\">\r\n                {props.paragraph.list.map((item, index) => {\r\n                    return <li key={index}>{item}</li>\r\n                })}\r\n            </ul>}\r\n        </div>\r\n    );\r\n}","import * as React from 'react'\r\nimport { FetchResponse, useFetch } from '../../../ui/hooks/fetch';\r\nimport { BpdLoading } from '../common/BpdLoading';\r\nimport { BpdError } from '../common/BpdError';\r\nimport { DocComponentSection } from '../docs/components';\r\nimport { Doc } from '../docs/interfaces';\r\nimport { MainComponentBase } from '../common/MainComponentBase';\r\n\r\n\r\nexport default function Help() {\r\n    return (\r\n        <MainComponentBase routeName=\"help\">\r\n            <HelpContent key=\"help\" />\r\n        </MainComponentBase >\r\n    );\r\n}\r\n\r\nfunction HelpContent() {\r\n    const helpDocsData: FetchResponse<Doc> = useFetch<Doc>('/static/docs/help.json');\r\n\r\n    React.useEffect(() => {\r\n    })\r\n    if (helpDocsData.error) {\r\n        return (<BpdError message={helpDocsData.error.message} />)\r\n    }\r\n    if (helpDocsData.loading || !helpDocsData.response) {\r\n        return (<BpdLoading />);\r\n    }\r\n    return (<HelpDoc doc={helpDocsData.response} />);\r\n}\r\n\r\ninterface HelpDocProps {\r\n    doc: Doc;\r\n}\r\nfunction HelpDoc(props: HelpDocProps) {\r\n\r\n    return (<>\r\n        <div className=\"cui-section\">\r\n            <h2 className=\"cui-h2\">Contents</h2>\r\n            <ul className=\"cui-list\">\r\n                {props.doc.sections.map(section => {\r\n                    return (<li key={section.id}><a className=\"cui-link cui-accent\" href={\"#\" + section.id}>{section.name}</a></li>);\r\n                })}\r\n            </ul>\r\n        </div>\r\n        {\r\n            props.doc.sections.map(section => {\r\n                return <DocComponentSection key={section.id} section={section} />\r\n            })\r\n        }\r\n        <div className=\"\">\r\n            Version: {props.doc.version}\r\n        </div>\r\n    </>);\r\n}\r\n\r\n\r\n"],"sourceRoot":""}