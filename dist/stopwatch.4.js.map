{"version":3,"sources":["webpack:///./src/ui/components/common/PageHeader.tsx","webpack:///./src/ui/components/common/MainComponentBase.tsx","webpack:///./src/ui/hooks/settings.tsx","webpack:///./src/ui/components/settings/SettingsDevTools.tsx","webpack:///./src/ui/components/devtools/DevTools.tsx"],"names":["PageHeader","props","className","icon","cui-icon","title","description","MainComponentBase","routeData","MAPPIGNS","getRoute","routeName","React","name","setTitle","updateTitle","is","setPageTitle","setNavbarTitle","createArray","children","map","child","type","useSettings","DefaultSettings","settings","setSettings","onSaveSettings","window","$settingsFlow","perform","SETTINGS_FLOW_ACTIONS","GET_SETTINGS","onGetSettings","setDarkMode","darkMode","settingsSub","subscribe","finish","settingsUpdateSub","SET_SETTINGS","unsubscribe","id","soundEnabled","SettingsDevTools","onClear","$cui","toast","onSettingsUpdate","console","log","settingsClearSub","CLEAR_SETTINGS","actionsClearSub","$actionsFlow","ACTIONS_FLOW_ACTIONS","CLEAR_ACTIONS","trainingsClearSub","$flow","ACTIONS","CLEAR_TRAININGS","onClick","DevTools","get","emit","isWelcome"],"mappings":"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","file":"stopwatch.4.js","sourcesContent":["import * as React from 'react'\r\nimport { RouteDetails } from '../../../api/routes/routes';\r\nimport { TriangleShadow } from './TriangleShadow';\r\n\r\nexport interface PageHeaderProps {\r\n    title: string;\r\n    description: string;\r\n    icon?: string;\r\n}\r\n\r\nexport interface PageHeaderWrapperProps {\r\n    route: RouteDetails;\r\n}\r\n\r\n\r\nexport function PageHeader(props: PageHeaderProps) {\r\n    return (<div className=\"stopwatch-page-header cui-margin-bottom\">\r\n        <div className=\"cui-container cui-center cui-background-default\">\r\n            <div className=\"cui-padding-large-vertical\">\r\n                {props.icon && <div className=\"cui-flex-center cui-margin-bottom\"><span cui-icon={props.icon}></span></div>}\r\n                <h1 className=\"cui-h1 cui-text-center cui-margin-remove-bottom cui-anim-fade-in\">{props.title}</h1>\r\n                <p className=\"cui-text-center cui-text-muted cui-scale-y-in cui-animation-delay cui-margin-large-bottom\">{props.description}</p>\r\n            </div>\r\n        </div>\r\n        <TriangleShadow />\r\n    </div>);\r\n}\r\n\r\n\r\nexport function PageHeaderRouteWrapper(props: PageHeaderWrapperProps) {\r\n    return (<PageHeader title={props.route.name} description={props.route.description} icon={props.route.icon} />);\r\n}","import { is } from 'bpd-toolkit/dist/esm/index';\r\nimport * as React from 'react'\r\nimport { setPageTitle, setNavbarTitle, createArray } from '../../../core/helpers';\r\nimport { MAPPIGNS } from '../../../ui/routes';\r\nimport { PageHeader } from './PageHeader';\r\n\r\nexport interface MainComponentBaseProps {\r\n    routeName: string;\r\n    children: JSX.Element | JSX.Element[] | undefined;\r\n}\r\n\r\nexport interface BaseComponentProps {\r\n    setPageTitle: (value: string) => void;\r\n}\r\n\r\nexport function MainComponentBase(props: MainComponentBaseProps) {\r\n    const routeData = MAPPIGNS.getRoute(props.routeName);\r\n    const [title, setTitle] = React.useState(routeData.name);\r\n\r\n    function updateTitle(title: string) {\r\n        if (!is(title)) {\r\n            return;\r\n        }\r\n        setPageTitle(routeData.name);\r\n        setNavbarTitle(routeData.name);\r\n        setTitle(title)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setPageTitle(routeData.name);\r\n        setNavbarTitle(routeData.name);\r\n    }, [])\r\n    return (\r\n        <>\r\n            <PageHeader title={title} icon={routeData.icon} description={routeData.description} />\r\n            <div className=\"stopwatch-content-width cui-margin-top\">\r\n                {\r\n                    createArray(props.children).map(child => {\r\n                        if (typeof child.type === 'string') {\r\n                            return React.cloneElement(child, { ...child.props })\r\n                        }\r\n                        return React.cloneElement(child, { setPageTitle: updateTitle, ...child.props })\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import * as React from 'react'\r\nimport { DefaultSettings } from '../../core/statics';\r\nimport { Settings } from '../../core/models';\r\nimport { SETTINGS_FLOW_ACTIONS } from '../../app/flow/settings';\r\nimport { setDarkMode } from '../../core/helpers';\r\n\r\nexport function useSettings(): [Settings, (settings: Settings) => void] {\r\n    const [settings, setSettings] = React.useState({\r\n        ...DefaultSettings\r\n    })\r\n\r\n    function onSaveSettings() {\r\n        // Obtain settings from store\r\n        window.$settingsFlow.perform(SETTINGS_FLOW_ACTIONS.GET_SETTINGS);\r\n    }\r\n\r\n    function onGetSettings(settings: Settings) {\r\n        setSettings(settings);\r\n        setDarkMode(settings.darkMode);\r\n    }\r\n\r\n    function updateSettings(settings: Settings) {\r\n        window.$settingsFlow.perform(SETTINGS_FLOW_ACTIONS.SET_SETTINGS, settings);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        const settingsSub = window.$settingsFlow.subscribe(SETTINGS_FLOW_ACTIONS.GET_SETTINGS, { finish: onGetSettings })\r\n        const settingsUpdateSub = window.$settingsFlow.subscribe(SETTINGS_FLOW_ACTIONS.SET_SETTINGS, { finish: onSaveSettings })\r\n        onSaveSettings();\r\n        return () => {\r\n            window.$settingsFlow.unsubscribe(SETTINGS_FLOW_ACTIONS.GET_SETTINGS, settingsSub.id);\r\n            window.$settingsFlow.unsubscribe(SETTINGS_FLOW_ACTIONS.SET_SETTINGS, settingsUpdateSub.id);\r\n        }\r\n    }, [settings.darkMode, settings.soundEnabled])\r\n\r\n    return [settings, updateSettings];\r\n}\r\n","import * as React from 'react'\r\nimport { ACTIONS_FLOW_ACTIONS } from '../../../app/flow/actions';\r\nimport { SETTINGS_FLOW_ACTIONS } from '../../../app/flow/settings';\r\nimport { ACTIONS } from '../../../app/flow/trainings';\r\n\r\nexport function SettingsDevTools() {\r\n    function onClear() {\r\n        window.$cui.toast(\"Data cleared\")\r\n    }\r\n\r\n    function onSettingsUpdate() {\r\n        console.log(\"Settings cleared\")\r\n        window.$settingsFlow.perform(SETTINGS_FLOW_ACTIONS.GET_SETTINGS);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        const settingsClearSub = window.$settingsFlow.subscribe(SETTINGS_FLOW_ACTIONS.CLEAR_SETTINGS, { finish: onSettingsUpdate });\r\n        const actionsClearSub = window.$actionsFlow.subscribe(ACTIONS_FLOW_ACTIONS.CLEAR_ACTIONS, { finish: onClear });\r\n        const trainingsClearSub = window.$flow.subscribe(ACTIONS.CLEAR_TRAININGS, { finish: onClear });\r\n\r\n\r\n        return () => {\r\n\r\n            window.$settingsFlow.unsubscribe(SETTINGS_FLOW_ACTIONS.CLEAR_SETTINGS, settingsClearSub.id);\r\n            window.$actionsFlow.unsubscribe(ACTIONS_FLOW_ACTIONS.CLEAR_ACTIONS, actionsClearSub.id);\r\n            window.$flow.unsubscribe(ACTIONS.CLEAR_TRAININGS, trainingsClearSub.id);\r\n        }\r\n    }, [])\r\n    return (<div className=\"cui-section\">\r\n        <h3 className=\"cui-h3\">Dev tools</h3>\r\n        <div className=\"\">\r\n            <div></div>\r\n            <button className=\"cui-button cui-margin-small cui-default \" onClick={() => { window.$actionsFlow.perform(ACTIONS_FLOW_ACTIONS.CLEAR_ACTIONS) }}>Clear actions only</button>\r\n        </div><div>\r\n            <button className=\"cui-button cui-margin-small cui-default\" onClick={() => { window.$flow.perform(ACTIONS.CLEAR_TRAININGS) }}>Clear trainings only</button>\r\n        </div><div>\r\n            <button className=\"cui-button cui-margin-small cui-default\" onClick={() => { window.$settingsFlow.perform(SETTINGS_FLOW_ACTIONS.CLEAR_SETTINGS) }}>Clear settings only</button>\r\n        </div><div>\r\n            <button className=\"cui-button cui-margin-small cui-error\" onClick={() => {\r\n                window.$actionsFlow.perform(ACTIONS_FLOW_ACTIONS.CLEAR_ACTIONS)\r\n                window.$flow.perform(ACTIONS.CLEAR_TRAININGS)\r\n                window.$settingsFlow.perform(SETTINGS_FLOW_ACTIONS.CLEAR_SETTINGS)\r\n            }}>Clear data</button>\r\n        </div>\r\n    </div>);\r\n}\r\n","import * as React from 'react'\r\nimport { useSettings } from '../../../ui/hooks/settings';\r\nimport { MainComponentBase } from '../common/MainComponentBase';\r\nimport { SettingsDevTools } from '../settings/SettingsDevTools';\r\n\r\nexport default function DevTools() {\r\n    const [settings] = useSettings();\r\n    return (\r\n        <MainComponentBase routeName=\"devtools\">\r\n            <div className=\"cui-section\">\r\n                <button className=\"cui-button cui-default\" onClick={() => {\r\n                    window.$cui.get(\"#welcome-dialog\").emit(\"open\");\r\n                }}>Show tutorial dialog</button>\r\n            </div>\r\n            <div>\r\n                Welcome screen status: {settings.isWelcome ? \"Yes\" : \"No\"}\r\n            </div>\r\n            <SettingsDevTools />\r\n        </MainComponentBase>);\r\n}\r\n"],"sourceRoot":""}