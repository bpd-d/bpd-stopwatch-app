{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/core/helpers.ts","webpack:///./src/ui/components/home/list.tsx","webpack:///./src/ui/components/home/home.tsx","webpack:///./src/ui/error.tsx","webpack:///./src/ui/components/common/NavbarLink.tsx","webpack:///./src/ui/components/navbar/navbar.tsx","webpack:///./src/ui/components/offacanvas/offcanvas.tsx","webpack:///./src/core/models.ts","webpack:///./src/core/statics.ts","webpack:///./src/app/flow/actions.ts","webpack:///./src/ui/components/common/BpdActionIcon.tsx","webpack:///./src/core/validators.ts","webpack:///./src/ui/components/common/BpdDialog.tsx","webpack:///./src/ui/components/common/ErrorsList.tsx","webpack:///./src/ui/components/actions/AddActionDialog.tsx","webpack:///./src/ui/components/common/PageHeader.tsx","webpack:///./src/ui/components/actions/StopwatchActionsComponent.tsx","webpack:///./src/ui/components/common/Dialogs.ts","webpack:///./src/ui/components/common/GoBack.tsx","webpack:///./src/ui/components/common/NotFound.tsx","webpack:///./src/ui/components/actions/ActionsSelect.tsx","webpack:///./src/ui/components/trainings/EditRoundDialog.tsx","webpack:///./src/ui/components/trainings/EditRoundListItem.tsx","webpack:///./src/ui/components/trainings/EditTraining.tsx","webpack:///./src/api/screen/screen.ts","webpack:///./src/api/stopwatch/stopwatch.ts","webpack:///./src/app/flow/settings.ts","webpack:///./src/ui/components/perform/PerformTraining.tsx","webpack:///./src/ui/components/settings/SettingsSwitchListItem.tsx","webpack:///./src/ui/components/settings/StopwatchSettings.tsx","webpack:///./src/ui/components/about/About.tsx","webpack:///./src/ui/components/footer/Footer.tsx","webpack:///./src/ui/app.tsx","webpack:///./src/core/services/storage.tsx","webpack:///./src/app/flow/trainings.ts","webpack:///./src/index.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","showMessage","title","message","$cui","alert","calculateDuration","actions","is","reduce","duration","calcDisplayTimer","seconds","getDisplayTimerValue","restSeconds","Math","floor","secondsLeft","setDarkMode","darkMode","getUtils","setLightMode","calculateProgress","current","max","getTotalDuration","training","rounds","getBgClassByType","type","TrainingList","props","className","list","map","item","id","TrainingListItem","onDelete","history","useHistory","React","deleteSubscription","$flow","subscribe","finish","perform","unsubscribe","onClick","toUpperCase","getActionsDuration","to","cui-icon","Home","state","updateList","onDeleteTrainingComplete","deleteTraining","this","subscription","onDeleteSubscription","elementIdx","findIndex","onYes","flag","setState","NoTrainings","ErrorRoute","NavbarLink","shouldClose","emit","exact","activeClassName","url","Navbar","currentLocation","useLocation","currentSite","soundEnabled","split","pathname","toLocaleUpperCase","cui-open","class","OffCanvas","cui-off-canvas","href","cui-close","StopwatchActionType","DefaultActions","removable","editable","ERROR_CODES","ACTIONS_FLOW_ACTIONS","ActionsFlow","service","getAllActions","action","setAction","removeAction","BpdActionIcon","data-tooltip","ValidatorBase","status","errors","performValidation","e","errorMsg","console","error","TrainingValidator","RoundValidator","ActionValidator","BpdDialog","cui-dialog","body","footer","ErrorsList","index","AddActionDialog","setErrors","onValueChange","event","target","checked","placeholder","onChange","min","htmlFor","onSave","actionValidator","validate","dialogCui","PageHeader","description","defaultAction","StopwatchActionsComponent","onConfirm","$actionsFlow","onGetAll","onAddOrEditClick","getAllSub","setActionSub","removeActionSub","withRouter","goBack","NotFound","classes","ActionsSelect","ev","onSelect","find","EditRoundDialog","useState","selected","setActions","definedActions","round","newActions","onDeleteAction","validation","EditRoundListItem","onEdit","EditTrainingSection","currentIndex","currentRound","setDefinedActions","onRoundEdit","onRoundDelete","onOnfirm","updateRoundsState","onFormChange","includes","onDeleteTrainingSub","onCancel","getDefinedActions","deleteTraininSub","getDefinedActionsSub","rows","validaton","join","updateOrInsertRound","useParams","onUpdateTraining","onGetTraining","log","updateTrainingSub","getTrainingSub","KeepAwakeToggle","screen","keepAwake","WakeLockScreen","navigator","wakeLock","request","then","wakelock","wakeLockRequest","release","KeepScreenAwakeFeature","getToggle","activate","StopWatchStateOptions","StopWatch","undefined","callback","setTimeout","tick","stop","clearTimeout","SETTINGS_FLOW_ACTIONS","SettingsFlow","isSoundEnabled","setSoundEnabled","isDarkMode","setSettings","getSettings","defaultCurrent","roundIdx","actionIdx","roundDuration","totalDuration","PerfromTraining","stopwatch","setStopwatch","setCurrent","canPlay","setCanPlay","timer","startBtnCls","getStartBtnCls","timerCls","progress","roundProgress","trainingProgress","watchState","setWatchState","errorMessage","setErrorMessage","currentRef","trainingRef","roundValidator","setDefaultCurrentState","getClassByType","onStopwatchTick","currentTime","ct","setStopWatchState","getState","time","note","document","getElementById","play","playSound","playEndSound","reset","nextActionIdx","newAction","nextRoundIdx","newRound","setNextAction","watchstate","timeData","calculateRoundCurrentTime","trainginProgress","resut","idx","calculateTrainingProgress","act","onGetPlaySound","getTrainingSubscription","settingsPlaySound","$settingsFlow","onTick","cui-circle-progress","pause","resume","start","src","SettingsSwitchListItem","label","onUpdate","StopwatchSettings","settings","newSettings","onUpdateSettings","onGetSettings","settingsSub","settingsUpdateSub","About","Footer","Date","getFullYear","App","darkModeSub","onDarkMode","path","component","EditTraining","TrainingsStorageService","BpdStorage","getTrainings","onAction","len","addTraining","Error","res","getAny","setAny","setTrainings","ActionStorageService","getActionsFromStorage","existingIndex","getIndex","setActionsToStorage","val","SettingsService","TrainingsFlow","getAllTrainings","updateTraining","getTraining","rootElement","app_icons","require","setup","CuiSetupInit","logLevel","root","cuiSetup","icons","CuiIconsPack","traningsFlow","actionsFlow","settingsFlow","FlowFactory","getActions","cuiInit","init","ReactDOM"],"mappings":"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","file":"stopwatch.index.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([32,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { is } from \"../../node_modules/bpd-toolkit/dist/esm/index\";\r\nimport { Round, StopwatchAction, Training } from \"./models\";\r\n\r\nexport function showMessage(title: string, message: string) {\r\n    window.$cui.alert(\"common-info-dialog\", \"Info\", {\r\n        title: title,\r\n        message: message\r\n    })\r\n}\r\n\r\nexport function calculateDuration(actions: StopwatchAction[]) {\r\n    return is(actions) ? actions.reduce<number>((result: number, value: StopwatchAction) => {\r\n        return result + value.duration;\r\n    }, 0) : 0\r\n}\r\n\r\nexport function calcDisplayTimer(seconds: number): string {\r\n    if (seconds < 0) {\r\n        return \"Error\"\r\n    }\r\n    if (seconds < 60) {\r\n        return \"00:\" + getDisplayTimerValue(seconds)\r\n    } else if (seconds < 3600) {\r\n        let minutes = Math.floor(seconds / 60);\r\n        let restSeconds = seconds % 60;\r\n        return getDisplayTimerValue(minutes) + \":\" + getDisplayTimerValue(restSeconds);\r\n    } else {\r\n        let hours = Math.floor(seconds / 3600);\r\n        let secondsLeft = seconds % 3600\r\n        return getDisplayTimerValue(hours) + \":\" + calcDisplayTimer(secondsLeft);\r\n    }\r\n}\r\n\r\nexport function getDisplayTimerValue(value: number): string {\r\n    if (value < 0 || value > 59) {\r\n        return \"Error\";\r\n    }\r\n    return value < 10 ? \"0\" + value : \"\" + value;\r\n}\r\n\r\nexport function setDarkMode(darkMode: boolean) {\r\n    if (window.$cui) {\r\n        let utils = window.$cui.getUtils();\r\n        utils.setLightMode(darkMode ? \"dark\" : \"light\");\r\n    }\r\n}\r\n\r\nexport function calculateProgress(current: number, max: number) {\r\n    return Math.floor((current * 100) / max);\r\n}\r\n\r\n/**\r\n * Calculates total actions count and total duration of the training\r\n * @param training \r\n * @returns total actions count and total duration\r\n */\r\nexport function getTotalDuration(training: Training) {\r\n    return training.rounds.reduce<[number, number]>((result: [number, number], current: Round) => {\r\n        return [result[0] + current.actions.length, result[1] + calculateDuration(current.actions)];\r\n    }, [0, 0]);\r\n}\r\n\r\nexport function getBgClassByType(type: string) {\r\n    return \"action-background-\" + type;\r\n}","import * as React from \"react\";\r\nimport { Round, Training } from \"../../../core/models\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { calculateDuration } from \"../../../core/helpers\";\r\n\r\nexport interface TrainingListProps {\r\n    list: Training[];\r\n    onDelete: (id: number) => void;\r\n}\r\n\r\nexport interface TrainingListItemProps {\r\n    data: Training;\r\n    onDelete: (id: number) => void;\r\n}\r\n\r\nexport function TrainingList(props: TrainingListProps) {\r\n    return <ul className=\"cui-list\">\r\n        {props.list && props.list.map(item => {\r\n            return <li key={item.id} className=\"stopwatch-content-width\"><TrainingListItem data={item} onDelete={props.onDelete} /></li>\r\n        })}\r\n    </ul>\r\n}\r\n\r\nexport function TrainingListItem(props: TrainingListItemProps) {\r\n    const deleteTrainingAction = \"DELETE_TRAINING\";\r\n    let history = useHistory();\r\n\r\n    function getActionsDuration(training: Training) {\r\n        return training.rounds.reduce<[number, number]>((result: [number, number], current: Round) => {\r\n            return [result[0] + current.actions.length, result[1] + calculateDuration(current.actions)];\r\n        }, [0, 0]);\r\n    }\r\n\r\n    function getDetails(training: Training) {\r\n        const [actions, duration] = getActionsDuration(training);\r\n        return `Duration: ${duration} seconds`;\r\n    }\r\n\r\n    function onItemClick(id: number) {\r\n        history.push(`/trainings/edit/${props.data.id}`)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        const deleteSubscription = window.$flow.subscribe(deleteTrainingAction).finish((result) => {\r\n            window.$flow.perform(\"GET_TRAININGS\")\r\n        });\r\n\r\n        return () => {\r\n            window.$flow.unsubscribe(deleteTrainingAction, deleteSubscription.id)\r\n        }\r\n    })\r\n\r\n    return <div className=\"cui-flex cui-animation-fade-in cui-padding-bottom cui-padding-top\">\r\n        <div className=\"cui-flex-grow\" onClick={() => {\r\n            onItemClick(props.data.id)\r\n        }}>\r\n            <div className=\"cui-flex cui-middle cui-nowrap\">\r\n                <div className=\"training-list-item-icon\">\r\n                    <span className=\"cui-text-bold\">{props.data.name[0].toUpperCase()}</span>\r\n                </div>\r\n                <div className=\"cui-flex-grow cui-margin-left\">\r\n                    <span >{props.data.name}</span>\r\n                    <div className=\"cui-text-muted cui-text-truncate cui-overflow-hidden\">\r\n                        <span>{getDetails(props.data)}</span>\r\n                    </div></div>\r\n            </div>\r\n        </div>\r\n        <div className=\"cui-flex-shrink cui-flex-center\">\r\n            <Link to={`/trainings/perform/${props.data.id}`} className=\"cui-icon-button cui-bold\" cui-icon=\"media_play\"></Link>\r\n        </div>\r\n    </div>\r\n}\r\n","import * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TrainingList } from \"./list\";\r\nimport { Training, WarmUp, CoolDown, Exercise } from \"../../../core/models\";\r\nimport { FlowTask } from \"../../../../node_modules/bpd-flow/dist/index\";\r\nimport { showMessage } from \"../../../core/helpers\";\r\n\r\nexport interface HomeProps {\r\n    site?: string;\r\n}\r\n\r\nexport interface HomeState {\r\n    list: Training[];\r\n}\r\n\r\nexport class Home extends React.Component<any, HomeState> {\r\n    list: Training[];\r\n    subscription: FlowTask<Training[]>\r\n    onDeleteSubscription: FlowTask<boolean>;\r\n    state: HomeState;\r\n    constructor(props: HomeProps) {\r\n        super(props);\r\n        this.state = {\r\n            list: []\r\n        }\r\n\r\n        this.updateList = this.updateList.bind(this);\r\n        this.onDeleteTrainingComplete = this.onDeleteTrainingComplete.bind(this);\r\n        this.deleteTraining = this.deleteTraining.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.subscription = window.$flow.subscribe(\"GET_ALL_TRAININGS\");\r\n        this.subscription.finish(this.updateList);\r\n        this.onDeleteSubscription = window.$flow.subscribe(\"DELETE_TRAINING\", { finish: this.onDeleteTrainingComplete })\r\n        window.$flow.perform(\"GET_ALL_TRAININGS\");\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.$flow.unsubscribe(\"GET_ALL_TRAININGS\", this.subscription.id);\r\n        window.$flow.unsubscribe(\"DELETE_TRAINING\", this.onDeleteSubscription.id);\r\n    }\r\n\r\n    deleteTraining(id: number) {\r\n        let list = [...this.state.list];\r\n        let elementIdx = list.findIndex(item => item.id === id);\r\n        if (elementIdx > -1) {\r\n            window.$cui.alert(\"delete-training-dialog\", \"YesNoCancel\", {\r\n                title: \"Delete training\",\r\n                message: \"Do you really want to delete training: \" + list[elementIdx].name + \"?\",\r\n                onYes: () => {\r\n                    window.$flow.perform(\"DELETE_TRAINING\", id)\r\n                }\r\n            })\r\n        } else {\r\n            showMessage(\"Delete training\", \"We cannot remove this training. Identified doesn't match.\")\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onDeleteTrainingComplete(flag: boolean) {\r\n        if (flag) {\r\n            window.$flow.perform(\"GET_ALL_TRAININGS\");\r\n        } else {\r\n            showMessage(\"Delete training\", \"Service could not remove training\")\r\n        }\r\n    }\r\n\r\n    updateList(list: Training[]) {\r\n        this.setState({\r\n            ...this.state,\r\n            list: list\r\n        });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return <div className=\"stopwatch-page-layout\" >\r\n            <div className=\"stopwatch-page-top cui-container cui-center\">\r\n                <div>\r\n                    <span className=\"cui-icon stopwatch-icon\" cui-icon=\"stopwatch\"></span>\r\n                    <h1 className=\"cui-h3 cui-text-center cui-margin-small-top stopwatch-title\">Stopwatch</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"stopwatch-page-bottom\">\r\n                <div className=\"stopwatch-home-list cui-overflow-y-auto\">\r\n                    {this.state.list.length > 0 ? <TrainingList list={this.state.list} onDelete={this.deleteTraining} /> : <NoTrainings />}\r\n                </div>\r\n            </div>\r\n            <div className=\"cui-position-float cui-position-bottom cui-position-right cui-margin cui-margin-large--l\">\r\n                <Link to=\"/trainings/edit/new\" className=\"cui-button cui-icon cui-icon-margin cui-background-default cui-box-shadow cui-rounded\" cui-icon=\"plus\">Add New</Link>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport function NoTrainings() {\r\n    return <div className=\"cui-container cui-center\">\r\n        <p className=\"cui-text-muted cui-text-center\">There are no trainings recorded. <Link className=\"cui-link cui-accent\" to=\"/trainings/edit/new\">Add new</Link> training to start your execises!</p>\r\n    </div>;\r\n}\r\n","import * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport interface ErrorProps {\r\n}\r\n\r\n// 'HelloProps' describes the shape of props.\r\n// State is never set so we use the '{}' type.\r\nexport class ErrorRoute extends React.Component<ErrorProps, {}> {\r\n    constructor(props: ErrorProps) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return <div className=\"cui-section cui-flex-center cui-height-viewport-1-2\">\r\n            <div className=\"cui-card cui-large\">\r\n                <div className=\"cui-card-header cui-text-error\">\r\n                    <span className=\"cui-card-title\">Error</span>\r\n                </div>\r\n                <div className=\"cui-card-body\">\r\n                    It appears that page you looking for does not exist.\r\n                    Try to look for it again or go back to our Home page\r\n                </div>\r\n                <div className=\"cui-card-footer cui-flex cui-right\">\r\n                    <Link to=\"/\" className=\"cui-link\">Go Home</Link>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    }\r\n}","import * as React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport interface NavbarLinkProps {\r\n    url: string;\r\n    name: string;\r\n    shouldClose?: boolean;\r\n    class?: string;\r\n}\r\n\r\nexport class NavbarLink extends React.Component<NavbarLinkProps, {}> {\r\n    constructor(props: NavbarLinkProps) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n\r\n    onClick() {\r\n        if (this.props.shouldClose) {\r\n            let offcanvas = window.$cui.get(\"#app-offcanvas\");\r\n            offcanvas.emit('close');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <NavLink exact activeClassName=\"cui-active\" className={this.props.class} to={this.props.url} onClick={this.onClick}>{this.props.name}</NavLink>;\r\n    }\r\n}","import * as React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { NavbarLink } from \"../common/NavbarLink\";\r\n\r\nexport interface NavbarState {\r\n    currentSite: string;\r\n    darkMode: boolean;\r\n    soundEnabled: boolean\r\n}\r\n\r\nexport interface NavbarProps {\r\n    site?: string;\r\n    location?: any;\r\n}\r\n\r\nexport function Navbar(props: NavbarProps) {\r\n    const currentLocation = useLocation();\r\n    const [state, setState] = React.useState<NavbarState>({\r\n        currentSite: \"\",\r\n        darkMode: false,\r\n        soundEnabled: false\r\n    });\r\n\r\n    function onGetSound(flag: boolean): void {\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        let split = currentLocation.pathname.split('/');\r\n        setState({\r\n            ...state,\r\n            currentSite: split.length > 1 ? currentLocation.pathname.split('/')[1].toLocaleUpperCase() : \"\"\r\n        })\r\n    }, [currentLocation])\r\n    return <nav className={\"cui-navbar cui-sticky cui-box-shadow-remove stopwatch-layout-navigation\"}>\r\n        <div className=\"cui-navbar-left cui-width-1-1 cui-width-auto--m cui-flex cui-middle cui-between\" id=\"navbar-left\">\r\n            <ul>\r\n                {state.currentSite && <li><Link className=\"cui-icon\" to=\"/\" cui-icon=\"stopwatch_small\"></Link></li>}\r\n            </ul>\r\n            <a className=\"cui-icon cui-padding cui-button cui-hidden--m\" cui-icon=\"menu\" cui-open=\"target: #app-offcanvas\"></a>\r\n        </div>\r\n\r\n        <ul className=\"cui-navbar-right cui-visible--m\">\r\n            <li><NavbarLink class=\"cui-navbar-item\" url=\"/\" name=\"Home\" /></li>\r\n            <li><NavbarLink class=\"cui-navbar-item\" url=\"/actions\" name=\"Actions\" /></li>\r\n            <li><NavbarLink class=\"cui-navbar-item\" url=\"/settings\" name=\"Settings\" /></li>\r\n            <li><NavbarLink class=\"cui-navbar-item\" url=\"/about\" name=\"About\" /></li>\r\n        </ul>\r\n    </nav>\r\n}","import * as React from \"react\";\r\nimport { ElementManager } from \"../../../../node_modules/cui-light/dist/index\";\r\nimport { NavbarLink } from \"../common/NavbarLink\";\r\n\r\nexport interface OffCanvasProps {\r\n}\r\n\r\n// 'HelloProps' describes the shape of props.\r\n// State is never set so we use the '{}' type.\r\nexport class OffCanvas extends React.Component<OffCanvasProps, {}> {\r\n    constructor(props: OffCanvasProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"cui-off-canvas\" id=\"app-offcanvas\" cui-off-canvas=\"escClose: y; outClose: y\">\r\n            <div className=\"cui-off-canvas-container cui-card off-canvas-layout\">\r\n                <div className=\"cui-card-header cui-flex cui-middle cui-right\">\r\n                    <a href=\"#\" className=\"cui-icon\" cui-icon=\"close\" cui-close=\"\"></a>\r\n                </div>\r\n                <div className=\"off-canvas-content cui-card-body\">\r\n\r\n                    <div className=\"cui-width-1-1\">\r\n                        <h3 className=\"cui-h3\">Menu</h3>\r\n                        <ul className=\"cui-list cui-interactive cui-margin-top\">\r\n                            <li><NavbarLink url=\"/\" name=\"Home\" shouldClose={true} /></li>\r\n                            <li><NavbarLink url=\"/actions\" name=\"Actions\" shouldClose={true} /></li>\r\n                            <li><NavbarLink url=\"/settings\" name=\"Settings\" shouldClose={true} /></li>\r\n                            <li><NavbarLink url=\"/about\" name=\"About\" shouldClose={true} /></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","export const StopwatchActionType = {\r\n    EXERCISE: 'exercise',\r\n    BREAK: 'break',\r\n    COOLDOWN: \"cooldown\",\r\n    WARMUP: \"warmup\"\r\n}\r\n\r\nexport interface Settings {\r\n    darkMode: boolean;\r\n    soundEnabled: boolean;\r\n}\r\n\r\nexport interface StopwatchAction {\r\n    name: string;\r\n    duration: number;\r\n    type?: string;\r\n    color?: string;\r\n    removable?: boolean;\r\n    editable?: boolean;\r\n}\r\n\r\nexport interface Round {\r\n    actions: StopwatchAction[];\r\n    break?: number;\r\n}\r\n\r\nexport interface Training {\r\n    name: string;\r\n    description?: string;\r\n    id?: number;\r\n    rounds: Round[];\r\n}\r\n\r\nexport class Exercise implements StopwatchAction {\r\n    name: string;\r\n    duration: number;\r\n    type: string = StopwatchActionType.EXERCISE;\r\n    removable: false;\r\n    constructor(duration: number, name?: string) {\r\n        this.duration = duration;\r\n        this.name = name ? name : 'Exercise';\r\n    }\r\n}\r\n\r\nexport class WarmUp implements StopwatchAction {\r\n    name: string;\r\n    duration: number;\r\n    type: string = StopwatchActionType.WARMUP;\r\n    removable: boolean = false;\r\n\r\n    constructor(duration: number) {\r\n        this.duration = duration;\r\n        this.name = \"Warm Up\"\r\n    }\r\n}\r\n\r\nexport class CoolDown implements StopwatchAction {\r\n    name: string;\r\n    duration: number;\r\n    type: string = StopwatchActionType.COOLDOWN;\r\n    removable: false;\r\n    constructor(duration: number, name?: string) {\r\n        this.duration = duration;\r\n        this.name = name ? name : \"Cooldown\";\r\n    }\r\n}","import { StopwatchAction, StopwatchActionType } from \"./models\";\r\n\r\nexport const DefaultActions: StopwatchAction[] = [{\r\n    name: \"Warmup\",\r\n    duration: 5,\r\n    type: StopwatchActionType.WARMUP,\r\n    removable: false,\r\n    editable: false\r\n},\r\n{\r\n    name: \"Exercise\",\r\n    duration: 30,\r\n    type: StopwatchActionType.EXERCISE,\r\n    removable: false,\r\n    editable: false\r\n},\r\n{\r\n    name: \"Break\",\r\n    duration: 60,\r\n    type: StopwatchActionType.BREAK,\r\n    removable: false,\r\n    editable: false\r\n},\r\n{\r\n    name: \"Cooldown\",\r\n    duration: 90,\r\n    type: StopwatchActionType.WARMUP,\r\n    removable: false,\r\n    editable: false\r\n}]\r\n\r\nexport const ERROR_CODES = {\r\n    e0000: \"OK\",\r\n    e0100: \"Training is empty\",\r\n    e0101: \"Training name is not provided\",\r\n    e0102: \"Training has no rounds\",\r\n    e0200: \"Round is empty\",\r\n    e0201: \"Round has no actions\",\r\n    e0300: \"Action is empty\",\r\n    e0301: \"Action name is not provided\",\r\n    e0302: \"Action type is not provided\",\r\n    e0303: \"Action duration is not correct\"\r\n\r\n}","import { IActionsService } from \"../../core/services/interfaces\"\r\nimport { StopwatchAction } from \"../../core/models\";\r\n\r\nexport const ACTIONS_FLOW_ACTIONS = {\r\n    GET_ALL: \"GET_ALL\",\r\n    SET_ACTION: \"SET_ACTION\",\r\n    REMOVE_ACTION: \"REMOVE_ACTION\"\r\n}\r\n\r\nexport type ActionsFlowInput = StopwatchAction;\r\nexport type ActionsFlowOutput = boolean | StopwatchAction[];\r\n\r\nexport class ActionsFlow {\r\n    #service: IActionsService;\r\n    constructor(service: IActionsService) {\r\n        this.#service = service;\r\n    }\r\n    getActions() {\r\n        return {\r\n            [ACTIONS_FLOW_ACTIONS.GET_ALL]: () => {\r\n                return this.#service.getAllActions();\r\n            },\r\n            [ACTIONS_FLOW_ACTIONS.SET_ACTION]: (action: StopwatchAction) => {\r\n                return this.#service.setAction(action);\r\n            },\r\n            [ACTIONS_FLOW_ACTIONS.REMOVE_ACTION]: (action: StopwatchAction) => {\r\n                return this.#service.removeAction(action);\r\n            }\r\n        }\r\n    }\r\n}","import * as React from 'react'\r\n\r\nexport interface BpdActionIconProps {\r\n    type: string;\r\n}\r\n\r\nexport function BpdActionIcon(props: BpdActionIconProps) {\r\n    return (\r\n        <span className=\"cui-icon cui-tooltip\" data-tooltip={props.type} cui-icon={`stopwatch_${props.type}`}></span>\r\n    );\r\n}\r\n","import { Round, StopwatchAction, Training } from \"./models\";\r\nimport { ERROR_CODES } from \"./statics\";\r\nimport { is } from '../../node_modules/bpd-toolkit/dist/esm/index';\r\n\r\nexport interface ValidationResult {\r\n    status: boolean;\r\n    errors?: string[];\r\n}\r\n\r\nexport interface IValidator<T> {\r\n    validate(t: T): ValidationResult\r\n}\r\n\r\nexport abstract class ValidatorBase<T> implements IValidator<T> {\r\n    validate(t: T): ValidationResult {\r\n        const result: ValidationResult = { status: true }\r\n        try {\r\n            let errors = this.performValidation(t);\r\n            if (errors && errors.length > 0) {\r\n                result.status = false;\r\n                result.errors = errors;\r\n            }\r\n        } catch (e) {\r\n            let errorMsg = \"An error occured during validation\";\r\n            console.error(errorMsg)\r\n            console.error(e)\r\n            result.status = false;\r\n            result.errors = [errorMsg + \": \" + e.message]\r\n        }\r\n        return result;\r\n    }\r\n\r\n    protected abstract performValidation(t: T): string[];\r\n}\r\n\r\nexport class TrainingValidator extends ValidatorBase<Training> {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    protected performValidation(t: Training): string[] {\r\n        if (!is(t)) {\r\n            return ([ERROR_CODES.e0100]);\r\n        }\r\n        let errors = []\r\n        if (!is(t.name)) {\r\n            errors.push(ERROR_CODES.e0101)\r\n        }\r\n        if (!is(t.rounds)) {\r\n            errors.push(ERROR_CODES.e0102)\r\n        }\r\n        return errors;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class RoundValidator extends ValidatorBase<Round> {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    protected performValidation(t: Round): string[] {\r\n        if (!is(t)) {\r\n            return ([ERROR_CODES.e0200]);\r\n        }\r\n        if (!is(t.actions))\r\n            return [ERROR_CODES.e0201]\r\n    }\r\n}\r\n\r\nexport class ActionValidator extends ValidatorBase<StopwatchAction> {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    protected performValidation(t: StopwatchAction): string[] {\r\n        if (!is(t)) {\r\n            return ([ERROR_CODES.e0300]);\r\n        }\r\n        let errors = []\r\n        if (!is(t.name)) {\r\n            errors.push(ERROR_CODES.e0301)\r\n        }\r\n        if (!is(t.type)) {\r\n            errors.push(ERROR_CODES.e0302)\r\n        }\r\n        if (t.duration < 0) {\r\n            errors.push(ERROR_CODES.e0303)\r\n        }\r\n        return errors;\r\n    }\r\n}","import * as React from 'react'\r\n\r\nexport interface BpdDialogProps {\r\n    title: string;\r\n    id: string;\r\n    body?: JSX.Element;\r\n    footer?: JSX.Element;\r\n    className?: string;\r\n}\r\n\r\nexport function BpdDialog(props: BpdDialogProps) {\r\n    React.useEffect(() => {\r\n    }, [props])\r\n    return (<div className={`cui-dialog ${props.className ?? \"\"}`} cui-dialog=\"escClose: Y\" id={props.id}>\r\n        <div className=\"cui-dialog-container\">\r\n            <div className=\"cui-dialog-header\">\r\n                <span className=\"cui-dialog-title\">{props.title}</span>\r\n                <a className=\"cui-icon\" cui-icon=\"close\" cui-close=\"\"></a>\r\n            </div>\r\n            <div className=\"cui-dialog-body\">\r\n                {props.body}\r\n            </div>\r\n\r\n            {props.footer && (<div className=\"cui-dialog-footer\">\r\n                {props.footer}\r\n            </div>)}\r\n\r\n        </div>\r\n    </div>)\r\n}\r\n","import * as React from 'react'\r\n\r\nexport interface ErrorsListProps {\r\n    errors: string[];\r\n}\r\n\r\n\r\nexport function ErrorsList(props: ErrorsListProps) {\r\n    return (\r\n        <>\r\n            {props.errors &&\r\n                props.errors.length > 0 &&\r\n                <ul className=\"cui-list\">\r\n                    {\r\n                        props.errors.map((error: string, index: number) => {\r\n                            return <li key={index} className=\"cui-animation-fade-in\"><span className=\"cui-text-error\">{error}</span></li>\r\n                        })\r\n                    }\r\n                </ul>}\r\n        </>\r\n    );\r\n}\r\n","import * as React from \"react\";\r\nimport { StopwatchAction, StopwatchActionType } from \"../../../core/models\";\r\nimport { ActionValidator } from \"../../../core/validators\";\r\nimport { BpdDialog } from \"../common/BpdDialog\";\r\nimport { ErrorsList } from \"../common/ErrorsList\";\r\n\r\nexport interface AddActionDialogProps {\r\n    action: StopwatchAction;\r\n    onSave: (action: StopwatchAction) => void;\r\n}\r\n\r\nexport function AddActionDialog(props: AddActionDialogProps) {\r\n    const [state, setState] = React.useState<StopwatchAction>({\r\n        name: \"\",\r\n        duration: 5,\r\n        removable: true,\r\n        editable: false,\r\n        type: StopwatchActionType.EXERCISE\r\n    })\r\n\r\n    const [errors, setErrors] = React.useState<string[]>([])\r\n\r\n    function onValueChange(event: any) {\r\n        let name = event.target.name;\r\n\r\n        switch (name) {\r\n            case \"name\":\r\n            case \"duration\":\r\n            case \"type\":\r\n                setState({ ...state, [name]: event.target.value })\r\n                break;\r\n            case \"removable\":\r\n            case \"editable\":\r\n                setState({ ...state, [name]: event.target.checked })\r\n                break;\r\n        }\r\n    }\r\n\r\n    function onSave() {\r\n        if (props.onSave) {\r\n            let action: StopwatchAction = { ...state };\r\n            let actionValidator = new ActionValidator().validate(action)\r\n            if (actionValidator.status) {\r\n                let dialogCui = window.$cui.get(\"#add-action-dialog\");\r\n                props.onSave(action);\r\n                dialogCui.emit('close');\r\n            }\r\n            setErrors(actionValidator.errors);\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (props.action) {\r\n            setState({\r\n                ...props.action\r\n            })\r\n            setErrors([]);\r\n        }\r\n        return () => {\r\n\r\n        }\r\n    }, [props.action])\r\n    return (<BpdDialog\r\n        title=\"Add new\"\r\n        id=\"add-action-dialog\"\r\n        body={<>\r\n            <div className=\"cui-form\">\r\n                <label className=\"cui-form-label\">Name</label>\r\n                <input className=\"cui-input stopwatch-input-width\" type=\"text\" name=\"name\" value={state.name} placeholder=\"Name\" onChange={onValueChange} />\r\n            </div>\r\n            <div className=\"cui-form cui-margin-top\">\r\n                <label className=\"cui-form-label\">Duration</label>\r\n                <input className=\"cui-input stopwatch-input-width\" type=\"number\" min=\"0\" max=\"100\" name=\"duration\" value={state.duration} placeholder=\"Duration\" onChange={onValueChange} />\r\n            </div>\r\n            <div className=\"cui-form cui-margin-top\">\r\n                <label className=\"cui-form-label\">Type</label>\r\n                <select className=\"cui-select stopwatch-input-width\" value={state.type} name=\"type\" onChange={onValueChange} >\r\n                    <option value=\"warmup\">Warmup</option>\r\n                    <option value=\"exercise\">Exercise</option>\r\n                    <option value=\"break\">Break</option>\r\n                    <option value=\"cooldown\">Cooldown</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"cui-form cui-flex cui-middle cui-reverse cui-margin-top\">\r\n                <input type=\"checkbox\" className=\"cui-checkbox\" id=\"checkbox-1-2\" name=\"editable\" checked={state.editable} onChange={onValueChange} />\r\n                <label htmlFor=\"checkbox-1-2\"> Editable</label>\r\n            </div>\r\n            <div className=\"cui-form cui-flex cui-middle cui-reverse cui-margin-top\">\r\n                <input type=\"checkbox\" className=\"cui-checkbox\" id=\"checkbox-1-1\" name=\"removable\" checked={state.removable} onChange={onValueChange} />\r\n                <label htmlFor=\"checkbox-1-1\"> Removable</label>\r\n            </div>\r\n\r\n            <ErrorsList errors={errors} />\r\n        </>\r\n        }\r\n        footer={\r\n            <div className=\"cui-flex cui-right\">\r\n                <button className=\"cui-button cui-margin-small-right\" cui-close=\"\">Cancel</button>\r\n                <button className=\"cui-button cui-accent\" onClick={onSave}>Save</button>\r\n            </div>\r\n        }\r\n    />);\r\n}","import * as React from 'react'\r\n\r\nexport interface PageHeaderProps {\r\n    title: string;\r\n    description: string;\r\n}\r\n\r\n\r\nexport function PageHeader(props: PageHeaderProps) {\r\n    return (<div className=\"stopwatch-page-header cui-container cui-center\">\r\n        <div>\r\n            <h1 className=\"cui-h1 cui-text-center\">{props.title}</h1>\r\n            <p className=\"cui-text-center cui-text-muted\">{props.description}</p>\r\n        </div>\r\n    </div>);\r\n}\r\n","import * as React from 'react'\r\nimport { StopwatchAction } from '../../../core/models';\r\nimport { DefaultActions } from '../../../core/statics';\r\nimport { ACTIONS_FLOW_ACTIONS } from '../../../app/flow/actions';\r\nimport { BpdActionIcon } from '../common/BpdActionIcon';\r\nimport { AddActionDialog } from './AddActionDialog';\r\nimport { PageHeader } from '../common/PageHeader';\r\nimport { ActionValidator } from '../../../core/validators';\r\nimport { deleteActionConfirmDialog } from '../common/Dialogs';\r\nimport { getBgClassByType } from '../../../core/helpers';\r\n\r\nconst defaultAction: StopwatchAction = {\r\n    name: \"\",\r\n    type: \"exercise\",\r\n    duration: 5,\r\n    removable: true,\r\n    editable: false\r\n}\r\n\r\nexport interface BpdDialogState {\r\n    action: StopwatchAction;\r\n}\r\n\r\nexport interface StopWatchActionsState {\r\n    actions: StopwatchAction[];\r\n    current: StopwatchAction;\r\n}\r\n\r\n\r\n\r\nexport function StopwatchActionsComponent() {\r\n    const [state, setState] = React.useState<StopWatchActionsState>({\r\n        actions: [...DefaultActions],\r\n        current: null\r\n    })\r\n\r\n\r\n\r\n    function onDialogSave(action: StopwatchAction) {\r\n        window.$actionsFlow.perform(ACTIONS_FLOW_ACTIONS.SET_ACTION, action);\r\n    }\r\n\r\n    function onDelete(action: StopwatchAction) {\r\n        deleteActionConfirmDialog(action.name, () => {\r\n            window.$actionsFlow.perform(ACTIONS_FLOW_ACTIONS.REMOVE_ACTION, action);\r\n        })\r\n    }\r\n\r\n    function onGetAll(actions: StopwatchAction[]) {\r\n        setState({\r\n            ...state,\r\n            actions: [...DefaultActions, ...actions]\r\n        })\r\n    }\r\n\r\n    function onAddOrEditClick(action?: StopwatchAction) {\r\n        setState({\r\n            ...state,\r\n            current: action || { ...defaultAction }\r\n        })\r\n        let dialogCui = window.$cui.get(\"#add-action-dialog\");\r\n        dialogCui.emit('open');\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        const getAllSub = window.$actionsFlow.subscribe(ACTIONS_FLOW_ACTIONS.GET_ALL, { finish: onGetAll })\r\n        const setActionSub = window.$actionsFlow.subscribe(ACTIONS_FLOW_ACTIONS.SET_ACTION)\r\n        const removeActionSub = window.$actionsFlow.subscribe(ACTIONS_FLOW_ACTIONS.REMOVE_ACTION)\r\n        window.$actionsFlow.perform(ACTIONS_FLOW_ACTIONS.GET_ALL);\r\n        return () => {\r\n            window.$actionsFlow.unsubscribe(ACTIONS_FLOW_ACTIONS.GET_ALL, getAllSub.id);\r\n            window.$actionsFlow.unsubscribe(ACTIONS_FLOW_ACTIONS.SET_ACTION, setActionSub.id);\r\n            window.$actionsFlow.unsubscribe(ACTIONS_FLOW_ACTIONS.REMOVE_ACTION, removeActionSub.id);\r\n        }\r\n    }, [state.actions])\r\n\r\n    return (<><div className=\"stopwatch-content-width \">\r\n        <PageHeader title=\"Activities\" description=\"Define activies which you want to perform in trainings!\" />\r\n        <div className=\"cui-container cui-flex-grid cui-flex-grid-match cui-child-width-1-2--s cui-child-width-1-3--m\">\r\n            {state.actions && state.actions.map((action: StopwatchAction, index: number) => {\r\n                return (\r\n                    <div key={index} className=\"cui-animation-fade-in\">\r\n                        <div className={\"cui-card cui-default \" + getBgClassByType(action.type)}>\r\n                            <div className=\"cui-card-header cui-flex cui-between\">\r\n                                <span className=\"cui-card-title\">{action.name}</span>\r\n                                <BpdActionIcon type={action.type} />\r\n                            </div>\r\n                            <div className=\"cui-card-body\">\r\n                                <div className=\"cui-flex cui-middle\">\r\n                                    <div className=\"cui-flex-grow\">\r\n                                        <div className=\"cui-text-muted\">Duration: <span>{action.duration} seconds</span></div>\r\n                                    </div>\r\n                                    <div className=\"cui-flex-shrink\">\r\n                                        <ul className=\"cui-icon-nav\">\r\n                                            {action.editable && <li><a className=\"cui-icon\" cui-icon=\"edit\" onClick={() => onAddOrEditClick(action)}></a></li>}\r\n                                            {action.removable && <li><a className=\"cui-icon\" cui-icon=\"trash\" onClick={() => onDelete(action)}></a></li>}\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>)\r\n            })}\r\n            {/* <div className=\"actions-add-new-button\">\r\n                <div className=\"cui-flex-center cui-card\">\r\n                    <button className=\"cui-icon cui-button\" cui-icon=\"plus\" onClick={() => { onAddOrEditClick() }}><span className=\"cui-margin-small-left\"> Add New</span></button>\r\n                </div>\r\n            </div> */}\r\n\r\n        </div>\r\n        <div className=\"cui-position-float cui-position-bottom cui-position-right cui-margin cui-margin-large--l\">\r\n            <button className=\"cui-icon cui-button cui-icon-margin cui-background-default cui-box-shadow cui-rounded\" cui-icon=\"plus\" onClick={() => { onAddOrEditClick() }}>Add New</button>\r\n        </div>\r\n    </div>\r\n        <AddActionDialog action={state.current} onSave={onDialogSave} /></>);\r\n}\r\n","export function onDeleteTrainingDialog(name: string, onConfirm: () => void) {\r\n    window.$cui.alert(\"delete-training-dialog\", \"YesNoCancel\", {\r\n        title: \"Delete training\",\r\n        message: \"Do you really want to delete training: \" + name + \"?\",\r\n        onYes: onConfirm\r\n    })\r\n}\r\n\r\nexport function deleteRoundConfirmDialog(onOnfirm: () => void) {\r\n    window.$cui.alert(\"delete-round-dialog\", \"YesNoCancel\", {\r\n        title: \"Delete round\",\r\n        message: \"Do you really want to delete this round?\",\r\n        onYes: onOnfirm\r\n    })\r\n}\r\n\r\nexport function deleteActionConfirmDialog(name: string, onConfirm: () => void) {\r\n    window.$cui.alert(\"delete-action-dialog\", \"YesNoCancel\", {\r\n        title: \"Delete action\",\r\n        message: \"Do you really want to delete action: \" + name,\r\n        onYes: onConfirm\r\n    })\r\n}","import * as React from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction GoBack(props: any) {\r\n    const { history } = props;\r\n    return (<button className=\"cui-button cui-accent\" onClick={() => history.goBack()}>Go Back</button>)\r\n}\r\n\r\n\r\nexport default withRouter(GoBack);","import * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport GoBack from \"./GoBack\";\r\n\r\nexport interface NotFoundProps {\r\n    message: string;\r\n    classes?: string;\r\n    goBack?: boolean;\r\n}\r\n\r\nexport function NotFound(props: NotFoundProps) {\r\n    return (<div className={props.classes}>\r\n        <h2 className=\"cui-h2 cui-text-center cui-text-error\">{props.message}</h2>\r\n        <div className=\"\">\r\n            <div className=\"cui-flex cui-center\">\r\n                <Link to=\"/\" className=\"cui-button cui-margin-small-right\">Go Home</Link>\r\n                {props.goBack ?? <GoBack />}\r\n            </div>\r\n        </div>\r\n\r\n    </div>);\r\n}","import * as React from 'react'\r\nimport { StopwatchAction } from '../../../core/models';\r\nexport interface ActionsSelectProps {\r\n    actions: StopwatchAction[];\r\n    id: string;\r\n    name: string;\r\n    className?: string;\r\n    value?: string;\r\n    onSelect: (action: StopwatchAction) => void;\r\n}\r\nexport function ActionsSelect(props: ActionsSelectProps) {\r\n    function onChange(ev: any) {\r\n        if (props.onSelect) {\r\n            let name = ev.target.value;\r\n            props.onSelect(props.actions.find(item => item.name === name))\r\n        }\r\n    }\r\n    return (\r\n        <select className={\"cui-select \" + props.className} name={props.name} id={props.id} onChange={onChange} value={props.value}>\r\n            {props.actions && props.actions.map((action: StopwatchAction) => {\r\n                return <option key={action.name} value={action.name}>{action.name} (Type: {action.type}, Duration: {action.duration})</option>\r\n            })}\r\n        </select>\r\n    );\r\n}\r\n","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { ACTIONS_FLOW_ACTIONS } from \"../../../app/flow/actions\";\r\nimport { Round, StopwatchAction } from \"../../../core/models\";\r\nimport { RoundValidator } from \"../../../core/validators\";\r\nimport { ActionsSelect } from \"../actions/ActionsSelect\";\r\nimport { BpdActionIcon } from \"../common/BpdActionIcon\";\r\nimport { BpdDialog } from \"../common/BpdDialog\";\r\n\r\nexport interface EditRoundDialogProps {\r\n    onSave: (round: Round, index: number) => void;\r\n    definedActions: StopwatchAction[];\r\n    round: Round;\r\n    index: number;\r\n}\r\n\r\nexport interface EditRoundDialogState {\r\n    actions?: StopwatchAction[];\r\n    selected: StopwatchAction;\r\n    errors: string[];\r\n}\r\n\r\nexport function EditRoundDialog(props: EditRoundDialogProps) {\r\n    const [state, setState] = useState<EditRoundDialogState>({\r\n        actions: [],\r\n        selected: null,\r\n        errors: []\r\n    })\r\n\r\n    function onSave() {\r\n        if (props.onSave) {\r\n            let round: Round = { actions: [...state.actions] }\r\n            let validation = new RoundValidator().validate(round);\r\n            if (validation.status) {\r\n                props.onSave(round, props.index);\r\n                return;\r\n            }\r\n            setState({\r\n                ...state,\r\n                errors: validation.errors\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    function onActionSelectChange(action: StopwatchAction) {\r\n        if (action) {\r\n            setState({\r\n                ...state,\r\n                selected: action\r\n            })\r\n        }\r\n    }\r\n\r\n    function onAddAction() {\r\n        if (state.selected) {\r\n            setActions([...state.actions, state.selected])\r\n        }\r\n    }\r\n\r\n    function onDeleteAction(index: number) {\r\n        let newActions = [...state.actions];\r\n        newActions.splice(index, 1);\r\n        setActions(newActions)\r\n    }\r\n\r\n    function setActions(actions: StopwatchAction[]) {\r\n        setState({\r\n            actions: actions,\r\n            selected: props.definedActions[0],\r\n            errors: []\r\n        })\r\n    }\r\n    React.useEffect(() => {\r\n        setActions(props.round && props.round !== null ? props.round.actions : []);\r\n\r\n        return () => {\r\n        }\r\n    }, [props.round, props.definedActions])\r\n    return (<BpdDialog\r\n        id=\"edit-round-dialog\"\r\n        title=\"Edit Round\"\r\n        body={<>\r\n            <div className=\"edit-round-dialog-body\">\r\n                <ul className=\"cui-list\">\r\n                    {state.actions && state.actions.map((item: StopwatchAction, index: number) => {\r\n                        return <li key={index} className=\"animation-fade-in\" >\r\n                            <div className=\"cui-flex cui-middle\">\r\n                                <div className=\"cui-flex-grow\">\r\n                                    <div className=\"cui-flex cui-middle\">\r\n                                        <div className=\"cui-flex-center cui-margin-right\">\r\n                                            <BpdActionIcon type={item.type} />\r\n                                        </div>\r\n                                        <div className=\"cui-flex-grow\">\r\n                                            <div className=\"\">{item.name}</div>\r\n                                            <div className=\"cui-text-muted\">Lasts {item.duration} seconds</div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <ul className=\"cui-icon-nav\">\r\n                                    <li><a className=\"cui-icon\" cui-icon=\"trash\" onClick={() => { onDeleteAction(index) }}></a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </li>\r\n                    })}\r\n                    <li>\r\n                        <div className=\"cui-flex cui-middle cui-nowrap\">\r\n                            <div className=\"cui-flex-grow\">\r\n                                <ActionsSelect id=\"round-action-select\" className=\"cui-width-1-2\" name=\"action\" value={state.selected?.name} actions={props.definedActions} onSelect={onActionSelectChange} />\r\n                            </div>\r\n                            <div className=\"\">\r\n                                <a cui-icon=\"plus\" className=\"cui-icon-button\" onClick={onAddAction}></a>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n                {state.errors && state.errors.length > 0 && <ul className=\"cui-list \">\r\n                    {state.errors.map((error: string, index: number) => {\r\n                        return <li key={index} className=\"cui-animation-slide-in\"><span className=\"cui-text-error\">{error}</span></li>\r\n                    })}\r\n                </ul>}\r\n            </div>\r\n        </>\r\n        }\r\n        footer={\r\n            <div className=\"cui-flex cui-right\" >\r\n                <button className=\"cui-button cui-margin-small-right\" cui-close=\"\">Cancel</button>\r\n                <button className=\"cui-button cui-accent\" onClick={onSave}>Save</button>\r\n            </div >\r\n        }\r\n    />)\r\n}","import * as React from 'react';\r\nimport { calculateDuration } from '../../../core/helpers';\r\nimport { Round } from \"../../../core/models\";\r\n\r\ninterface RoundListItemProps {\r\n    round: Round;\r\n    index: number;\r\n    onEdit: (round: Round, index: number) => void;\r\n    onDelete: (round: Round, index: number) => void;\r\n}\r\n\r\nexport function EditRoundListItem(props: RoundListItemProps) {\r\n\r\n    return (\r\n        <div className=\"cui-flex cui-middle cui-nowrap\">\r\n            <div className=\"cui-flex-grow\">\r\n                <div><span className=\"cui-text-bold\">Round {props.index}</span></div>\r\n                <div className=\"cui-text-muted\"><span >{props.round.actions.length} actions, {calculateDuration(props.round.actions)} seconds of total length</span></div>\r\n\r\n            </div>\r\n\r\n            <ul className=\"cui-icon-nav cui-flex-shrink\">\r\n                <li><a className=\"cui-icon\" cui-icon=\"edit\" onClick={() => { props.onEdit(props.round, props.index) }}></a></li>\r\n                <li><a className=\"cui-icon\" cui-icon=\"trash\" onClick={() => { props.onDelete(props.round, props.index) }}></a></li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}","import * as React from 'react'\r\nimport { Link, useParams, withRouter } from 'react-router-dom';\r\nimport { is } from '../../../../node_modules/bpd-toolkit/dist/esm/index';\r\nimport { ACTIONS_FLOW_ACTIONS } from '../../../app/flow/actions';\r\nimport { showMessage } from '../../../core/helpers';\r\nimport { Round, StopwatchAction, Training } from '../../../core/models';\r\nimport { DefaultActions } from '../../../core/statics';\r\nimport { TrainingValidator } from '../../../core/validators';\r\nimport { deleteRoundConfirmDialog, onDeleteTrainingDialog } from '../common/Dialogs';\r\nimport { NotFound } from '../common/NotFound';\r\nimport { PageHeader } from '../common/PageHeader';\r\nimport { EditRoundDialog } from './EditRoundDialog';\r\nimport { EditRoundListItem } from './EditRoundListItem';\r\n\r\nexport interface EditTrainingSectionProps {\r\n    training: Training;\r\n    onSave: (training: Training) => void;\r\n    onCancel: () => void;\r\n}\r\n\r\n\r\nexport interface EditTrainingProps {\r\n    history: any;\r\n}\r\n\r\ninterface EditTrainingState {\r\n    training: Training;\r\n}\r\n\r\ninterface EditTrainingSectionState {\r\n    training: Training;\r\n\r\n    currentIndex: number;\r\n    currentRound: Round;\r\n}\r\n\r\ninterface EditTrainingDefinedActions {\r\n    actions: StopwatchAction[];\r\n}\r\n\r\nfunction EditTraining(props: EditTrainingProps) {\r\n    const [state, setState] = React.useState<EditTrainingState>({\r\n        training: {\r\n            name: \"\",\r\n            rounds: []\r\n        }\r\n    })\r\n\r\n    const { id } = useParams();\r\n\r\n\r\n    function getTraining() {\r\n        if (id) {\r\n            window.$flow.perform(\"GET_TRAINING\", id);\r\n        }\r\n    }\r\n\r\n    function onUpdateTraining(result: boolean): void {\r\n        if (!result) {\r\n            showMessage(\"Fail\", \"Training was not saved\")\r\n        } else {\r\n            if (props.history) {\r\n                props.history.goBack();\r\n            }\r\n        }\r\n    }\r\n\r\n    function onCancel() {\r\n        if (props.history) {\r\n            props.history.goBack();\r\n        }\r\n    }\r\n\r\n    function onGetTraining(training: Training): void {\r\n        if (training) {\r\n            setState({\r\n                training: { ...training }\r\n            })\r\n        } else {\r\n            showMessage(\"Fail\", \"Training was not found\")\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function saveTraining(training: Training) {\r\n        window.$flow.perform(\"UPDATE_TRAINING\", training)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        console.log(\"Parent redraw\")\r\n        const updateTrainingSub = window.$flow.subscribe(\"UPDATE_TRAINING\", { finish: onUpdateTraining })\r\n        const getTrainingSub = window.$flow.subscribe(\"GET_TRAINING\", { finish: onGetTraining })\r\n\r\n        getTraining();\r\n\r\n        return () => {\r\n            window.$flow.unsubscribe(\"UPDATE_TRAINING\", updateTrainingSub.id);\r\n            window.$flow.unsubscribe(\"GET_TRAINING\", getTrainingSub.id);\r\n\r\n        }\r\n    }, [state.training.id])\r\n\r\n    return (<>\r\n        <div className=\"cui-container stopwatch-content-width\">\r\n            <PageHeader title={is(state.training) ? \"Update training \" + state.training.name : \"Define training\"} description=\"Customize your training settings\" />\r\n        </div>\r\n        <div className=\"\">\r\n            {state.training ?\r\n                <EditTrainingSection training={state.training} onSave={saveTraining} onCancel={onCancel} /> :\r\n                <NotFound message=\"The training you looking for could not be found\" classes=\"\" />}\r\n        </div>\r\n    </>);\r\n}\r\n\r\n\r\nfunction EditTrainingSection(props: EditTrainingSectionProps) {\r\n    const [state, setState] = React.useState<EditTrainingSectionState>({\r\n        training: props.training,\r\n        currentIndex: -1,\r\n        currentRound: null\r\n    })\r\n\r\n    const [definedActions, setDefinedActions] = React.useState<EditTrainingDefinedActions>({\r\n        actions: []\r\n    })\r\n\r\n\r\n    function onRoundEdit(round: Round, index: number) {\r\n        setState({\r\n            ...state,\r\n            currentIndex: index,\r\n            currentRound: round\r\n        })\r\n        window.$cui.get(\"#edit-round-dialog\").emit(\"open\")\r\n    }\r\n\r\n    function onRoundDelete(round: Round, index: number) {\r\n        deleteRoundConfirmDialog(() => {\r\n            let rounds = [...state.training.rounds]\r\n            rounds.splice(index, 1)\r\n            updateRoundsState(rounds)\r\n        })\r\n    }\r\n\r\n    function onTrainingSave() {\r\n        if (props.onSave) {\r\n            let validaton = new TrainingValidator().validate(state.training);\r\n            if (validaton.status) {\r\n                props.onSave(state.training)\r\n            } else {\r\n                showMessage(\"Training not valid\", validaton.errors.join(\", \"))\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function onRoundSave(round: Round, index: number) {\r\n        updateRoundsState(updateOrInsertRound(round, index));\r\n        window.$cui.get(\"#edit-round-dialog\").emit(\"close\");\r\n    }\r\n\r\n    function updateOrInsertRound(round: Round, index: number) {\r\n        let rounds = []\r\n        if (index > -1) {\r\n            rounds = [...state.training.rounds];\r\n            rounds[index] = round;\r\n        } else {\r\n            rounds = [...state.training.rounds, round];\r\n        }\r\n        return rounds;\r\n    }\r\n\r\n    function updateRoundsState(rounds: Round[]) {\r\n        setState({\r\n            ...state,\r\n            training: {\r\n                ...state.training,\r\n                rounds: rounds\r\n            }\r\n        })\r\n    }\r\n\r\n    function onFormChange(ev: any) {\r\n        let name = ev.target.name;\r\n        if (['name', 'description'].includes(name)) {\r\n            setState({\r\n                ...state,\r\n                training: {\r\n                    ...state.training,\r\n                    [name]: ev.target.value\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    function onDeleteTrainingSub(result: boolean) {\r\n        props.onCancel();\r\n    }\r\n\r\n    function onDeleteTraining() {\r\n        onDeleteTrainingDialog(state.training.name, onYes)\r\n    }\r\n\r\n    function onYes() {\r\n        window.$flow.perform(\"DELETE_TRAINING\", state.training.id)\r\n    }\r\n\r\n    function getDefinedActions(actions: StopwatchAction[]) {\r\n        setDefinedActions({\r\n            actions: [...DefaultActions, ...actions]\r\n        })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        const deleteTraininSub = window.$flow.subscribe(\"DELETE_TRAINING\", {\r\n            finish: onDeleteTrainingSub\r\n        })\r\n        const getDefinedActionsSub = window.$actionsFlow.subscribe(ACTIONS_FLOW_ACTIONS.GET_ALL, { finish: getDefinedActions });\r\n        window.$actionsFlow.perform(ACTIONS_FLOW_ACTIONS.GET_ALL);\r\n        setState({\r\n            ...state,\r\n            training: props.training\r\n        })\r\n        return () => {\r\n            window.$actionsFlow.unsubscribe(ACTIONS_FLOW_ACTIONS.GET_ALL, getDefinedActionsSub.id)\r\n            window.$flow.unsubscribe(\"DELETE_TRAINING\", deleteTraininSub.id);\r\n        }\r\n    }, [props.training])\r\n\r\n    return (<>\r\n        {state.training.id > -1 && <div className=\"cui-container cui-flex cui-right cui-middle stopwatch-content-width\">\r\n            <ul className=\"cui-list cui-inline\">\r\n                <li className=\"cui-padding-remove\"><Link to={`/trainings/perform/${state.training.id}`} className=\"cui-icon cui-accent cui-icon-margin cui-margin-right\" cui-icon=\"media_play\">Run</Link></li>\r\n                <li className=\"cui-padding-remove\"><a className=\"cui-icon cui-icon-margin\" cui-icon=\"trash\" onClick={onDeleteTraining}>Delete</a></li>\r\n            </ul>\r\n        </div>}\r\n        <div className=\"cui-container stopwatch-content-width cui-flex-grid cui-child-width-1-1 cui-child-width-1-2--m\">\r\n            <div className=\"cui-padding-small-right\">\r\n                <h3 className=\"cui-h3 cui-text-muted\">Common</h3>\r\n                <div className=\"cui-form\">\r\n                    <label htmlFor=\"\" className=\"cui-form-label\">Name</label>\r\n                    <input type=\"text\" className=\"cui-input stopwatch-input-width\" placeholder=\"Name\" name=\"name\" value={state.training.name} onChange={onFormChange} />\r\n                </div>\r\n                <div className=\"cui-form cui-margin-top\">\r\n                    <label htmlFor=\"\" className=\"cui-form-label\">Description</label>\r\n                    <textarea className=\"cui-textarea stopwatch-input-width stopwatch-text-area\" placeholder=\"Description\" name=\"description\" rows={5} value={state.training.description} onChange={onFormChange}></textarea>\r\n                </div>\r\n            </div>\r\n            <div className=\"cui-padding-small-left\">\r\n                <h3 className=\"cui-h3 cui-text-muted\">Rounds (total count: {state.training.rounds.length})</h3>\r\n                <ul className=\"cui-list\">\r\n                    {state.training && state.training.rounds.map((round: Round, index: number) => {\r\n                        return <li key={index} className=\"animation-fade-in\"><EditRoundListItem index={index} round={round} onEdit={onRoundEdit} onDelete={onRoundDelete} /></li>\r\n                    })}\r\n                    <li>\r\n                        <button className=\"cui-button cui-icon cui-icon-margin cui-width-1-1\" cui-icon=\"plus\" onClick={() => {\r\n                            onRoundEdit(null, -1);\r\n                        }}>Add New</button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        <div className=\"cui-container stopwatch-content-width cui-flex cui-right\">\r\n            <button className=\"cui-button cui-margin-small-right\" onClick={() => { props.onCancel() }}>Cancel</button>\r\n            <button className=\"cui-button cui-accent\" onClick={onTrainingSave}>Save</button>\r\n        </div>\r\n        <EditRoundDialog index={state.currentIndex} round={state.currentRound} onSave={onRoundSave} definedActions={definedActions.actions} />\r\n    </>);\r\n}\r\n\r\nexport default withRouter(EditTraining);","interface KeepScreenToggle {\r\n    activate(): void;\r\n    release(): void;\r\n}\r\n\r\nexport class KeepAwakeToggle implements KeepScreenToggle {\r\n    #screen: any;\r\n    constructor() {\r\n        this.#screen = screen;\r\n    }\r\n\r\n    activate() {\r\n        this.#screen.keepAwake = true;\r\n    }\r\n\r\n    release(): void {\r\n        this.#screen.keepAwake = false;\r\n    }\r\n\r\n}\r\n\r\nexport class WakeLockScreen implements KeepScreenToggle {\r\n    wakeLockRequest: any;\r\n\r\n    activate() {\r\n        let nav = navigator as any;\r\n        nav.wakeLock.request('screen').then((wakelock: any) => {\r\n            this.wakeLockRequest = wakelock;\r\n            console.log(\"Wakelock activated\");\r\n        })\r\n    }\r\n\r\n    release() {\r\n        if (this.wakeLockRequest) {\r\n            this.wakeLockRequest.release();\r\n            this.wakeLockRequest = null;\r\n            console.log(\"Wakelock deactivated\");\r\n        }\r\n    }\r\n}\r\n\r\nexport class KeepScreenAwakeFeature {\r\n    #toggle: KeepScreenToggle;\r\n\r\n    constructor() {\r\n        this.#toggle = this.getToggle();\r\n    }\r\n    activate() {\r\n        this.#toggle.activate();\r\n    }\r\n    release() {\r\n        this.#toggle.release();\r\n    }\r\n    private getToggle() {\r\n        if ('keepAwake' in screen) {\r\n            return new KeepAwakeToggle();\r\n        } else {\r\n            return new WakeLockScreen();\r\n        }\r\n    }\r\n}","export const StopWatchStateOptions: any = {\r\n    RUNNING: \"RUNNING\",\r\n    STOPPED: \"STOPPED\",\r\n    PAUSED: \"PAUSED\",\r\n}\r\n\r\nexport type StopWatchState = \"RUNNING\" | 'PAUSED' | \"STOPPED\";\r\n\r\nexport interface StopwatchCallback {\r\n    (current: number, stopWatch: StopWatch): boolean;\r\n}\r\n\r\nexport interface IStopWatch {\r\n    start(): boolean;\r\n    stop(): boolean;\r\n    pause(): boolean;\r\n    resume(): boolean;\r\n    finish(): void;\r\n    getState(): StopWatchState;\r\n}\r\n\r\nexport class StopWatch implements IStopWatch {\r\n    #callback: StopwatchCallback;\r\n    current: number;\r\n    #isReset: boolean;\r\n    #state: StopWatchState;\r\n    #id: any;\r\n    constructor() {\r\n        this.current = 0;\r\n        this.#isReset = false;\r\n        this.#state = StopWatchStateOptions.STOPPED;\r\n        this.#id = undefined;\r\n    }\r\n\r\n    onTick(callback: StopwatchCallback) {\r\n        this.#callback = callback;\r\n    }\r\n\r\n    tick() {\r\n        this.#id = setTimeout(() => {\r\n            try {\r\n                if (this.#state === StopWatchStateOptions.RUNNING && this.#callback(this.current, this)) {\r\n                    if (this.#isReset) {\r\n                        this.current = 0;\r\n                        this.#isReset = false;\r\n                    } else {\r\n                        this.current += 1;\r\n                    }\r\n\r\n                    this.tick();\r\n                } else if (this.#state !== StopWatchStateOptions.PAUSED) {\r\n                    this.stop();\r\n                }\r\n            } catch (e) {\r\n                console.error(\"An error occured on stopwatch tick\")\r\n                console.error(e)\r\n                this.stop();\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    tickCallback() {\r\n        try {\r\n            if (this.#state === StopWatchStateOptions.RUNNING && this.#callback(this.current, this)) {\r\n                console.log(\"tick\");\r\n                if (this.#isReset) {\r\n                    this.current = 0;\r\n                    this.#isReset = false;\r\n                } else {\r\n                    this.current += 1;\r\n                }\r\n\r\n                this.tick();\r\n            } else if (this.#state !== StopWatchStateOptions.PAUSED) {\r\n                this.stop();\r\n            }\r\n        } catch (e) {\r\n            console.error(\"An error occured on stopwatch tick\")\r\n            console.error(e)\r\n            this.stop();\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.#isReset = true;\r\n    }\r\n\r\n    start(): boolean {\r\n        if (this.#state === StopWatchStateOptions.RUNNING) {\r\n            return false;\r\n        }\r\n        console.log(\"Starting stopwatch\")\r\n        this.current = 0;\r\n        this.#state = StopWatchStateOptions.RUNNING;\r\n        this.tick();\r\n        return true;\r\n    }\r\n\r\n    stop(): boolean {\r\n        if (this.#state === StopWatchStateOptions.RUNNING) {\r\n            console.log(\"Stopping stopwatch\")\r\n            this.finish();\r\n            this.#state = StopWatchStateOptions.STOPPED;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    pause(): boolean {\r\n        if (this.#state === StopWatchStateOptions.RUNNING) {\r\n            console.log(\"Pausing stopwatch\")\r\n            this.#state = StopWatchStateOptions.PAUSED;\r\n            return true\r\n        }\r\n        return false;\r\n    }\r\n\r\n    resume() {\r\n        if (this.#state === StopWatchStateOptions.PAUSED) {\r\n            console.log(\"Resuming stopwatch\")\r\n            this.#state = StopWatchStateOptions.RUNNING;\r\n            this.tick();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    finish(): void {\r\n        if (this.#id) {\r\n            clearTimeout(this.#id);\r\n            this.#id = undefined;\r\n        }\r\n    }\r\n    getState() {\r\n        return this.#state;\r\n    }\r\n}","import { Settings } from \"../../core/models\";\r\nimport { ISettingsService } from \"../../core/services/interfaces\";\r\n\r\n\r\nexport const SETTINGS_FLOW_ACTIONS = {\r\n    GET_DARK_MODE: \"GET_DARK_MODE\",\r\n    SET_DARK_MODE: \"SET_DARK_MODE\",\r\n    GET_SOUND_ENABLED: \"GET_SOUND_ENABLED\",\r\n    SET_SOUND_ENABLED: \"SET_SOUND_ENABLED\",\r\n    SET_SETTINGS: \"SET_SETTINGS\",\r\n    GET_SETTINGS: \"GET_SETTINGS\"\r\n}\r\n\r\nexport type SettingsFlowInput = Settings | boolean;\r\nexport type SettingsFlowOutput = boolean | void | Settings;\r\n\r\nexport class SettingsFlow {\r\n    #service: ISettingsService;\r\n    constructor(service: ISettingsService) {\r\n        this.#service = service;\r\n    }\r\n    getActions() {\r\n        return {\r\n            [SETTINGS_FLOW_ACTIONS.GET_SOUND_ENABLED]: () => {\r\n                return this.#service.isSoundEnabled();\r\n            },\r\n            [SETTINGS_FLOW_ACTIONS.SET_SOUND_ENABLED]: (flag: boolean) => {\r\n                this.#service.setSoundEnabled(flag);\r\n            },\r\n            [SETTINGS_FLOW_ACTIONS.GET_DARK_MODE]: () => {\r\n                return this.#service.isDarkMode();\r\n            },\r\n            [SETTINGS_FLOW_ACTIONS.SET_DARK_MODE]: (flag: boolean) => {\r\n                this.#service.setDarkMode(flag);\r\n            },\r\n            [SETTINGS_FLOW_ACTIONS.SET_SETTINGS]: (value: Settings) => {\r\n                this.#service.setSettings(value);\r\n            },\r\n            [SETTINGS_FLOW_ACTIONS.GET_SETTINGS]: () => {\r\n                console.log(\"getSettings\")\r\n                return this.#service.getSettings();\r\n            }\r\n        }\r\n    }\r\n}","import * as React from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport { is } from '../../../../node_modules/bpd-toolkit/dist/esm/index';\r\nimport { KeepScreenAwakeFeature } from '../../../api/screen/screen';\r\nimport { StopWatch, StopWatchState, StopWatchStateOptions } from '../../../api/stopwatch/stopwatch';\r\nimport { SETTINGS_FLOW_ACTIONS } from '../../../app/flow/settings';\r\nimport { calcDisplayTimer, calculateDuration, calculateProgress, getBgClassByType, getTotalDuration, showMessage } from '../../../core/helpers';\r\nimport { Round, StopwatchAction, Training } from '../../../core/models';\r\nimport { ActionValidator, RoundValidator, TrainingValidator } from '../../../core/validators';\r\nimport { NotFound } from '../common/NotFound';;\r\n\r\ninterface TimeStateData {\r\n    time: number;\r\n    progress: number;\r\n    ct?: number;\r\n}\r\n\r\ninterface PerfromTrainingState {\r\n    training: Training;\r\n}\r\n\r\ninterface CurrentTrainingState {\r\n    round: Round;\r\n    roundIdx: number;\r\n    action: StopwatchAction;\r\n    actionIdx: number;\r\n    class: string;\r\n    roundDuration: number;\r\n    totalDuration: number;\r\n}\r\n\r\ninterface StopwatchState {\r\n    timer: string;\r\n    state: StopWatchState;\r\n    startBtnCls: string;\r\n    timerCls: string;\r\n    progress: number;\r\n    roundProgress: number;\r\n    trainingProgress: number;\r\n}\r\n\r\nconst defaultCurrent: CurrentTrainingState = {\r\n    round: undefined,\r\n    roundIdx: -1,\r\n    actionIdx: -1,\r\n    action: undefined,\r\n    class: \"\",\r\n    roundDuration: 0,\r\n    totalDuration: 0\r\n}\r\n\r\nexport function PerfromTraining() {\r\n    const [state, setState] = React.useState<PerfromTrainingState>({\r\n        training: undefined\r\n    })\r\n\r\n    const [stopwatch, setStopwatch] = React.useState<StopWatch>(undefined)\r\n    const [current, setCurrent] = React.useState<CurrentTrainingState>(defaultCurrent)\r\n    const [canPlay, setCanPlay] = React.useState<boolean>(false);\r\n\r\n    const [watchState, setWatchState] = React.useState<StopwatchState>({\r\n        timer: \"00:00\",\r\n        state: StopWatchStateOptions.STOPPED,\r\n        startBtnCls: getStartBtnCls(StopWatchStateOptions.STOPPED),\r\n        timerCls: \"\",\r\n        progress: 100,\r\n        roundProgress: 100,\r\n        trainingProgress: 100,\r\n    })\r\n\r\n    const [errorMessage, setErrorMessage] = React.useState(\"\");\r\n    const { id } = useParams();\r\n\r\n    const currentRef = React.useRef(current);\r\n    currentRef.current = current;\r\n    const trainingRef = React.useRef(state.training);\r\n    trainingRef.current = state.training;\r\n\r\n    function onGetTraining(training: Training) {\r\n        let validation = new TrainingValidator().validate(training);\r\n        if (!validation.status) {\r\n            showMessage(\"Incorrect training\", `Training is not correct: ${validation.errors.join(\", \")}`)\r\n            return;\r\n        }\r\n        let roundValidator = new RoundValidator().validate(training.rounds[0]);\r\n        if (!roundValidator.status) {\r\n            showMessage(\"Incorrect training\", `Training is not correct: ${roundValidator.errors.join(\", \")}`)\r\n            return;\r\n        }\r\n        let actionValidator = new ActionValidator().validate(training.rounds[0].actions[0]);\r\n        if (!actionValidator.status) {\r\n            showMessage(\"Incorrect training\", `Training is not correct: ${actionValidator.errors.join(\", \")}`)\r\n            return;\r\n        }\r\n        setState({\r\n            ...state,\r\n            training: training\r\n        })\r\n        setDefaultCurrentState(training);\r\n    }\r\n\r\n\r\n    function setDefaultCurrentState(training: Training) {\r\n        let round = training.rounds[0];\r\n        let action = round.actions[0];\r\n        setCurrent({\r\n            roundIdx: 0,\r\n            round: round,\r\n            action: action,\r\n            actionIdx: 0,\r\n            class: getClassByType(action.type),\r\n            roundDuration: calculateDuration(round.actions),\r\n            totalDuration: getTotalDuration(training)[1]\r\n        })\r\n    }\r\n\r\n    function setNextAction(): boolean {\r\n        let nextActionIdx = currentRef.current.actionIdx + 1;\r\n        if (currentRef.current.round.actions.length > nextActionIdx) {\r\n            let newAction = currentRef.current.round.actions[nextActionIdx]\r\n            setCurrent({\r\n                ...currentRef.current,\r\n                actionIdx: nextActionIdx,\r\n                action: newAction,\r\n                class: getClassByType(newAction.type)\r\n            })\r\n            return true;\r\n        }\r\n        let nextRoundIdx = currentRef.current.roundIdx + 1;\r\n        if (trainingRef.current.rounds.length > nextRoundIdx) {\r\n            let newRound = trainingRef.current.rounds[nextRoundIdx];\r\n            let newAction = newRound.actions[0];\r\n            setCurrent({\r\n                ...currentRef.current,\r\n                round: newRound,\r\n                roundIdx: nextRoundIdx,\r\n                actionIdx: 0,\r\n                action: newAction,\r\n                class: getClassByType(newAction.type),\r\n                roundDuration: calculateDuration(newRound.actions),\r\n            })\r\n            return true;\r\n        }\r\n        setDefaultCurrentState(trainingRef.current);\r\n        return false;\r\n    }\r\n\r\n    function onStopwatchTick(currentTime: number, stopwatch: StopWatch): boolean {\r\n        let ct = currentRef.current.action.duration - currentTime;\r\n        let progress = calculateProgress(currentTime, currentRef.current.action.duration)\r\n        if (ct > 0) {\r\n            setStopWatchState(stopwatch.getState(), {\r\n                time: ct,\r\n                progress: 100 - progress,\r\n                ct: currentTime\r\n            })\r\n            if (ct > 0 && ct <= 3) {\r\n                playSound();\r\n            }\r\n            return true;\r\n        } else {\r\n            playEndSound();\r\n            stopwatch.reset();\r\n            setStopWatchState(StopWatchStateOptions.RUNNING, { time: 0, progress: 100, ct: currentTime })\r\n            if (!setNextAction()) {\r\n                setStopWatchState(StopWatchStateOptions.STOPPED, {\r\n                    time: 0, progress: 100, ct: 0\r\n                })\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n\r\n    function onStartClick() {\r\n        if (watchState.state === StopWatchStateOptions.STOPPED && stopwatch.start()) {\r\n            setStopWatchState(StopWatchStateOptions.RUNNING);\r\n        } else if (watchState.state !== StopWatchStateOptions.STOPPED && stopwatch.stop()) {\r\n            setStopWatchState(StopWatchStateOptions.STOPPED, { time: 0, progress: 100, ct: 0 });\r\n            setDefaultCurrentState(state.training);\r\n        }\r\n    }\r\n\r\n    function onPauseClick() {\r\n        if (watchState.state === StopWatchStateOptions.RUNNING && stopwatch.pause()) {\r\n            setStopWatchState(StopWatchStateOptions.PAUSED);\r\n        } else if (watchState.state === StopWatchStateOptions.PAUSED && stopwatch && stopwatch.resume()) {\r\n            setStopWatchState(StopWatchStateOptions.RUNNING);\r\n        }\r\n    }\r\n\r\n    function setStopWatchState(watchstate: StopWatchState, timeData?: TimeStateData) {\r\n        if (!is(timeData) || timeData.time < 0) {\r\n            setWatchState({\r\n                ...watchState,\r\n                state: watchstate,\r\n                startBtnCls: getStartBtnCls(watchstate)\r\n            })\r\n        } else {\r\n            let roundProgress = calculateRoundProgress(timeData.ct);\r\n            let trainginProgress = calculateTrainingProgress(timeData.ct);\r\n            console.log(\"Duration: \" + trainginProgress);\r\n            setWatchState({\r\n                timer: calcDisplayTimer(timeData.time),\r\n                timerCls: getTimerCls(timeData.time),\r\n                state: watchstate,\r\n                startBtnCls: getStartBtnCls(watchstate),\r\n                progress: timeData.progress,\r\n                roundProgress: roundProgress,\r\n                trainingProgress: trainginProgress\r\n            })\r\n        }\r\n    }\r\n\r\n    function calculateRoundCurrentTime(ct: number) {\r\n        return currentRef.current.round.actions.reduce<number>((result: number, act: StopwatchAction, idx: number) => {\r\n            if (idx < currentRef.current.actionIdx) {\r\n                return result + act.duration;\r\n            }\r\n            return result;\r\n        }, 0) + ct;\r\n    }\r\n\r\n    function calculateRoundProgress(ct: number) {\r\n        return 100 - calculateProgress(calculateRoundCurrentTime(ct), currentRef.current.roundDuration);\r\n    }\r\n\r\n    function calculateTrainingProgress(ct: number) {\r\n        let duration = currentRef.current.roundIdx > 0 ?\r\n            trainingRef.current.rounds.reduce<number>((resut: number, round: Round, idx: number) => {\r\n                if (idx < currentRef.current.roundIdx) {\r\n                    return resut + calculateDuration(round.actions);\r\n                }\r\n                return resut;\r\n            }, 0) + calculateRoundCurrentTime(ct)\r\n            : calculateRoundCurrentTime(ct);\r\n        return 100 - calculateProgress(duration, currentRef.current.totalDuration);\r\n    }\r\n\r\n    function playSound() {\r\n        if (canPlay) {\r\n            let note = document.getElementById(\"stopwatch-countdown\") as HTMLAudioElement;\r\n            note.currentTime = 0;\r\n            note.play();\r\n        }\r\n\r\n    }\r\n\r\n    function playEndSound() {\r\n        if (canPlay) {\r\n            let note = document.getElementById(\"stopwatch-end\") as HTMLAudioElement;\r\n            note.currentTime = 0;\r\n            note.play();\r\n        }\r\n    }\r\n\r\n\r\n    function getClassByType(type: string) {\r\n        switch (type) {\r\n            case 'warmup':\r\n                return \"cui-text-success\";\r\n            case 'break':\r\n                return \"scui-text-error\";\r\n            case 'exercise':\r\n                return \"cui-text-accent\";\r\n            case 'cooldown':\r\n                return \"cui-text-secondar\";\r\n            default:\r\n                return \"\";\r\n        }\r\n    }\r\n\r\n    function getTimerCls(timer: number): string {\r\n        return timer > 0 && timer <= 3 ? \"cui-text-warning timer-blink-animation\" : \"\";\r\n    }\r\n\r\n    function getStartBtnCls(state: StopWatchState) {\r\n        console.log(state)\r\n        return state !== StopWatchStateOptions.STOPPED ? \"cui-error\" : \"cui-accent\";\r\n    }\r\n\r\n    function onGetPlaySound(canPlay: boolean) {\r\n        setCanPlay(canPlay);\r\n    }\r\n\r\n    function getBackgroundClass(action: StopwatchAction) {\r\n        if (!is(action)) {\r\n            return \"\";\r\n        }\r\n        return getBgClassByType(action.type);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        const getTrainingSubscription = window.$flow.subscribe(\"GET_TRAINING\", { finish: onGetTraining })\r\n        const settingsPlaySound = window.$settingsFlow.subscribe(SETTINGS_FLOW_ACTIONS.GET_SOUND_ENABLED, {\r\n            finish: onGetPlaySound\r\n        })\r\n        window.$settingsFlow.perform(SETTINGS_FLOW_ACTIONS.GET_SOUND_ENABLED);\r\n        const wakeLock = new KeepScreenAwakeFeature();\r\n        try {\r\n            wakeLock.activate();\r\n        } catch (e) {\r\n            setErrorMessage(\"We cannot activate feature to keep your device's screen awake during training performance\")\r\n        }\r\n        let stop = new StopWatch();\r\n        stop.onTick(onStopwatchTick);\r\n        setStopwatch(stop);\r\n        if (id > -1) {\r\n            window.$flow.perform(\"GET_TRAINING\", id)\r\n\r\n        }\r\n        return () => {\r\n            window.$flow.unsubscribe(\"GET_TRAINING\", getTrainingSubscription.id)\r\n            window.$settingsFlow.unsubscribe(SETTINGS_FLOW_ACTIONS.GET_SOUND_ENABLED, settingsPlaySound.id);\r\n            if (stopwatch)\r\n                stopwatch.finish();\r\n            wakeLock.release();\r\n        }\r\n    }, [id, canPlay])\r\n    return (<>\r\n        {!state.training ?\r\n            <NotFound message=\"We couldn't find training\" /> :\r\n            <div className={\"stopwatch-layout-content cui-flex-center \" + getBackgroundClass(current.action)}>\r\n                <div className=\"stopwatch-content-width perform-layout cui-text-center animation-fade-in\">\r\n                    <div className=\"perform-main-controls\">\r\n                        <h2 className=\"cui-h2 cui-margin-small-bottom\">{state.training.name}</h2>\r\n                        <p className=\"cui-text-muted cui-text-small cui-margin-remove\">Round {current.roundIdx + 1} of {state.training.rounds.length}</p>\r\n                        <span className=\"cui-svg total-circle-progress\" cui-circle-progress={watchState.trainingProgress}>\r\n                            <div className=\"\">\r\n                                <span className=\"cui-svg current-circle-progress\" cui-circle-progress={watchState.roundProgress}>\r\n                                    <div>\r\n                                        <span className=\"cui-svg countdown-circle-progress\" cui-circle-progress={watchState.progress}>\r\n                                            <div>\r\n                                                <span className=\"cui-block cui-text-small\">{current.actionIdx + 1}</span>\r\n                                                <h1 className={\"cui-h1 cui-margin-remove \" + watchState.timerCls}>{watchState.timer}</h1>\r\n                                            </div>\r\n                                        </span>\r\n                                    </div>\r\n                                </span>\r\n                            </div>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"perform-buttons\">\r\n                        <div className=\"cui-width-1-1\">\r\n                            <h3 className={\"cui-h3 \" + current.class}>{current.action && current.action.name}</h3>\r\n                            <div className=\"cui-flex cui-center\">\r\n                                {watchState.state !== StopWatchStateOptions.STOPPED && <button className=\"cui-button cui-default cui-margin-small-right\" onClick={onPauseClick}>{watchState.state === StopWatchStateOptions.PAUSED ? \"Resume\" : \"Pause\"}</button>}\r\n                                <button className={\"cui-button \" + watchState.startBtnCls} onClick={onStartClick}>{watchState.state === StopWatchStateOptions.STOPPED ? \"Start\" : \"Stop\"}</button>\r\n                            </div>\r\n                            <p className=\"cui-text-muted\">{state.training.description}</p>\r\n                            <span className=\"cui-text-error\">{errorMessage}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <audio id=\"stopwatch-countdown\" src=\"/static/audio/stopwatch_countdown.mp3\" />\r\n                <audio id=\"stopwatch-end\" src=\"/static/audio/stopwatch_end.mp3\" />\r\n            </div>\r\n        }\r\n    </>);\r\n}\r\n","import * as React from 'react'\r\nexport interface OnSwitchValueUpdate {\r\n    (name: string, value: boolean): void;\r\n}\r\n\r\n\r\nexport interface SettingsSwitchListItemProps {\r\n    label: string,\r\n    value: boolean,\r\n    name: string,\r\n    onUpdate: OnSwitchValueUpdate;\r\n}\r\n\r\nexport function SettingsSwitchListItem(props: SettingsSwitchListItemProps) {\r\n    function onChange(ev: any) {\r\n        let target = ev.target\r\n        if (props.onUpdate) {\r\n            props.onUpdate(target.name, target.checked);\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n    }, [props.value, props.name])\r\n    return (\r\n        <div className=\"cui-flex cui-middle cui-padding-small\">\r\n            <div className=\"cui-flex-grow\">{props.label}</div>\r\n            <div className=\"cui-input-switch\">\r\n                <input type=\"checkbox\" id={props.name} name={props.name} checked={props.value} onChange={onChange} />\r\n                <label htmlFor={props.name} className=\"cui-content\"></label>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import * as React from 'react'\r\nimport { SETTINGS_FLOW_ACTIONS } from '../../../app/flow/settings';\r\nimport { setDarkMode } from '../../../core/helpers';\r\nimport { Settings } from '../../../core/models';\r\nimport { PageHeader } from '../common/PageHeader';\r\nimport { SettingsSwitchListItem } from './SettingsSwitchListItem'\r\nexport interface SettingsState {\r\n    darkModeEnabled: boolean;\r\n    soundEnabled: boolean;\r\n}\r\nexport function StopwatchSettings() {\r\n    const [settings, setSettings] = React.useState<Settings>({\r\n        soundEnabled: false,\r\n        darkMode: false\r\n    })\r\n\r\n    function onValueChange(name: string, value: boolean) {\r\n        if (name !== 'soundEnabled' && name !== \"darkMode\") {\r\n            return;\r\n        }\r\n        let newSettings = {\r\n            ...settings,\r\n            [name]: value\r\n        }\r\n        window.$settingsFlow.perform(SETTINGS_FLOW_ACTIONS.SET_SETTINGS, newSettings);\r\n        setSettings(newSettings)\r\n    }\r\n\r\n    function onUpdateSettings() {\r\n        console.log(\"Update\")\r\n        window.$settingsFlow.perform(SETTINGS_FLOW_ACTIONS.GET_SETTINGS);\r\n    }\r\n\r\n    function onGetSettings(settings: Settings) {\r\n        console.log(\"GetSetting\")\r\n        if (settings) {\r\n            setSettings(settings);\r\n            setDarkMode(settings.darkMode);\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        console.log(\"Reload\")\r\n        const settingsSub = window.$settingsFlow.subscribe(SETTINGS_FLOW_ACTIONS.GET_SETTINGS, { finish: onGetSettings })\r\n        const settingsUpdateSub = window.$settingsFlow.subscribe(SETTINGS_FLOW_ACTIONS.SET_SETTINGS, { finish: onUpdateSettings })\r\n\r\n        onUpdateSettings();\r\n        return () => {\r\n            window.$settingsFlow.unsubscribe(SETTINGS_FLOW_ACTIONS.GET_SETTINGS, settingsSub.id);\r\n            window.$settingsFlow.unsubscribe(SETTINGS_FLOW_ACTIONS.SET_SETTINGS, settingsUpdateSub.id);\r\n        }\r\n    }, [settings.darkMode, settings.soundEnabled])\r\n    return (<><div className=\"stopwatch-content-width\">\r\n        <PageHeader title=\"Settings\" description=\"Change application setup\" />\r\n        <div className=\"\">\r\n            <ul className=\"cui-list\">\r\n                <li>\r\n                    <SettingsSwitchListItem label=\"Dark mode\" name=\"darkMode\" value={settings.darkMode} onUpdate={onValueChange} />\r\n                </li>\r\n                <li>\r\n                    <SettingsSwitchListItem label=\"Play sound\" name=\"soundEnabled\" value={settings.soundEnabled} onUpdate={onValueChange} />\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div></>);\r\n}\r\n\r\n\r\n","import * as React from 'react'\r\nimport { PageHeader } from '../common/PageHeader';\r\n\r\nexport function About() {\r\n    return (<><div className=\"stopwatch-content-width\">\r\n        <PageHeader title=\"About\" description=\"Some details about the application\" />\r\n        <div className=\"\">\r\n            <div className=\"cui-container \">\r\n                <h3 className=\"cui-h3\">Repository</h3>\r\n                <p className=\"\">Project sources can be found on Github under following link: <a className=\"cui-link cui-accent\" href=\"https://github.com/bpd-d/bpd-stopwatch-app\">bpd-stopwatch-app</a></p>\r\n            </div>\r\n            <div className=\"cui-container\">\r\n                <h3 className=\"cui-h3\">Links</h3>\r\n                <p className=\"\">Project uses third party libraries, see following list: </p>\r\n                <ul className=\"cui-list\">\r\n                    <li>\r\n                        <div className=\"\">\r\n                            <div className=\"\">\r\n                                <span>React</span>\r\n                            </div>\r\n                            <a href=\"https://github.com/facebook/react\" className=\"cui-link\">Github</a>\r\n                            <a href=\"https://reactjs.org/\" className=\"cui-link cui-margin-left\">React JS home page</a>\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        <div className=\"\">\r\n                            <div className=\"\">\r\n                                <span>cUI Light</span>\r\n                            </div>\r\n                            <a href=\"https://github.com/bpd-d/cui-light\" className=\"cui-link\">cUI Light on Github</a>\r\n                            <a href=\"https://github.com/bpd-d/cui-styles\" className=\"cui-link cui-margin-left\">cUI Styles on Github</a>\r\n                            <a href=\"https://github.com/bpd-d/cui-icons\" className=\"cui-link cui-margin-left\">cUI Icons on Github</a>\r\n                        </div></li>\r\n                    <li>\r\n                        <div className=\"\">\r\n                            <div className=\"\">\r\n                                <span>BPD Flow</span>\r\n                            </div>\r\n                            <a href=\"https://github.com/bpd-d/bpd-flow\" className=\"cui-link\">Github</a>\r\n                        </div>\r\n\r\n                    </li>\r\n                    <li>\r\n                        <div className=\"\">\r\n                            <div className=\"\">\r\n                                <span>BPD Storage</span>\r\n                            </div>\r\n                            <a href=\"https://github.com/bpd-d/bpd-storage\" className=\"cui-link\">Github</a>\r\n                        </div>\r\n\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div></>);\r\n}\r\n","import * as React from 'react'\r\n\r\nexport function Footer() {\r\n    function currentYear(): string {\r\n        return new Date().getFullYear() + \"\";\r\n    }\r\n    return (\r\n        <div className=\"stopwatch-footer cui-flex cui-center cui-right--l cui-middle\">\r\n            <div className=\"cui-margin-small-right--l\">\r\n                <span className=\"cui-margin-small-right\">Copyrights {currentYear()}</span>\r\n                <a href=\"https://github.com/bpd-d\" target=\"_blank\" className=\"cui-link cui-accent\">BPDDev</a>\r\n            </div>\r\n        </div>);\r\n}\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport { Switch, Route, BrowserRouter, useLocation } from \"react-router-dom\";\r\nimport { Home } from \"./components/home/home\";\r\nimport { ErrorRoute } from \"./error\";\r\nimport { Navbar } from \"./components/navbar/navbar\";\r\nimport { OffCanvas } from \"./components/offacanvas/offcanvas\";\r\nimport { StopwatchActionsComponent } from \"./components/actions/StopwatchActionsComponent\";\r\nimport EditTraining from \"./components/trainings/EditTraining\";\r\nimport { PerfromTraining } from \"./components/perform/PerformTraining\";\r\nimport { StopwatchSettings } from \"./components/settings/StopwatchSettings\";\r\nimport { FlowTask } from \"../../node_modules/bpd-flow/dist/index\";\r\nimport { SETTINGS_FLOW_ACTIONS } from \"../app/flow/settings\";\r\nimport { setDarkMode } from \"../core/helpers\";\r\nimport { About } from \"./components/about/About\";\r\nimport { Footer } from \"./components/footer/Footer\";\r\n\r\nexport interface AppProps {\r\n}\r\nexport interface AppState {\r\n    currentSite?: string;\r\n}\r\n\r\n// 'HelloProps' describes the shape of props.\r\n// State is never set so we use the '{}' type.\r\nexport class App extends React.Component<AppProps, AppState> {\r\n    darkModeSub: FlowTask<any>;\r\n    constructor(props: AppProps) {\r\n        super(props);\r\n        this.state = {\r\n            currentSite: \"\"\r\n        }\r\n        this.darkModeSub = window.$settingsFlow.subscribe(SETTINGS_FLOW_ACTIONS.GET_DARK_MODE, { finish: this.onDarkMode.bind(this) });\r\n        window.$settingsFlow.perform(SETTINGS_FLOW_ACTIONS.GET_DARK_MODE);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.darkModeSub) {\r\n            window.$settingsFlow.unsubscribe(SETTINGS_FLOW_ACTIONS.GET_DARK_MODE, this.darkModeSub.id);\r\n        }\r\n    }\r\n\r\n    onDarkMode(flag: boolean) {\r\n        setDarkMode(flag);\r\n    }\r\n\r\n    render() {\r\n        return <BrowserRouter>\r\n            <div className=\"stopwatch-layout-main\">\r\n                <Navbar />\r\n                <div className=\"stopwatch-layout-content cui-overflow-y-auto\">\r\n                    <Switch>\r\n                        <Route path=\"/trainings/perform/:id\" component={PerfromTraining}></Route>\r\n                        <Route path=\"/trainings/edit/new\" component={EditTraining}></Route>\r\n                        <Route path=\"/trainings/edit/:id\" component={EditTraining}></Route>\r\n                        <Route path=\"/actions\" component={StopwatchActionsComponent}></Route>\r\n                        <Route path=\"/settings\" component={StopwatchSettings}></Route>\r\n                        <Route path=\"/about\" component={About}></Route>\r\n                        <Route path=\"/\" component={Home}></Route>\r\n                        <Route>\r\n                            <ErrorRoute />\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n                <Footer />\r\n                \r\n                <OffCanvas />\r\n            </div></BrowserRouter>;\r\n    }\r\n}","import { ITrainingsService, IActionsService, ISettingsService } from \"./interfaces\";\r\nimport { Training, StopwatchAction, Settings } from \"../models\";\r\nimport { BpdStorage } from \"../../../node_modules/bpd-storage/dist/index\";\r\nimport { ActionValidator, TrainingValidator } from \"../validators\";\r\n\r\nexport class TrainingsStorageService implements ITrainingsService {\r\n    #storage: BpdStorage;\r\n    #trainings: Training[];\r\n    #STORAGE_NAME: string;\r\n    #validator: TrainingValidator;\r\n    constructor() {\r\n        this.#storage = new BpdStorage(\"local\", \"BPD_TRAININGS\");\r\n        this.#STORAGE_NAME = \"Trainings\";\r\n        this.#trainings = [];\r\n        this.#validator = new TrainingValidator();\r\n    }\r\n\r\n\r\n    getAllTrainings(): Training[] {\r\n        console.log(\"Get All\")\r\n        return this.getTrainings();\r\n    }\r\n\r\n    addTraining(training: Training): boolean {\r\n        let result = false;\r\n        if (this.validate(training)) {\r\n            this.onAction((t: Training[]) => {\r\n                let len = t.length\r\n                if (!training.id) {\r\n                    training.id = len > 0 ? t[len - 1].id + 1 : 0;\r\n                    t.push(training)\r\n\r\n                    result = true;\r\n                }\r\n                return result;\r\n            })\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    updateTraining(training: Training): boolean {\r\n        let result = false;\r\n        if (this.validate(training)) {\r\n            if (!training.id || training.id < 0) {\r\n                result = this.addTraining(training)\r\n            } else {\r\n                this.onAction((t: Training[]) => {\r\n                    let idx = t.findIndex(item => item.id === training.id);\r\n                    if (idx > -1) {\r\n                        t[idx] = training;\r\n                        result = true;\r\n                    }\r\n                    return result;\r\n                })\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    deleteTraining(id: number): boolean {\r\n        let result = false;\r\n        if (id < 0) {\r\n            return false;\r\n        }\r\n        this.onAction((t: Training[]) => {\r\n            let idx = t.findIndex(item => item.id === id);\r\n            if (idx > -1) {\r\n                t.splice(idx, 1);\r\n                result = true;\r\n            }\r\n            return result;\r\n        })\r\n        return result;\r\n    }\r\n\r\n    getTraining(id: number): Training {\r\n        let training = undefined;\r\n        this.onAction((t) => {\r\n            training = t.find(item => { return item.id == id });\r\n            return false;\r\n        })\r\n        return training;\r\n    }\r\n\r\n    getCurrentTraining(): Training {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    setCurrentTraining(training: Training): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    private getTrainings(): Training[] {\r\n        if (this.#trainings.length === 0) {\r\n            let res = this.#storage.getAny(this.#STORAGE_NAME);\r\n            this.#trainings = res ?? [];\r\n        }\r\n        return this.#storage.getAny(this.#STORAGE_NAME) ?? [];\r\n    }\r\n\r\n    private setTrainings(t: Training[]): void {\r\n        this.#storage.setAny(this.#STORAGE_NAME, t);\r\n    }\r\n\r\n\r\n    private validate(training: Training): boolean {\r\n        return this.#validator.validate(training).status;\r\n    }\r\n\r\n    private onAction(callback: (t: Training[]) => boolean) {\r\n        let t = this.getTrainings();\r\n        if (callback(t)) {\r\n            console.log(t)\r\n            this.setTrainings(t);\r\n        }\r\n    }\r\n}\r\n\r\nexport class ActionStorageService implements IActionsService {\r\n    #storage: BpdStorage;\r\n    #actions: StopwatchAction[];\r\n    #validator: ActionValidator;\r\n    constructor() {\r\n        this.#storage = new BpdStorage(\"local\", \"BPD_TRAININGS\");\r\n        this.#actions = [];\r\n        this.#validator = new ActionValidator();\r\n        this.getActionsFromStorage();\r\n    }\r\n    getAllActions(): StopwatchAction[] {\r\n        return [...this.#actions];\r\n    }\r\n\r\n    setAction(action: StopwatchAction): boolean {\r\n        if (!this.#validator.validate(action).status) {\r\n            return false;\r\n        }\r\n        let existingIndex = this.getIndex(action);\r\n        if (existingIndex > -1) {\r\n            this.#actions[existingIndex] = action;\r\n        } else {\r\n            this.#actions.push(action)\r\n        }\r\n        this.setActionsToStorage();\r\n        return true;\r\n    }\r\n\r\n    removeAction(action: StopwatchAction): boolean {\r\n        if (!this.#validator.validate(action).status) {\r\n            return false;\r\n        }\r\n\r\n        let existingIndex = this.getIndex(action);\r\n        if (existingIndex < 0) {\r\n            return false;\r\n        }\r\n        this.#actions.splice(existingIndex, 1);\r\n        this.setActionsToStorage();\r\n        return true;\r\n\r\n    }\r\n\r\n    private getIndex(action: StopwatchAction): number {\r\n        return this.#actions.findIndex(item => item.name === action.name);\r\n    }\r\n    private getActionsFromStorage() {\r\n        let val = this.#storage.getAny(\"ACTIONS\");\r\n        this.#actions = val ?? [];\r\n    }\r\n\r\n    private setActionsToStorage() {\r\n        this.#storage.setAny(\"ACTIONS\", this.#actions);\r\n    }\r\n}\r\n\r\nexport class SettingsService implements ISettingsService {\r\n    #storage: BpdStorage;\r\n    constructor() {\r\n        this.#storage = new BpdStorage(\"local\", \"BPD_SETTINGS\");\r\n\r\n    }\r\n\r\n    setSettings(value: Settings): boolean {\r\n        this.#storage.setAny(\"SETTINGS\", value);\r\n        return true;\r\n    }\r\n\r\n    getSettings(): Settings {\r\n        return this.#storage.getAny(\"SETTINGS\") || {\r\n            darkMode: false,\r\n            soundEnabled: false\r\n        };\r\n    }\r\n\r\n    setSoundEnabled(flag: boolean): void {\r\n        let settings = this.getSettings();\r\n        if (flag !== settings.soundEnabled) {\r\n            settings.soundEnabled = flag;\r\n            this.setSettings(settings)\r\n        }\r\n    }\r\n\r\n    isSoundEnabled(): boolean {\r\n        return this.getSettings()?.soundEnabled;\r\n    }\r\n\r\n    setDarkMode(flag: boolean): void {\r\n        let settings = this.getSettings();\r\n        if (flag !== settings.darkMode) {\r\n            settings.darkMode = flag;\r\n            this.setSettings(settings)\r\n        }\r\n    }\r\n\r\n    isDarkMode(): boolean {\r\n        return this.getSettings()?.darkMode;\r\n    }\r\n}","import { Training } from \"../../core/models\";\r\nimport { ITrainingsService } from \"../../core/services/interfaces\";\r\n\r\nexport const ACTIONS = {\r\n    GET_ALL_TRAININGS: \"GET_ALL_TRAININGS\",\r\n    ADD_TRAINING: \"ADD_TRAINING\"\r\n}\r\n\r\nexport type TrainingsFlowInput = void | Training | number;\r\nexport type TrainingsFlowOutput = Training[] | Training | boolean;\r\n\r\nexport class TrainingsFlow {\r\n    #service: ITrainingsService;\r\n    constructor(service: ITrainingsService) {\r\n        this.#service = service;\r\n    }\r\n\r\n    getActions() {\r\n        return {\r\n            \"GET_ALL_TRAININGS\": () => {\r\n                return this.#service.getAllTrainings();\r\n            },\r\n            \"ADD_TRAINING\": (t: Training) => {\r\n                return this.#service.addTraining(t);\r\n            },\r\n            \"UPDATE_TRAINING\": (t: Training) => {\r\n                return this.#service.updateTraining(t);\r\n            },\r\n            \"DELETE_TRAINING\": (id: number) => {\r\n                return this.#service.deleteTraining(id);\r\n            },\r\n            \"GET_TRAINING\": (id: number) => {\r\n                return this.#service.getTraining(id);\r\n            },\r\n        }\r\n    }\r\n}","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport '../styles/styles.scss';\r\nimport { App } from \"./ui/app\";\r\nimport { CuiInit, CuiInitData, CuiSetupInit, CuiInstance } from \"../node_modules/cui-light/dist/index\";\r\nimport { CuiIconsPack } from '../node_modules/bpd-cui-icons/index';\r\nimport { Flow, FlowFactory } from '../node_modules/bpd-flow/dist/index';\r\nimport { TrainingsStorageService, ActionStorageService, SettingsService } from './core/services/storage';\r\nimport { TrainingsFlow, TrainingsFlowInput, TrainingsFlowOutput } from \"./app/flow/trainings\";\r\nimport { ActionsFlowInput, ActionsFlowOutput, ActionsFlow } from \"./app/flow/actions\";\r\nimport { SettingsFlow, SettingsFlowInput, SettingsFlowOutput } from \"./app/flow/settings\";\r\n\r\n\r\ndeclare global {\r\n    interface Window {\r\n        cuiInit: CuiInit;\r\n        $cui: CuiInstance;\r\n        $flow: Flow<any, any>;\r\n        $actionsFlow: Flow<ActionsFlowInput, ActionsFlowOutput>;\r\n        $settingsFlow: Flow<SettingsFlowInput, SettingsFlowOutput>;\r\n    }\r\n}\r\n\r\nlet rootElement = document.getElementById('root');\r\nlet app_icons = require(\"../static/icons/all.json\");\r\nlet setup = new CuiSetupInit();\r\nsetup.logLevel = 'debug';\r\nsetup.root = rootElement;\r\nlet cuiSetup: CuiInitData = {\r\n    setup: setup,\r\n    icons: {\r\n        ...CuiIconsPack,\r\n        ...app_icons\r\n    }\r\n};\r\n\r\nlet service = new TrainingsStorageService();\r\nlet traningsFlow = new TrainingsFlow(service);\r\nlet actionsService = new ActionStorageService();\r\nlet actionsFlow = new ActionsFlow(actionsService);\r\nlet settingsService = new SettingsService();\r\nlet settingsFlow = new SettingsFlow(settingsService);\r\n\r\nwindow.$flow = FlowFactory.create<TrainingsFlowInput, TrainingsFlowOutput>(traningsFlow.getActions());\r\nwindow.$actionsFlow = FlowFactory.create<ActionsFlowInput, ActionsFlowOutput>(actionsFlow.getActions());\r\nwindow.$settingsFlow = FlowFactory.create<SettingsFlowInput, SettingsFlowOutput>(settingsFlow.getActions());\r\n\r\nwindow.cuiInit.init(cuiSetup).then((result) => {\r\n    ReactDOM.render(<App />, rootElement);\r\n});\r\n\r\n"],"sourceRoot":""}