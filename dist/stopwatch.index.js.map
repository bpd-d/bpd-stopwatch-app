{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/app/push/push.ts","webpack:///./src/core/models.ts","webpack:///./src/core/statics.ts","webpack:///./src/core/helpers.ts","webpack:///./src/ui/routes.ts","webpack:///./src/api/routes/routes.ts","webpack:///./src/ui/components/home/list.tsx","webpack:///./src/ui/components/common/TriangleShadow.tsx","webpack:///./src/ui/components/home/home.tsx","webpack:///./src/ui/error.tsx","webpack:///./src/ui/components/common/NavbarLink.tsx","webpack:///./src/ui/components/navbar/navbar.tsx","webpack:///./src/ui/hooks/NavbarTitle.tsx","webpack:///./src/ui/components/offacanvas/offcanvas.tsx","webpack:///./src/app/flow/actions.ts","webpack:///./src/core/validators.ts","webpack:///./src/ui/components/common/BpdDialog.tsx","webpack:///./src/ui/components/common/ErrorsList.tsx","webpack:///./src/ui/components/common/BpdActionIcon.tsx","webpack:///./src/ui/components/actions/ActionTypeRadioChooser.tsx","webpack:///./src/ui/components/actions/AddActionDialog.tsx","webpack:///./src/ui/components/common/ClearableInput.tsx","webpack:///./src/ui/components/trainings/IconLabel.tsx","webpack:///./src/ui/components/common/BpdConfirmDrop.tsx","webpack:///./src/ui/components/actions/ActionsEditGrid.tsx","webpack:///./src/ui/components/common/PageHeader.tsx","webpack:///./src/ui/components/common/MainComponentBase.tsx","webpack:///./src/ui/components/actions/StopwatchActionsComponent.tsx","webpack:///./src/app/flow/trainings.ts","webpack:///./src/ui/components/common/GoBack.tsx","webpack:///./src/ui/components/common/NotFound.tsx","webpack:///./src/ui/components/trainings/ButtonBar.tsx","webpack:///./src/ui/components/common/BpdActionLabel.tsx","webpack:///./src/ui/components/actions/ActionSelectDropdown.tsx","webpack:///./src/ui/components/trainings/EditRoundDialog.tsx","webpack:///./src/ui/components/trainings/EditRoundListItem.tsx","webpack:///./src/ui/components/common/BpdDialogFooter.tsx","webpack:///./src/ui/components/trainings/QuickRoundDialog.tsx","webpack:///./src/ui/components/common/Loading.tsx","webpack:///./src/ui/components/trainings/EditTraining.tsx","webpack:///./src/ui/components/common/Dialogs.ts","webpack:///./src/api/screen/screen.ts","webpack:///./src/api/stopwatch/stopwatch.ts","webpack:///./src/app/flow/settings.ts","webpack:///./src/ui/hooks/settings.tsx","webpack:///./src/ui/hooks/useResize.tsx","webpack:///./src/ui/components/perform/TrainingSoundPlayer.tsx","webpack:///./src/ui/components/common/IconButton.tsx","webpack:///./src/ui/components/perform/PerformButtonBar.tsx","webpack:///./src/ui/components/perform/countdown/CountdownTimers.tsx","webpack:///./src/ui/components/perform/PerformTraining.tsx","webpack:///./src/ui/hooks/loading.tsx","webpack:///./src/ui/components/perform/hook.tsx","webpack:///./src/ui/components/perform/countdown/functions.tsx","webpack:///./src/ui/components/settings/SettingsSwitchListItem.tsx","webpack:///./src/ui/components/common/BpdDrop.tsx","webpack:///./src/ui/components/perform/countdown/models.ts","webpack:///./src/ui/hooks/AppSettings.ts","webpack:///./src/ui/components/settings/StopwatchSettings.tsx","webpack:///./src/ui/components/about/About.tsx","webpack:///./src/ui/components/footer/Footer.tsx","webpack:///./src/ui/components/tutorial/TutorialDialog.tsx","webpack:///./src/ui/hooks/fetch.tsx","webpack:///./src/ui/components/common/BpdLoading.tsx","webpack:///./src/ui/components/common/BpdError.tsx","webpack:///./src/ui/components/docs/components.tsx","webpack:///./src/ui/components/help/help.tsx","webpack:///./src/ui/components/settings/SettingsDevTools.tsx","webpack:///./src/ui/components/devtools/DevTools.tsx","webpack:///./src/ui/app.tsx","webpack:///./src/core/services/storage.tsx","webpack:///./src/core/services/push.ts","webpack:///./src/core/services/app.ts","webpack:///../cui-light-app/dist/esm/core/models/setup.js","webpack:///./src/index.tsx","webpack:///./src/ui/imports.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","PUSH_ACTIONS","PushServiceFlow","service","this","title","setNavbarTitle","bg","StopwatchActionType","TrainingState","AppRunningModes","DefaultActions","id","duration","type","removable","editable","ERROR_CODES","getDefaultRoundName","index","DefaultSettings","darkMode","soundEnabled","isWelcome","simpleView","countdownView","showMessage","message","$cui","alert","showToast","toast","calculateDuration","actions","is","reduce","Number","parseInt","getUserDisplayNotation","seconds","getSimplifiedDuration","format","restSeconds","Math","floor","secondsLeft","getDisplayTimerValue","setDarkMode","getUtils","setLightMode","calculateProgress","current","max","getTotalDuration","training","rounds","getBgClassByType","getTextClassByActionType","move","collection","from","to","size","amount","el","newLength","newTo","buildQuickRoundActions","exerciseCount","stopwatchActions","warmup","exercise","cooldown","setPageTitle","text","document","$push","perform","createArray","Array","isArray","MAPPIGNS","routes","undefined","route","getRoute","url","icon","attributes","uri","getUrl","enumerateObject","prop","replace","description","TrainingList","props","className","list","map","item","TrainingListItem","onDelete","history","useHistory","React","deleteSubscription","$flow","subscribe","finish","unsubscribe","onClick","renderUrl","toUpperCase","getActionsDuration","cui-icon","cui-tooltip","TriangleShadow","Home","state","updateList","onDeleteTrainingComplete","deleteTraining","subscription","onDeleteSubscription","elementIdx","findIndex","onYes","flag","setState","NoTrainings","ErrorRoute","NavbarLink","shouldClose","emit","exact","activeClassName","isIcon","IconNavLabel","RouteNavbarLink","class","Navbar","currentLocation","useLocation","currentSite","location","setLocation","init","setTitle","onUpdate","pushServiceTitleSub","useNavbarTitle","split","pathname","toLocaleUpperCase","goBack","cui-open","getName","OffCanvas","cui-off-canvas","href","cui-close","ACTIONS_FLOW_ACTIONS","ActionsFlow","getAllActions","action","setAction","removeAction","clearActions","ValidatorBase","status","errors","performValidation","e","errorMsg","console","error","TrainingValidator","RoundValidator","ActionValidator","CompleteTrainingValidator","err","validate","validateRounds","len","validateActions","BpdDialog","cui-dialog","body","footer","ErrorsList","BpdActionIcon","ActionTypeRadioChooser","groupId","radioId","setActions","onChange","ev","target","checked","found","find","act","matches","buildItem","htmlFor","AddActionDialog","setErrors","onValueChange","event","placeholder","min","onSave","actionValidator","dialogCui","ClearableInput","setValue","changeValue","IconLabel","label","BpdConfirmDrop","cancelLabel","confirmLabel","cui-drop","onCancel","onConfirm","ActionsEditGrid","filter","match","toLowerCase","matchesName","option","onEdit","onOption","PageHeader","MainComponentBase","routeData","routeName","updateTitle","children","child","defaultAction","StopwatchActionsComponent","setFilter","onGetAll","onAddOrEditClick","getAllSub","$actionsFlow","setActionSub","removeActionSub","ACTIONS","TrainingsFlow","getAllTrainings","addTraining","updateTraining","getTraining","getDraft","setDraft","clearDraft","draft","clearTrainings","withRouter","NotFound","classes","ButtonBar","items","ButtonBarItem","modifiers","BpdActionLabel","ActionSelectDropdown","DropTrigger","onSelect","EditRoundDialog","useState","selected","setStateRoundData","definedActions","round","currentCount","are","copy","onSwapAction","newActions","onDeleteAction","validation","EditRoundListItem","isFirst","onMoveUp","isLast","onMoveDown","onClone","BpdDialogFooter","QuickRoundDialog","groupedActions","out","groupActionsByType","break","setExerciseCount","QuickRoundDialogBody","count","onCounterUpdate","updateCounter","QuickRoundDialogSelect","Loading","EditTrainingSection","currentIndex","currentRound","setDefinedActions","onRoundEdit","onRoundDelete","updateRoundsState","onRoundDown","onRoundUp","onRoundClone","idx","cloned","clone","insert","updateOrInsertRound","onFormChange","includes","getDefinedActions","getDefinedActionsSub","rows","arr","buttonNavItems","isLoading","setIsLoading","notFound","setNotFound","useParams","onUpdateTraining","onGetTraining","onGetDraft","onTrainingSave","validaton","join","onDeleteTraining","onDeleteTrainingSub","updateTrainingSub","getTrainingSub","getDraftSub","deleteTraininSub","pushDraft","KeepAwakeToggle","screen","keepAwake","LoopLockScreen","element","createElement","appendChild","remove","src","newEl","autoplay","muted","loop","classList","add","textContent","KeepScreenAwakeFeature","getToggle","activate","release","StopWatchStateOptions","StopWatch","callback","setTimeout","tick","stop","clearTimeout","SETTINGS_FLOW_ACTIONS","SettingsFlow","isSoundEnabled","setSoundEnabled","isDarkMode","setSettings","getSettings","isWelcomeSet","setIsWelcome","clearSettings","useSettings","settings","onSaveSettings","$settingsFlow","onGetSettings","settingsSub","settingsUpdateSub","useIsFullscreen","onResize","addEventListener","removeEventListener","useResize","setIsFullscreen","isElementFullscreen","isFullscreen","clientHeight","availHeight","height","clientWidth","availWidth","width","TrainingSoundPlayer","countdownSound","exerciseSound","warmupSound","breakSound","cooldownSound","endSound","playSound","currentTime","play","ref","IconButton","PerformerButtonBar","startBtnText","startBtnCls","pauseBtnText","isPauseVisible","startBtnIcon","pauseBtnIcon","controls","setControls","updatePlayStateControls","playState","soundIcon","onMute","onPauseResume","onStartStop","fullscreenIcon","onFullScreen","CountDownTimer","watchState","roundIdx","roundTotal","cui-circle-progress","trainingProgress","roundProgress","progress","actionIdx","timerCls","timer","NewCountDownTimer","SimpleCountDownTimer","actionTotal","PerfromTraining","loading","log","getTrainingSubscription","PerformTrainingElement","errorMessage","setErrorMessage","wakeLock","TrainingPerformer","callError","stopwatch","setStopwatch","onTick","useStopwatch2","setOnTick","roundDuration","totalDuration","setWatchState","stopWatchRef","watchStateRef","settingsRef","mainViewRef","setDefaultWatchState","onStopwatchTick","total","actionDuration","ct","updateStopWatchState","getState","time","nextActionIdx","newAction","nextRoundIdx","newRound","setNextAction","reset","watchstate","timeData","calculateRoundCurrentTime","trainginProgress","calculateTrainingProgress","getCountDownTimer","closeFullscreen","openFullscreen","start","pause","resume","SettingsSwitchListItem","BpdDrop","dropRef","Error","COUNTDOWN_TYPES","useAppSettings","$appSettings","StopwatchSettings","appSettings","newSettings","About","AboutContent","Footer","Date","getFullYear","TutorialDialog","setIsLast","switchElement","onSwitched","ids","on","forEach","detach","cui-switch","cui-switcher","useFetch","options","response","setResponse","fetch","then","json","jsonData","BpdLoading","BpdError","cls","DocComponentSection","section","content","paragraph","DocComponentParagraph","header","Help","HelpContent","helpDocsData","HelpDoc","doc","sections","version","SettingsDevTools","onClear","onSettingsUpdate","settingsClearSub","actionsClearSub","trainingsClearSub","DevTools","AppBase","path","App","welcomeDialogHandle","onDarkMode","onWelcomeScreen","welcomeDialogCloseEventIds","onWelcomeDialogClose","darkModeSub","welcomeScreenGetSub","component","EditTraining","TrainingsStorageService","BpdStorage","getTrainings","onAction","getNextIndex","trainings","getAny","setAny","removeItem","getNumber","NaN","setNumber","setTrainings","ActionStorageService","getActionsFromStorage","existingIndex","getIndex","setActionsToStorage","val","SettingsService","PushService","AppSettingsService","CuiSetupInit","prefix","app","logLevel","interaction","animationTime","animationTimeShort","animationTimeLong","cacheSize","autoLightMode","scrollThreshold","resizeThreshold","root","busSetup","development","loadingIndicator","getElementById","setText","requestAnimationFrame","Promise","all","icons","rootElement","setup","eventsDef","handler","priority","cuiSetup","components","CuiIconComponent","CuiTooltipComponent","CuiCircleComponent","CuiSpinnerComponent","CuiOpenComponent","CuiCloseComponent","CuiDialogComponent","CuiOffCanvasComponent","CuiAccordionComponent","CuiDropComponenet","CuiSwitchComponent","CuiSwitcherComponent","CuiSliderComponent","plugins","CuiAutoLightModePlugin","autoLight","CuiAutoPrintModePlugin","autoPrint","CuiIconsPack","traningsFlow","actionsService","actionsFlow","settingsService","settingsFlow","pushService","FlowFactory","getActions","CuiInitializer","ReactDOM","onDataFetch"],"mappings":"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","file":"stopwatch.index.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([62,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { IPushService } from \"src/core/services/interfaces\";\r\n\r\nexport const PUSH_ACTIONS = {\r\n    SET_NAVBAR_TITLE: \"SET_NAVBAR_TITLE\",\r\n    SET_NAVBAR_BG: \"SET_NAVBAR_BG\",\r\n}\r\n\r\nexport type PushServiceInput = string;\r\nexport type PushServiceOutput = string;\r\n\r\n\r\nexport class PushServiceFlow {\r\n    #service: IPushService;\r\n    constructor(service: IPushService) {\r\n        this.#service = service;\r\n    }\r\n\r\n    getActions() {\r\n        return {\r\n            [PUSH_ACTIONS.SET_NAVBAR_TITLE]: (title: string) => {\r\n                return this.#service.setNavbarTitle(title);\r\n            },\r\n            [PUSH_ACTIONS.SET_NAVBAR_BG]: (bg: string) => {\r\n                return bg;\r\n            }\r\n        }\r\n    }\r\n}","export const StopwatchActionType = {\r\n    EXERCISE: 'exercise',\r\n    BREAK: 'break',\r\n    COOLDOWN: \"cooldown\",\r\n    WARMUP: \"warmup\"\r\n}\r\n\r\nexport const TrainingState = {\r\n    DRAFT: 'draft',\r\n    PUBLISH: 'publish',\r\n    NEW: \"new\",\r\n}\r\n\r\nexport type AppRunningMode = \"production\" | 'development';\r\nexport const AppRunningModes = {\r\n    DEVELOPMENT: \"development\",\r\n    PRODUCTION: \"production\"\r\n};\r\nexport interface Settings {\r\n    darkMode: boolean;\r\n    soundEnabled: boolean;\r\n    isWelcome: boolean;\r\n    simpleView: boolean; // deprecated\r\n    countdownView: string;\r\n}\r\n\r\nexport interface AppSettings {\r\n    version: string;\r\n    mode: AppRunningMode;\r\n}\r\n\r\nexport interface StopwatchAction {\r\n    id: string;\r\n    name: string;\r\n    duration: string;\r\n    type?: string;\r\n    color?: string;\r\n    removable?: boolean;\r\n    editable?: boolean;\r\n}\r\n\r\nexport interface Round {\r\n    actions: StopwatchAction[];\r\n    break?: number;\r\n    name?: string;\r\n}\r\n\r\nexport interface Training {\r\n    name: string;\r\n    description?: string;\r\n    id?: string;\r\n    rounds: Round[];\r\n    state: string;\r\n}\r\n\r\nexport class Exercise implements StopwatchAction {\r\n    id: string;\r\n    name: string;\r\n    duration: string;\r\n    type: string = StopwatchActionType.EXERCISE;\r\n    removable: false;\r\n    constructor(duration: number, name?: string) {\r\n        this.id = \"00001\";\r\n        this.duration = \"\" + duration;\r\n        this.name = name ? name : 'Exercise';\r\n    }\r\n}\r\n\r\nexport class WarmUp implements StopwatchAction {\r\n    id: string;\r\n    name: string;\r\n    duration: string;\r\n    type: string = StopwatchActionType.WARMUP;\r\n    removable: boolean = false;\r\n\r\n    constructor(duration: number) {\r\n        this.id = \"00002\";\r\n        this.duration = \"\" + duration;\r\n        this.name = \"Warm Up\"\r\n    }\r\n}\r\n\r\nexport class CoolDown implements StopwatchAction {\r\n    id: string;\r\n    name: string;\r\n    duration: string;\r\n    type: string = StopwatchActionType.COOLDOWN;\r\n    removable: false;\r\n    constructor(duration: number, name?: string) {\r\n        this.id = \"00003\";\r\n        this.duration = \"\" + duration;\r\n        this.name = name ? name : \"Cooldown\";\r\n    }\r\n}\r\n\r\nexport interface ActionsGroup {\r\n    [id: string]: StopwatchAction[];\r\n}\r\n\r\nexport interface RoundActions {\r\n    warmup: StopwatchAction;\r\n    exercise: StopwatchAction;\r\n    break: StopwatchAction;\r\n    cooldown: StopwatchAction;\r\n}","import { Settings, StopwatchAction, StopwatchActionType } from \"./models\";\r\n\r\nexport const DefaultActions: StopwatchAction[] = [{\r\n    id: \"9996\",\r\n    name: \"Warmup\",\r\n    duration: \"5\",\r\n    type: StopwatchActionType.WARMUP,\r\n    removable: false,\r\n    editable: false\r\n},\r\n{\r\n    id: \"9997\",\r\n    name: \"Exercise\",\r\n    duration: \"30\",\r\n    type: StopwatchActionType.EXERCISE,\r\n    removable: false,\r\n    editable: false\r\n},\r\n{\r\n    id: \"9998\",\r\n    name: \"Break\",\r\n    duration: \"60\",\r\n    type: StopwatchActionType.BREAK,\r\n    removable: false,\r\n    editable: false\r\n},\r\n{\r\n    id: \"9999\",\r\n    name: \"Cooldown\",\r\n    duration: \"90\",\r\n    type: StopwatchActionType.COOLDOWN,\r\n    removable: false,\r\n    editable: false\r\n}]\r\n\r\nexport const ERROR_CODES = {\r\n    e0000: \"OK\",\r\n    e0001: \"An error occured\",\r\n    e0100: \"Training is empty\",\r\n    e0101: \"Training name is not provided\",\r\n    e0102: \"Training has no rounds\",\r\n    e0200: \"Round is empty\",\r\n    e0201: \"Round has no actions\",\r\n    e0202: \"Round name is missing\",\r\n    e0300: \"Action is empty\",\r\n    e0301: \"Action name is not provided\",\r\n    e0302: \"Action type is not provided\",\r\n    e0303: \"Action duration is not correct\"\r\n\r\n}\r\n\r\nexport function getDefaultRoundName(index: number) {\r\n    return \"Round \" + index;\r\n}\r\n\r\nexport const DefaultSettings: Settings = {\r\n    darkMode: false,\r\n    soundEnabled: false,\r\n    isWelcome: false,\r\n    simpleView: false,\r\n    countdownView: \"simple\"\r\n}\r\n\r\nexport const APP_NAME = \"bpd Stopwatch\"","import { is } from \"bpd-toolkit/dist/esm/index\";\r\nimport { PUSH_ACTIONS } from \"../app/push/push\";\r\nimport { ActionsGroup, Round, RoundActions, StopwatchAction, Training } from \"./models\";\r\nimport { APP_NAME } from \"./statics\";\r\n\r\nexport function showMessage(title: string, message: string) {\r\n    window.$cui.alert(\"common-info-dialog\", \"Info\", {\r\n        title: title,\r\n        message: message\r\n    })\r\n}\r\n\r\nexport function showToast(message: string) {\r\n    window.$cui.toast(message);\r\n}\r\n\r\nexport function calculateDuration(actions: StopwatchAction[]) {\r\n    return is(actions) ? actions.reduce<number>((result: number, value: StopwatchAction) => {\r\n        return result + Number.parseInt(value.duration);\r\n    }, 0) : 0\r\n}\r\n\r\nexport function calcDisplayTimer(seconds: number): string {\r\n    if (seconds < 0) {\r\n        return \"Error\"\r\n    }\r\n    return getSimplifiedDuration(seconds, (value: number, type: string) => {\r\n        switch (type) {\r\n            case \"hour\":\r\n            case \"minute\":\r\n                return getDisplayTimerValue(value) + \":\"\r\n            default:\r\n                return getDisplayTimerValue(value)\r\n        }\r\n    })\r\n    // if (seconds < 60) {\r\n    //     return \"00:\" + getDisplayTimerValue(seconds)\r\n    // } else if (seconds < 3600) {\r\n    //     let minutes = Math.floor(seconds / 60);\r\n    //     let restSeconds = seconds % 60;\r\n    //     return getDisplayTimerValue(minutes) + \":\" + getDisplayTimerValue(restSeconds);\r\n    // } else {\r\n    //     let hours = Math.floor(seconds / 3600);\r\n    //     let secondsLeft = seconds % 3600\r\n    //     return getDisplayTimerValue(hours) + \":\" + calcDisplayTimer(secondsLeft);\r\n    // }\r\n}\r\n\r\nexport function getUserDisplayNotation(seconds: number) {\r\n    return getSimplifiedDuration(seconds, (value: number, type: string) => {\r\n        switch (type) {\r\n            case \"hour\":\r\n                return `${value}h`\r\n            case \"minute\":\r\n                return `${value}m`\r\n            default:\r\n                return `${value}s`\r\n        }\r\n    })\r\n}\r\n\r\nexport function getSimplifiedDuration(seconds: number, format: (value: number, type: string) => string): string {\r\n    if (seconds < 60) {\r\n        return format(seconds, \"second\");\r\n    } else if (seconds < 3600) {\r\n        let minutes = Math.floor(seconds / 60);\r\n        let restSeconds = seconds % 60;\r\n        return format(minutes, 'minute') + getSimplifiedDuration(restSeconds, format);\r\n    } else {\r\n        let hours = Math.floor(seconds / 3600);\r\n        let secondsLeft = seconds % 3600;\r\n        return format(hours, 'hours') + getSimplifiedDuration(secondsLeft, format);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function getDisplayTimerValue(value: number): string {\r\n    if (value < 0 || value > 59) {\r\n        return \"Error\";\r\n    }\r\n    return value < 10 ? \"0\" + value : \"\" + value;\r\n}\r\n\r\n\r\n\r\nexport function setDarkMode(darkMode: boolean) {\r\n    if (window.$cui) {\r\n        let utils = window.$cui.getUtils();\r\n        utils.setLightMode(darkMode ? \"dark\" : \"light\");\r\n    }\r\n}\r\n\r\nexport function calculateProgress(current: number, max: number) {\r\n    return Math.floor((current * 100) / max);\r\n}\r\n\r\n/**\r\n * Calculates total actions count and total duration of the training\r\n * @param training \r\n * @returns total actions count and total duration\r\n */\r\nexport function getTotalDuration(training: Training) {\r\n    return training.rounds.reduce<[number, number]>((result: [number, number], current: Round) => {\r\n        return [result[0] + current.actions.length, result[1] + calculateDuration(current.actions)];\r\n    }, [0, 0]);\r\n}\r\n\r\nexport function getBgClassByType(type: string) {\r\n    return \"action-background-\" + type;\r\n}\r\n\r\nexport function getTextClassByActionType(type: string) {\r\n    switch (type) {\r\n        case 'warmup':\r\n            return \"cui-text-success\";\r\n        case 'break':\r\n            return \"cui-text-error\";\r\n        case 'exercise':\r\n            return \"cui-text-accent\";\r\n        case 'cooldown':\r\n            return \"cui-text-secondar\";\r\n        default:\r\n            return \"\";\r\n    }\r\n}\r\n\r\n/**\r\n * Inserts new item to the collection at specific index. If index is lower than 0 then item is added at position 0, if index is bigger than collection size then item is added at the end\r\n * @param collection Collection of items\r\n * @param index position which new item should be added to - if undefined or null provided item will be inserted at last position\r\n * @param t new items to add\r\n * @returns Copy of the collection with new item inserted at specific position\r\n */\r\nexport function insert<T>(collection: T[], index: number, ...t: T[]): T[] {\r\n    if (!collection || collection === null || !t || t === null || t.length === 0) {\r\n        return collection;\r\n    }\r\n    let length = collection.length;\r\n    // If not provided then add then treat it like last\r\n    if (!index || index === 0 || index >= length) {\r\n        return [...collection, ...t];\r\n    }\r\n    if (index <= 0) {\r\n        return [...t, ...collection];\r\n    }\r\n    collection.splice(index, 0, ...t);\r\n    return [...collection]\r\n}\r\n\r\nexport function move<T>(collection: T[], from: number, to: number, size?: number): T[] {\r\n    if (!collection || collection === null || from < 0) {\r\n        return collection;\r\n    }\r\n    let amount = size ?? 1;\r\n    let length = collection.length;\r\n    if (length < 2 || from >= length) {\r\n        return [...collection];\r\n    }\r\n    const el = collection.splice(from, amount);\r\n    const newLength = length - amount;\r\n    const newTo = to;\r\n    //let newIdx = newTo < 0 ? 0 : newTo > length - amount ? length - amount : newTo;\r\n    if (newTo <= 0) {\r\n        return [...el, ...collection];\r\n    }\r\n    if (newTo >= newLength) {\r\n        return [...collection, ...el];\r\n    }\r\n    collection.splice(newTo, 0, ...el)\r\n    return [...collection];\r\n\r\n}\r\n\r\nexport function groupActionsByType(actions: StopwatchAction[]): ActionsGroup {\r\n    return actions.reduce<ActionsGroup>((out: ActionsGroup, item: StopwatchAction) => {\r\n        const type = item.type ?? \"Unknown\";\r\n        if (!out[type]) {\r\n            out[type] = [item];\r\n        } else {\r\n            out[type].push(item);\r\n        }\r\n        return out;\r\n    }, {})\r\n}\r\n\r\nexport function buildQuickRoundActions(actions: RoundActions, exerciseCount: number): StopwatchAction[] {\r\n    const stopwatchActions: StopwatchAction[] = [];\r\n    if (actions.warmup) {\r\n        stopwatchActions.push(actions.warmup);\r\n    }\r\n    if (actions.exercise) {\r\n        for (let i = 0; i < exerciseCount; i++) {\r\n            stopwatchActions.push(actions.exercise);\r\n            if (actions.break && i < exerciseCount - 1) {\r\n                stopwatchActions.push(actions.break);\r\n            }\r\n        }\r\n    }\r\n    if (actions.cooldown) {\r\n        stopwatchActions.push(actions.cooldown)\r\n    }\r\n    return stopwatchActions;\r\n}\r\n\r\nexport function setPageTitle(text: string): void {\r\n    if (is(text)) {\r\n        document.title = `${APP_NAME} - ${text}`;\r\n        return;\r\n    }\r\n    document.title = APP_NAME;\r\n}\r\n\r\nexport function setNavbarTitle(text: string): void {\r\n    window.$push.perform(PUSH_ACTIONS.SET_NAVBAR_TITLE, text);\r\n}\r\n\r\nexport function createArray<T>(t: T | T[] | undefined): T[] {\r\n    if (!t) {\r\n        return []\r\n    }\r\n    if (Array.isArray(t)) {\r\n        return t;\r\n    }\r\n    return [t];\r\n}","import { AppMapping } from \"../api/routes/routes\";\r\n\r\nexport const MAPPIGNS = new AppMapping({\r\n    \"home\": { url: \"/\", name: \"Home\", icon: \"home\", description: \"Home page\" },\r\n    \"about\": { url: \"/about\", name: \"About\", icon: \"info\", description: \"Information about the project\" },\r\n    \"settings\": { url: \"/settings\", name: \"Settings\", icon: \"settings\", description: \"User options to change\" },\r\n    \"actions\": { url: \"/actions\", name: \"Actions\", icon: \"dumbbell\", description: \"Define activies to be used in trainings\" },\r\n    \"help\": {\r\n        url: \"/help\", name: \"Help\", icon: \"emoji_smile\", description: \"Get information about app features\"\r\n    },\r\n    \"devtools\": { url: \"/dev\", name: \"Dev Tools\", icon: \"wrench\", description: \"Developer settings\" },\r\n    \"newTraining\": { url: \"/trainings/edit/new\", name: \"New Training\" },\r\n    \"editTraining\": { url: \"/trainings/edit/:id\", name: \"Edit Training\" },\r\n    \"perform\": { url: \"/trainings/perform/:id\", name: \"Perform Training\" }\r\n});","import { enumerateObject, is } from \"../../../node_modules/bpd-toolkit/dist/esm/index\";\r\n\r\n\r\nexport interface RouteDetails {\r\n    url: string,\r\n    name: string,\r\n    icon?: string,\r\n    description?: string;\r\n}\r\nexport interface RoutesMapping {\r\n    [id: string]: RouteDetails;\r\n}\r\n\r\nexport interface AppRouteAttributes {\r\n    [id: string]: string | number;\r\n}\r\n\r\nexport class AppMapping {\r\n    #mapping: RoutesMapping\r\n    constructor(routes: RoutesMapping) {\r\n        this.#mapping = routes;\r\n    }\r\n\r\n    getRoute(id: string) {\r\n        return is(id) ? this.#mapping[id] : undefined;\r\n    }\r\n\r\n    getUrl(id: string) {\r\n        let route = this.getRoute(id);\r\n        return is(route) ? route.url : undefined;\r\n    }\r\n\r\n    getIcon(id: string) {\r\n        let route = this.getRoute(id);\r\n        return is(route) ? route.icon : undefined;\r\n    }\r\n\r\n    getName(id: string) {\r\n        let route = this.getRoute(id);\r\n        return is(route) ? route.name : undefined;\r\n    }\r\n\r\n    renderUrl(id: string, attributes?: AppRouteAttributes): string {\r\n        let uri = this.getUrl(id)\r\n        if (!is(attributes)) {\r\n            return uri;\r\n        }\r\n        enumerateObject(attributes, (prop: string, value: string) => {\r\n            uri = uri.replace(\":\" + prop, value);\r\n        })\r\n        return uri;\r\n    }\r\n}","import * as React from \"react\";\r\nimport { Round, Training } from \"../../../core/models\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { calculateDuration, getUserDisplayNotation } from \"../../../core/helpers\";\r\nimport { MAPPIGNS } from \"../../routes\";\r\n\r\nconst delays = [' delay-100', ' delay-200', ' delay-300', ' delay-400']\r\n\r\nexport interface TrainingListProps {\r\n    list: Training[];\r\n    onDelete: (id: string) => void;\r\n}\r\n\r\nexport interface TrainingListItemProps {\r\n    data: Training;\r\n    index: number;\r\n    onDelete: (id: string) => void;\r\n}\r\n\r\nexport function TrainingList(props: TrainingListProps) {\r\n    return <ul className=\"cui-list cui-hover\">\r\n        {props.list && props.list.map((item, index) => {\r\n            return <li key={item.id} className=\"stopwatch-content-width cui-corner-round\"><TrainingListItem data={item} onDelete={props.onDelete} index={index} /></li>\r\n        })}\r\n    </ul>\r\n}\r\n\r\nexport function TrainingListItem(props: TrainingListItemProps) {\r\n    const deleteTrainingAction = \"DELETE_TRAINING\";\r\n    let history = useHistory();\r\n\r\n    function getActionsDuration(training: Training) {\r\n        return training.rounds.reduce<[number, number]>((result: [number, number], current: Round) => {\r\n            return [result[0] + current.actions.length, result[1] + calculateDuration(current.actions)];\r\n        }, [0, 0]);\r\n    }\r\n\r\n    function getDetails(training: Training) {\r\n        const [actions, duration] = getActionsDuration(training);\r\n        return getUserDisplayNotation(duration);//`${duration} seconds`;\r\n    }\r\n\r\n    function onItemClick() {\r\n        history.push(MAPPIGNS.renderUrl(\"perform\", { id: props.data.id }))\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        const deleteSubscription = window.$flow.subscribe(deleteTrainingAction).finish((result) => {\r\n            window.$flow.perform(\"GET_TRAININGS\")\r\n        });\r\n\r\n        return () => {\r\n            window.$flow.unsubscribe(deleteTrainingAction, deleteSubscription.id)\r\n        }\r\n    })\r\n\r\n    return <div className={\"cui-flex cui-middle cui-animation-fade-in cui-padding-bottom cui-padding-top\"}>\r\n        <div className=\"cui-flex-grow\" onClick={onItemClick}>\r\n            <div className=\"cui-flex cui-middle cui-nowrap\">\r\n                <div className=\"training-list-item-icon\">\r\n                    <span className=\"cui-text-bold\">{props.data.name[0].toUpperCase()}</span>\r\n                </div>\r\n                <div className=\"cui-flex-grow cui-margin-left\">\r\n                    <span>{props.data.name}</span>\r\n                    <div className=\"cui-text-muted cui-text-truncate cui-overflow-hidden\">\r\n                        <span>{getDetails(props.data)}</span>\r\n                    </div></div>\r\n            </div>\r\n        </div>\r\n        <div className=\"cui-flex-shrink\">\r\n            <div>\r\n                <Link to={MAPPIGNS.renderUrl(\"editTraining\", { \"id\": props.data.id })} className=\"cui-icon-button\" cui-icon=\"edit\" cui-tooltip=\"Edit training\"></Link>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n","import * as React from 'react'\r\n\r\nexport function TriangleShadow() {\r\n    return (<div className=\"triangle-wrap\">\r\n        <div className=\"triangle cui-background-default\"> </div>\r\n    </div>);\r\n}\r\n","import * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TrainingList } from \"./list\";\r\nimport { Training, WarmUp, CoolDown, Exercise } from \"../../../core/models\";\r\nimport { FlowTask } from \"../../../../node_modules/bpd-flow/dist/index\";\r\nimport { setPageTitle, showMessage } from \"../../../core/helpers\";\r\nimport { MAPPIGNS } from \"../../routes\";\r\nimport { TriangleShadow } from \"../common/TriangleShadow\";\r\n\r\nexport interface HomeProps {\r\n    site?: string;\r\n}\r\n\r\nexport interface HomeState {\r\n    list: Training[];\r\n}\r\n\r\nexport class Home extends React.Component<any, HomeState> {\r\n    list: Training[];\r\n    subscription: FlowTask<Training[]>\r\n    onDeleteSubscription: FlowTask<boolean>;\r\n    state: HomeState;\r\n    constructor(props: HomeProps) {\r\n        super(props);\r\n        this.state = {\r\n            list: []\r\n        }\r\n\r\n        this.updateList = this.updateList.bind(this);\r\n        this.onDeleteTrainingComplete = this.onDeleteTrainingComplete.bind(this);\r\n        this.deleteTraining = this.deleteTraining.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        setPageTitle(\"Home\");\r\n        this.subscription = window.$flow.subscribe(\"GET_ALL_TRAININGS\");\r\n        this.subscription.finish(this.updateList);\r\n        this.onDeleteSubscription = window.$flow.subscribe(\"DELETE_TRAINING\", { finish: this.onDeleteTrainingComplete })\r\n        window.$flow.perform(\"GET_ALL_TRAININGS\");\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.$flow.unsubscribe(\"GET_ALL_TRAININGS\", this.subscription.id);\r\n        window.$flow.unsubscribe(\"DELETE_TRAINING\", this.onDeleteSubscription.id);\r\n    }\r\n\r\n    deleteTraining(id: string) {\r\n        let list = [...this.state.list];\r\n        let elementIdx = list.findIndex(item => item.id === id);\r\n        if (elementIdx > -1) {\r\n            window.$cui.alert(\"delete-training-dialog\", \"YesNoCancel\", {\r\n                title: \"Delete training\",\r\n                message: \"Do you really want to delete training: \" + list[elementIdx].name + \"?\",\r\n                onYes: () => {\r\n                    window.$flow.perform(\"DELETE_TRAINING\", id)\r\n                }\r\n            })\r\n        } else {\r\n            showMessage(\"Delete training\", \"We cannot remove this training. Identified doesn't match.\")\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onDeleteTrainingComplete(flag: boolean) {\r\n        if (flag) {\r\n            window.$flow.perform(\"GET_ALL_TRAININGS\");\r\n        } else {\r\n            showMessage(\"Delete training\", \"Service could not remove training\")\r\n        }\r\n    }\r\n\r\n    updateList(list: Training[]) {\r\n        this.setState({\r\n            ...this.state,\r\n            list: list\r\n        });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return <div className=\"stopwatch-page-layout\" >\r\n            <div className=\"stopwatch-page-top \">\r\n                <div className=\"cui-container cui-center cui-background-default cui-padding-large-vertical\">\r\n                    <div>\r\n                        <span className=\"cui-icon stopwatch-icon\" cui-icon=\"stopwatch_7\"></span>\r\n                        <h1 className=\"cui-h1 cui-text-center cui-margin-small-top stopwatch-title\">Stopwatch</h1>\r\n                    </div>\r\n                </div>\r\n                <TriangleShadow />\r\n            </div>\r\n            <div className=\"stopwatch-page-bottom\">\r\n                <div className=\"stopwatch-home-list cui-overflow-y-auto\">\r\n                    {this.state.list.length > 0 ? <TrainingList list={this.state.list} onDelete={this.deleteTraining} /> : <NoTrainings />}\r\n                </div>\r\n            </div>\r\n            <div className=\"cui-position-float cui-position-bottom cui-position-center cui-margin-large-bottom app-float-bottom z-index-100\">\r\n                <Link to={MAPPIGNS.renderUrl(\"newTraining\")} className=\"cui-icon-button cui-large cui-background-default cui-box-shadow\" cui-icon=\"plus\"></Link>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport function NoTrainings() {\r\n    return <div className=\"cui-container cui-center\">\r\n        <p className=\"cui-text-muted cui-text-center\">There are no trainings recorded. <Link className=\"cui-link cui-accent\" to={MAPPIGNS.renderUrl(\"newTraining\")}>Add new</Link> training to start your execises!</p>\r\n    </div>;\r\n}\r\n\r\n\r\n{/* <div className=\"stopwatch-page-layout\" >\r\n    <div className=\"stopwatch-page-top \">\r\n        <div className=\"cui-container cui-center cui-background-default\">\r\n            <div>\r\n                <span className=\"cui-icon stopwatch-icon\" cui-icon=\"stopwatch_7\"></span>\r\n                <h1 className=\"cui-h1 cui-text-center cui-margin-small-top stopwatch-title\">Stopwatch</h1>\r\n            </div>\r\n        </div>\r\n        <TriangleShadow />\r\n    </div>\r\n    <div className=\"stopwatch-page-bottom\">\r\n        <div className=\"stopwatch-home-list cui-overflow-y-auto\">\r\n            {this.state.list.length > 0 ? <TrainingList list={this.state.list} onDelete={this.deleteTraining} /> : <NoTrainings />}\r\n        </div>\r\n    </div>\r\n    <div className=\"cui-position-float cui-position-bottom cui-position-center cui-margin-large-bottom app-float-bottom z-index-100\">\r\n        <Link to={MAPPIGNS.renderUrl(\"newTraining\")} className=\"cui-icon-button cui-large cui-background-default cui-box-shadow\" cui-icon=\"plus\"></Link>\r\n    </div>\r\n</div>; */}","import * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport interface ErrorProps {\r\n}\r\n\r\n// 'HelloProps' describes the shape of props.\r\n// State is never set so we use the '{}' type.\r\nexport class ErrorRoute extends React.Component<ErrorProps, {}> {\r\n    constructor(props: ErrorProps) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return <div className=\"cui-section cui-flex-center cui-height-viewport-1-2\">\r\n            <div className=\"cui-card cui-large\">\r\n                <div className=\"cui-card-header cui-text-error\">\r\n                    <span className=\"cui-card-title\">Error</span>\r\n                </div>\r\n                <div className=\"cui-card-body\">\r\n                    It appears that page you looking for does not exist.\r\n                    Try to look for it again or go back to our Home page\r\n                </div>\r\n                <div className=\"cui-card-footer cui-flex cui-right\">\r\n                    <Link to=\"/\" className=\"cui-link\">Go Home</Link>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    }\r\n}","import * as React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { RouteDetails } from \"src/api/routes/routes\";\r\n\r\nexport interface NavbarLinkProps {\r\n    url: string;\r\n    name: string;\r\n    icon?: string;\r\n}\r\n\r\nexport interface NavbarLinkBase {\r\n    isIcon?: boolean;\r\n    shouldClose?: boolean;\r\n    class?: string;\r\n}\r\n\r\nexport class NavbarLink extends React.Component<NavbarLinkProps & NavbarLinkBase, {}> {\r\n    constructor(props: NavbarLinkProps & NavbarLinkBase) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n\r\n    onClick() {\r\n        if (this.props.shouldClose) {\r\n            let offcanvas = window.$cui.get(\"#app-offcanvas\");\r\n            offcanvas.emit('close');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <NavLink exact activeClassName=\"cui-active\" className={this.props.class} to={this.props.url} onClick={this.onClick}>{this.props.isIcon ? <IconNavLabel name={this.props.name} icon={this.props.icon} /> : this.props.name}</NavLink>;\r\n    }\r\n}\r\n\r\nexport interface RouteNavbarLinkProps {\r\n    route?: RouteDetails;\r\n    url?: string;\r\n}\r\n\r\nexport function RouteNavbarLink(props: RouteNavbarLinkProps & NavbarLinkBase) {\r\n    if (!props.route) {\r\n        return (<span className=\"cui-text-error\">Unknown</span>)\r\n    }\r\n    return (<NavbarLink class={props.class} isIcon={props.isIcon} shouldClose={props.shouldClose} icon={props.route.icon} name={props.route.name} url={props.url ?? props.route.url} />);\r\n}\r\n\r\n\r\nexport interface LinkLabelProps {\r\n    name: string;\r\n    icon: string;\r\n}\r\n\r\nexport function IconNavLabel(props: LinkLabelProps) {\r\n    return (<span className=\"cui-flex cui-middle\"><span cui-icon={props.icon}></span><span className=\"cui-margin-small-left\">{props.name}</span></span>)\r\n}\r\n\r\nexport function SimpleNavLabel(props: LinkLabelProps) {\r\n    return (<span>{props.name}</span>)\r\n}","import * as React from \"react\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { setNavbarTitle } from \"../../../core/helpers\";\r\nimport { PUSH_ACTIONS } from \"../../../app/push/push\";\r\nimport { MAPPIGNS } from \"../../routes\";\r\nimport { NavbarLink } from \"../common/NavbarLink\";\r\nimport { useNavbarTitle } from \"../../../ui/hooks/NavbarTitle\";\r\n\r\nexport interface NavbarState {\r\n    currentSite: string;\r\n    darkMode: boolean;\r\n    soundEnabled: boolean\r\n}\r\n\r\nexport interface NavbarProps {\r\n    site?: string;\r\n    location?: any;\r\n}\r\n\r\nexport function Navbar(props: NavbarProps) {\r\n    const currentLocation = useLocation();\r\n    const [state, setState] = React.useState<NavbarState>({\r\n        currentSite: \"\",\r\n        darkMode: false,\r\n        soundEnabled: false,\r\n    });\r\n    const [location, setLocation] = React.useState(\"\")\r\n    const title = useNavbarTitle(\"\");\r\n    const history = useHistory();\r\n\r\n    // function onTitleUpdate(value: string): void {\r\n    //     setState({\r\n    //         ...state,\r\n    //         currentSite: value\r\n    //     })\r\n    // }\r\n\r\n    React.useEffect(() => {\r\n        let split = currentLocation.pathname.split('/');\r\n        setLocation(split.length > 1 ? split[1].toLocaleUpperCase() : \"\")\r\n        // const pushServiceTitleSub = window.$push.subscribe(PUSH_ACTIONS.SET_NAVBAR_TITLE, { finish: onTitleUpdate })\r\n\r\n        return () => {\r\n            //window.$push.unsubscribe(PUSH_ACTIONS.SET_NAVBAR_TITLE, pushServiceTitleSub.id);\r\n        }\r\n    }, [currentLocation])\r\n    return <nav className={\"cui-navbar cui-sticky cui-box-shadow-remove stopwatch-layout-navigation\"}>\r\n        <div className=\"cui-navbar-left cui-width-1-1 cui-width-auto--m cui-flex cui-middle cui-between\" id=\"navbar-left\">\r\n            <ul>\r\n                {location && <><li><a cui-icon=\"chevron_small_left\" onClick={() => { history.goBack() }} ></a></li>\r\n                    <li><Link className=\"cui-icon\" to={MAPPIGNS.renderUrl(\"home\")} cui-icon=\"stopwatch_small_1\"></Link></li>\r\n                    <li><span>{title}</span></li>\r\n                </>}\r\n            </ul>\r\n            <a className=\"cui-icon cui-padding cui-button cui-hidden--m\" cui-icon=\"menu\" cui-open=\"target: #app-offcanvas\"></a>\r\n        </div>\r\n\r\n        <ul className=\"cui-navbar-right cui-unhidden--m\">\r\n            <li><NavbarLink class=\"cui-navbar-item\" url={MAPPIGNS.renderUrl(\"home\")} name={MAPPIGNS.getName(\"home\")} /></li>\r\n            <li><NavbarLink class=\"cui-navbar-item\" url={MAPPIGNS.renderUrl(\"actions\")} name={MAPPIGNS.getName(\"actions\")} /></li>\r\n            <li><NavbarLink class=\"cui-navbar-item\" url={MAPPIGNS.renderUrl(\"settings\")} name={MAPPIGNS.getName(\"settings\")} /></li>\r\n            <li><NavbarLink class=\"cui-navbar-item\" url={MAPPIGNS.renderUrl(\"help\")} name={MAPPIGNS.getName(\"help\")} /></li>\r\n            <li><NavbarLink class=\"cui-navbar-item\" url={MAPPIGNS.renderUrl(\"about\")} name={MAPPIGNS.getName(\"about\")} /></li>\r\n        </ul>\r\n    </nav>\r\n}","import * as React from \"react\";\r\nimport { PUSH_ACTIONS } from \"../../app/push/push\";\r\n\r\nexport function useNavbarTitle(init: string): string {\r\n    const [title, setTitle] = React.useState(init);\r\n\r\n    function onUpdate(value: string) {\r\n        setTitle(value);\r\n    }\r\n    React.useEffect(() => {\r\n        const pushServiceTitleSub = window.$push.subscribe(PUSH_ACTIONS.SET_NAVBAR_TITLE, { finish: onUpdate })\r\n        return () => {\r\n            window.$push.unsubscribe(PUSH_ACTIONS.SET_NAVBAR_TITLE, pushServiceTitleSub.id);\r\n        }\r\n    })\r\n    return title;\r\n}","import * as React from \"react\";\r\nimport { ElementManager } from \"../../../../node_modules/cui-light/dist/index\";\r\nimport { MAPPIGNS } from \"../../routes\";\r\nimport { NavbarLink, RouteNavbarLink } from \"../common/NavbarLink\";\r\n\r\nexport interface OffCanvasProps {\r\n}\r\n\r\n// 'HelloProps' describes the shape of props.\r\n// State is never set so we use the '{}' type.\r\nexport class OffCanvas extends React.Component<OffCanvasProps, {}> {\r\n    constructor(props: OffCanvasProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"cui-off-canvas\" id=\"app-offcanvas\" cui-off-canvas=\"escClose: y; outClose: y\">\r\n            <div className=\"cui-off-canvas-container cui-card off-canvas-layout cui-flex cui-flex-direction-column\">\r\n                <div className=\"cui-card-header cui-flex cui-middle cui-right cui-width-1-1\">\r\n                    <a href=\"#\" className=\"cui-icon\" cui-icon=\"close\" cui-close=\"\"></a>\r\n                </div>\r\n                <div className=\"off-canvas-content cui-card-body cui-flex-grow cui-flex cui-middle cui-width-1-1\">\r\n                    <div className=\"cui-width-1-1\">\r\n                        <h3 className=\"cui-h3 cui-text-center\">Menu</h3>\r\n                        <ul className=\"cui-list cui-highlight cui-accent cui-margin-top\">\r\n                            <li><RouteNavbarLink route={MAPPIGNS.getRoute(\"home\")} shouldClose={true} isIcon={true} /></li>\r\n                            <li><RouteNavbarLink route={MAPPIGNS.getRoute(\"actions\")} shouldClose={true} isIcon={true} /></li>\r\n                            <li><RouteNavbarLink route={MAPPIGNS.getRoute(\"settings\")} shouldClose={true} isIcon={true} /></li>\r\n                            <li><RouteNavbarLink route={MAPPIGNS.getRoute(\"help\")} shouldClose={true} isIcon={true} /></li>\r\n                            <li><RouteNavbarLink route={MAPPIGNS.getRoute(\"about\")} shouldClose={true} isIcon={true} /></li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import { IActionsService } from \"../../core/services/interfaces\"\r\nimport { StopwatchAction } from \"../../core/models\";\r\n\r\nexport const ACTIONS_FLOW_ACTIONS = {\r\n    GET_ALL: \"GET_ALL\",\r\n    SET_ACTION: \"SET_ACTION\",\r\n    REMOVE_ACTION: \"REMOVE_ACTION\",\r\n    CLEAR_ACTIONS: \"CLEAR_ACTIONS\"\r\n}\r\n\r\nexport type ActionsFlowInput = StopwatchAction;\r\nexport type ActionsFlowOutput = boolean | StopwatchAction[];\r\n\r\nexport class ActionsFlow {\r\n    #service: IActionsService;\r\n    constructor(service: IActionsService) {\r\n        this.#service = service;\r\n    }\r\n    getActions() {\r\n        return {\r\n            [ACTIONS_FLOW_ACTIONS.GET_ALL]: () => {\r\n                return this.#service.getAllActions();\r\n            },\r\n            [ACTIONS_FLOW_ACTIONS.SET_ACTION]: (action: StopwatchAction) => {\r\n                return this.#service.setAction(action);\r\n            },\r\n            [ACTIONS_FLOW_ACTIONS.REMOVE_ACTION]: (action: StopwatchAction) => {\r\n                return this.#service.removeAction(action);\r\n            },\r\n            [ACTIONS_FLOW_ACTIONS.CLEAR_ACTIONS]: () => {\r\n                this.#service.clearActions();\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n}","import { Round, StopwatchAction, Training } from \"./models\";\r\nimport { ERROR_CODES } from \"./statics\";\r\nimport { is } from '../../node_modules/bpd-toolkit/dist/esm/index';\r\nimport { Footer } from \"src/ui/components/footer/Footer\";\r\n\r\nexport interface ValidationResult {\r\n    status: boolean;\r\n    errors?: string[];\r\n}\r\n\r\nexport interface IValidator<T> {\r\n    validate(t: T): ValidationResult\r\n}\r\n\r\nexport abstract class ValidatorBase<T> implements IValidator<T> {\r\n    validate(t: T): ValidationResult {\r\n        const result: ValidationResult = { status: true }\r\n        try {\r\n            let errors = this.performValidation(t);\r\n            if (errors && errors.length > 0) {\r\n                result.status = false;\r\n                result.errors = errors;\r\n            }\r\n        } catch (e) {\r\n            let errorMsg = \"An error occured during validation\";\r\n            console.error(errorMsg)\r\n            console.error(e)\r\n            result.status = false;\r\n            result.errors = [errorMsg + \": \" + e.message]\r\n        }\r\n        return result;\r\n    }\r\n\r\n    protected abstract performValidation(t: T): string[];\r\n}\r\n\r\nexport class TrainingValidator extends ValidatorBase<Training> {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    protected performValidation(t: Training): string[] {\r\n        if (!is(t)) {\r\n            return ([ERROR_CODES.e0100]);\r\n        }\r\n        let errors = []\r\n        if (!is(t.name)) {\r\n            errors.push(ERROR_CODES.e0101)\r\n        }\r\n        if (!is(t.rounds)) {\r\n            errors.push(ERROR_CODES.e0102)\r\n        }\r\n        return errors;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class RoundValidator extends ValidatorBase<Round> {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    protected performValidation(t: Round): string[] {\r\n        if (!is(t)) {\r\n            return ([ERROR_CODES.e0200]);\r\n        }\r\n        let errors = []\r\n        if (!is(t.name))\r\n            errors.push(ERROR_CODES.e0202);\r\n        if (!is(t.actions))\r\n            errors.push(ERROR_CODES.e0201)\r\n        return errors;\r\n    }\r\n}\r\n\r\nexport class ActionValidator extends ValidatorBase<StopwatchAction> {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    protected performValidation(t: StopwatchAction): string[] {\r\n        if (!is(t)) {\r\n            return ([ERROR_CODES.e0300]);\r\n        }\r\n        let errors = []\r\n        if (!is(t.name)) {\r\n            errors.push(ERROR_CODES.e0301)\r\n        }\r\n        if (!is(t.type)) {\r\n            errors.push(ERROR_CODES.e0302)\r\n        }\r\n        if (!is(t.duration)) {\r\n            errors.push(ERROR_CODES.e0303)\r\n        }\r\n        return errors;\r\n    }\r\n}\r\n\r\nexport class CompleteTrainingValidator extends ValidatorBase<Training> {\r\n    #trainingValidator: TrainingValidator;\r\n    #actionValidator: ActionValidator;\r\n    #roundValidator: RoundValidator;\r\n    constructor() {\r\n        super();\r\n        this.#trainingValidator = new TrainingValidator();\r\n        this.#roundValidator = new RoundValidator();\r\n        this.#actionValidator = new ActionValidator();\r\n    }\r\n    protected performValidation(t: Training): string[] {\r\n        let err = this.#trainingValidator.validate(t);\r\n        if (err.status) {\r\n            try {\r\n                err = this.validateRounds(t.rounds);\r\n            } catch (e) {\r\n                return [ERROR_CODES.e0001]\r\n            }\r\n        }\r\n        return err.errors;\r\n    }\r\n\r\n    private validateRounds(rounds: Round[]): ValidationResult {\r\n        let err: ValidationResult = null;\r\n        let len = rounds.length;\r\n        for (let i = 0; i < len; i++) {\r\n            err = this.#roundValidator.validate(rounds[i]);\r\n            if (err.status) {\r\n                err = this.validateActions(rounds[i].actions)\r\n                if (!err.status) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return err;\r\n    }\r\n\r\n    private validateActions(actions: StopwatchAction[]): ValidationResult {\r\n        let err: ValidationResult = null;\r\n        let len = actions.length;\r\n        for (let i = 0; i < len; i++) {\r\n            err = this.#actionValidator.validate(actions[i]);\r\n            if (!err.status) {\r\n                return;\r\n            }\r\n        }\r\n        return err;\r\n    }\r\n\r\n}","import * as React from 'react'\r\n\r\nexport interface BpdDialogProps {\r\n    title: string;\r\n    id: string;\r\n    body?: JSX.Element;\r\n    footer?: JSX.Element;\r\n    className?: string;\r\n}\r\n\r\nexport function BpdDialog(props: BpdDialogProps) {\r\n    React.useEffect(() => {\r\n    }, [props])\r\n    return (<div className={`cui-dialog ${props.className ?? \"\"}`} cui-dialog=\"escClose: Y\" id={props.id}>\r\n        <div className=\"cui-dialog-container\">\r\n            <div className=\"cui-dialog-header\">\r\n                <span className=\"cui-dialog-title\">{props.title}</span>\r\n                <a className=\"cui-icon\" cui-icon=\"close\" cui-close=\"\"></a>\r\n            </div>\r\n            <div className=\"cui-dialog-body\">\r\n                {props.body}\r\n            </div>\r\n\r\n            {props.footer && (<div className=\"cui-dialog-footer\">\r\n                {props.footer}\r\n            </div>)}\r\n\r\n        </div>\r\n    </div>)\r\n}\r\n","import * as React from 'react'\r\n\r\nexport interface ErrorsListProps {\r\n    errors: string[];\r\n}\r\n\r\n\r\nexport function ErrorsList(props: ErrorsListProps) {\r\n    return (\r\n        <>\r\n            {props.errors &&\r\n                props.errors.length > 0 &&\r\n                <ul className=\"cui-list\">\r\n                    {\r\n                        props.errors.map((error: string, index: number) => {\r\n                            return <li key={index} className=\"cui-animation-fade-in\"><span className=\"cui-text-error\">{error}</span></li>\r\n                        })\r\n                    }\r\n                </ul>}\r\n        </>\r\n    );\r\n}\r\n","import * as React from 'react'\r\n\r\nexport interface BpdActionIconProps {\r\n    type: string;\r\n    className?: string;\r\n}\r\n\r\nexport function BpdActionIcon(props: BpdActionIconProps) {\r\n    return (\r\n        <span className={\"cui-icon \" + (props.className ?? \"\")} cui-icon={`stopwatch_${props.type}`}></span>\r\n    );\r\n}\r\n","import { is } from 'bpd-toolkit/dist/esm/index';\r\nimport * as React from 'react'\r\nimport { StopwatchActionType } from '../../../core/models';\r\nimport { BpdActionIcon } from '../common/BpdActionIcon';\r\n\r\nexport interface ActionTypeRadioChooserProps {\r\n    value: string;\r\n    onChange: (action: string) => void;\r\n    id: string;\r\n}\r\n\r\n\r\ninterface RadioChooserItem {\r\n    name: string;\r\n    checked: boolean;\r\n    id: string;\r\n}\r\n\r\nexport function ActionTypeRadioChooser(props: ActionTypeRadioChooserProps) {\r\n    const groupId = \"radio-group\" + props.id;\r\n    const radioId = \"radio-\" + props.id;\r\n    const [actions, setActions] = React.useState<RadioChooserItem[]>([])\r\n\r\n    function onChange(ev: any) {\r\n        if (props.onChange && ev.target.checked) {\r\n            let found = actions.find(act => act.id === ev.target.id);\r\n            if (is(found) && found.name !== props.value) {\r\n                props.onChange(found.name);\r\n            }\r\n        }\r\n    }\r\n\r\n    function matches(type: string) {\r\n        return props.value === type;\r\n    }\r\n\r\n    function buildItem(type: string, index: number): RadioChooserItem {\r\n        return {\r\n            name: type,\r\n            checked: matches(type),\r\n            id: radioId + index,\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setActions([\r\n            buildItem(StopwatchActionType.WARMUP, 0),\r\n            buildItem(StopwatchActionType.EXERCISE, 1),\r\n            buildItem(StopwatchActionType.BREAK, 2),\r\n            buildItem(StopwatchActionType.COOLDOWN, 3)\r\n        ])\r\n\r\n        return () => {\r\n        }\r\n    }, [props.value]);\r\n    return (<div id={props.id} className=\"cui-flex-grid cui-child-width-1-4\">\r\n        {actions.map(action => {\r\n            return <div key={action.id}><div className=\"cui-radio-custom cui-width-1-1\">\r\n                <input type=\"radio\" id={action.id} name={groupId} checked={action.checked} onChange={onChange} />\r\n                <label htmlFor={action.id} className=\"cui-content cui-padding-small cui-width-1-1\">\r\n                    <div className=\"cui-flex cui-center\"><BpdActionIcon type={action.name} /></div>\r\n                    <div className=\"cui-flex cui-center\"><span className=\"cui-text-small\">{action.name}</span></div>\r\n                </label>\r\n            </div></div>\r\n        })}\r\n    </div >);\r\n}\r\n","import * as React from \"react\";\r\nimport { DefaultActions } from \"../../../core/statics\";\r\nimport { StopwatchAction, StopwatchActionType } from \"../../../core/models\";\r\nimport { ActionValidator } from \"../../../core/validators\";\r\nimport { BpdDialog } from \"../common/BpdDialog\";\r\nimport { ErrorsList } from \"../common/ErrorsList\";\r\nimport { ActionsSelect } from \"./ActionsSelect\";\r\nimport { ActionTypeRadioChooser } from \"./ActionTypeRadioChooser\";\r\n\r\nexport interface AddActionDialogProps {\r\n    action: StopwatchAction;\r\n    onSave: (action: StopwatchAction) => void;\r\n}\r\n\r\nexport function AddActionDialog(props: AddActionDialogProps) {\r\n    const [state, setState] = React.useState<StopwatchAction>({\r\n        id: undefined,\r\n        name: \"\",\r\n        duration: \"5\",\r\n        removable: true,\r\n        editable: false,\r\n        type: StopwatchActionType.EXERCISE\r\n    })\r\n\r\n    const [errors, setErrors] = React.useState<string[]>([])\r\n\r\n    function onValueChange(event: any) {\r\n        let value = event.target.value;\r\n        let name = event.target.name;\r\n        switch (name) {\r\n            case \"name\":\r\n            case \"duration\":\r\n            case \"type\":\r\n                setState({ ...state, [name]: event.target.value })\r\n                break;\r\n            case \"removable\":\r\n            case \"editable\":\r\n                setState({ ...state, [name]: event.target.checked })\r\n                break;\r\n        }\r\n    }\r\n\r\n    function onActionTypeChange(action: string) {\r\n        setState({ ...state, \"type\": action })\r\n    }\r\n\r\n    function onSave() {\r\n        if (props.onSave) {\r\n            let action: StopwatchAction = { ...state };\r\n            let actionValidator = new ActionValidator().validate(action)\r\n            if (actionValidator.status) {\r\n                let dialogCui = window.$cui.get(\"#add-action-dialog\");\r\n                props.onSave(action);\r\n                dialogCui.emit('close');\r\n            }\r\n            setErrors(actionValidator.errors);\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (props.action) {\r\n            setState({\r\n                ...props.action\r\n            })\r\n            setErrors([]);\r\n        }\r\n        return () => {\r\n\r\n        }\r\n    }, [props.action])\r\n    return (<BpdDialog\r\n        title=\"Add new\"\r\n        id=\"add-action-dialog\"\r\n        body={<>\r\n            <div className=\"cui-form\">\r\n                <label className=\"cui-form-label\">Name</label>\r\n                <input className=\"cui-input stopwatch-input-width\" type=\"text\" name=\"name\" value={state.name} placeholder=\"Name\" onChange={onValueChange} />\r\n            </div>\r\n            <div className=\"cui-form cui-margin-top\">\r\n                <label className=\"cui-form-label\">Duration</label>\r\n                <input className=\"cui-input stopwatch-input-width\" type=\"number\" min=\"0\" max=\"100\" name=\"duration\" value={state.duration} placeholder=\"Duration\" onChange={onValueChange} />\r\n            </div>\r\n            <div className=\"cui-form cui-margin-top\">\r\n                <label className=\"cui-form-label\">Type</label>\r\n                {/* <select className=\"cui-select stopwatch-input-width\" value={state.type} name=\"type\" onChange={onValueChange} >\r\n                    <option value=\"warmup\">Warmup</option>\r\n                    <option value=\"exercise\">Exercise</option>\r\n                    <option value=\"break\">Break</option>\r\n                    <option value=\"cooldown\">Cooldown</option>\r\n                </select> */}\r\n                <div className=\"stopwatch-input-width cui-margin-top\">\r\n                    <ActionTypeRadioChooser id=\"add-action\" value={state.type} onChange={onActionTypeChange} />\r\n                </div>\r\n            </div>\r\n            <div className=\"cui-form cui-flex cui-middle cui-reverse cui-margin-top\">\r\n                <input type=\"checkbox\" className=\"cui-checkbox\" id=\"checkbox-1-2\" name=\"editable\" checked={state.editable} onChange={onValueChange} />\r\n                <label htmlFor=\"checkbox-1-2\"> Editable</label>\r\n            </div>\r\n            <div className=\"cui-form cui-flex cui-middle cui-reverse cui-margin-top\">\r\n                <input type=\"checkbox\" className=\"cui-checkbox\" id=\"checkbox-1-1\" name=\"removable\" checked={state.removable} onChange={onValueChange} />\r\n                <label htmlFor=\"checkbox-1-1\"> Removable</label>\r\n            </div>\r\n            <ErrorsList errors={errors} />\r\n        </>\r\n        }\r\n        footer={\r\n            <div className=\"cui-flex cui-right\">\r\n                <button className=\"cui-button cui-margin-small-right\" cui-close=\"\">Cancel</button>\r\n                <button className=\"cui-button cui-accent\" onClick={onSave}>Save</button>\r\n            </div>\r\n        }\r\n    />);\r\n}","import * as React from 'react'\r\nimport { is } from '../../../../node_modules/bpd-toolkit/dist/esm/index';\r\n\r\nexport interface ClearableInputProps {\r\n    value: string;\r\n    onUpdate?: (value: string) => void;\r\n    className?: string;\r\n}\r\n\r\n\r\nexport function ClearableInput(props: ClearableInputProps) {\r\n    const [value, setValue] = React.useState<string>('');\r\n\r\n    function onInputChange(ev: any) {\r\n        changeValue(ev.target.value);\r\n    }\r\n\r\n    function changeValue(value: string) {\r\n        setValue(value);\r\n        if (is(props.onUpdate)) {\r\n            props.onUpdate(value);\r\n        }\r\n    }\r\n\r\n    return (<div className={\"cui-input-mix \" + props.className}>\r\n        <input type=\"text\" className=\"cui-input\" placeholder=\"Filter\" value={value} onChange={onInputChange} />\r\n        {is(value) && <a className=\"cui-icon\" cui-icon=\"close\" onClick={() => changeValue(\"\")}></a>}\r\n    </div>);\r\n}\r\n","import * as React from 'react'\r\nexport interface IconLabelProps {\r\n    label: string;\r\n}\r\nexport function IconLabel(props: IconLabelProps) {\r\n    return (<span className=\"cui-margin-small-left cui-unhidden--m\">{props.label}</span>);\r\n}\r\n","import * as React from 'react'\r\n\r\nexport interface BpdConfirmDropProp {\r\n    message: string;\r\n    id: string;\r\n    cancelLabel?: string;\r\n    confirmLabel?: string;\r\n    onCancel?: () => void;\r\n    onConfirm: () => void;\r\n}\r\n\r\nexport function BpdConfirmDrop(props: BpdConfirmDropProp) {\r\n    const cancelLabel: string = props.cancelLabel ?? \"Cancel\";\r\n    const confirmLabel: string = props.confirmLabel ?? \"OK\";\r\n    function onCancel() {\r\n        window.$cui.get(\"#\" + props.id).emit(\"close\");\r\n        if (props.onCancel)\r\n            props.onCancel()\r\n    }\r\n\r\n    function onConfirm() {\r\n        window.$cui.get(\"#\" + props.id).emit(\"close\");\r\n        props.onConfirm()\r\n    }\r\n\r\n    return (<div className=\"cui-dropdown cui-section drop-max-width\" cui-drop=\"outClose: Y; autoClose: Y\" id={props.id}>\r\n        <p>{props.message}</p>\r\n        <div className=\"cui-flex cui-right cui-margin-top\">\r\n            <button className=\"cui-button cui-small\" onClick={() => { onCancel() }}>{cancelLabel}</button>\r\n            <button className=\"cui-button cui-accent cui-small cui-margin-small-left\" onClick={() => { onConfirm() }}>{confirmLabel}</button>\r\n        </div>\r\n    </div>);\r\n}\r\n","import * as React from 'react'\r\nimport { StopwatchAction } from '../../../core/models';\r\nimport { is } from 'bpd-toolkit/dist/esm/index';\r\nimport { getBgClassByType } from '../../../core/helpers';\r\nimport { BpdActionIcon } from '../common/BpdActionIcon';\r\nimport { IconLabel } from '../trainings/IconLabel';\r\nimport { BpdConfirmDrop } from '../common/BpdConfirmDrop';\r\n\r\nexport interface ActionsEditGridProps {\r\n    actions: StopwatchAction[];\r\n    filter: string;\r\n    onEdit: (action: StopwatchAction) => void;\r\n    onDelete: (action: StopwatchAction) => void;\r\n}\r\n\r\nexport function ActionsEditGrid(props: ActionsEditGridProps) {\r\n    function matchesName(name: string): boolean {\r\n        if (!is(props.filter)) {\r\n            return true;\r\n        }\r\n        let match = name.toLowerCase().match(props.filter.toLowerCase());\r\n        return is(match);\r\n    }\r\n\r\n    function onOption(option: string, action: StopwatchAction) {\r\n        switch (option) {\r\n            case 'edit':\r\n                props.onEdit(action)\r\n                break;\r\n            case \"delete\":\r\n                props.onDelete(action)\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (<div className=\"cui-container cui-flex-grid cui-flex-grid-match cui-child-width-1-1 cui-child-width-1-3--m cui-animatio-fade-in\">\r\n        {is(props.actions) && props.actions.map((action: StopwatchAction, index: number) => {\r\n            return (matchesName(action.name) &&\r\n                <div key={index}>\r\n\r\n                    <div className={\"cui-card cui-default cui-animation-fade-in \" + getBgClassByType(action.type)}>\r\n                        <div className=\"cui-card-header cui-flex cui-between cui-nowrap cui-middle\">\r\n                            <span className=\"cui-card-title cui-text-truncate cui-overflow-hidden\">{action.name}</span>\r\n                            <BpdActionIcon className=\"cui-padding-small\" type={action.type} />\r\n                        </div>\r\n                        <div className=\"cui-card-body cui-flex cui-middle cui-nowrap action-card-height\">\r\n                            <div className=\"cui-flex-grow cui-overflow-hidden\">\r\n                                <div className=\"cui-text-truncate\"><span>{action.duration} seconds</span></div>\r\n                            </div>\r\n\r\n                            <div className=\"cui-flex-shrink\">\r\n                                <ul className=\"cui-icon-nav\">\r\n                                    {action.editable && <li><a className=\"cui-icon\" cui-icon=\"edit\" onClick={() => { onOption('edit', action) }} ><IconLabel label=\"Edit\" /></a></li>}\r\n                                    {action.removable && <li> <div className=\"cui-drop-trigger\">\r\n                                        <a className=\"cui-icon\" cui-icon=\"trash\"><IconLabel label=\"Delete\" /></a>\r\n                                        <BpdConfirmDrop message=\"Do you really want to delete this action?\" cancelLabel=\"No\" confirmLabel=\"Yes\" id=\"action-delete-drop\" onConfirm={() => { props.onDelete(action) }} />\r\n                                    </div></li>}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>)\r\n        })}\r\n    </div>);\r\n}\r\n","import * as React from 'react'\r\nimport { RouteDetails } from '../../../api/routes/routes';\r\nimport { TriangleShadow } from './TriangleShadow';\r\n\r\nexport interface PageHeaderProps {\r\n    title: string;\r\n    description: string;\r\n    icon?: string;\r\n}\r\n\r\nexport interface PageHeaderWrapperProps {\r\n    route: RouteDetails;\r\n}\r\n\r\n\r\nexport function PageHeader(props: PageHeaderProps) {\r\n    return (<div className=\"stopwatch-page-header cui-margin-bottom\">\r\n        <div className=\"cui-container cui-center cui-background-default\">\r\n            <div className=\"cui-padding-large-vertical\">\r\n                {props.icon && <div className=\"cui-flex-center cui-margin-bottom\"><span cui-icon={props.icon}></span></div>}\r\n                <h1 className=\"cui-h1 cui-text-center cui-margin-remove-bottom cui-anim-fade-in\">{props.title}</h1>\r\n                <p className=\"cui-text-center cui-text-muted cui-scale-y-in cui-animation-delay cui-margin-large-bottom\">{props.description}</p>\r\n            </div>\r\n        </div>\r\n        <TriangleShadow />\r\n    </div>);\r\n}\r\n\r\n\r\nexport function PageHeaderRouteWrapper(props: PageHeaderWrapperProps) {\r\n    return (<PageHeader title={props.route.name} description={props.route.description} icon={props.route.icon} />);\r\n}","import { is } from 'bpd-toolkit/dist/esm/index';\r\nimport * as React from 'react'\r\nimport { setPageTitle, setNavbarTitle, createArray } from '../../../core/helpers';\r\nimport { MAPPIGNS } from '../../../ui/routes';\r\nimport { PageHeader } from './PageHeader';\r\n\r\nexport interface MainComponentBaseProps {\r\n    routeName: string;\r\n    children: JSX.Element | JSX.Element[] | undefined;\r\n}\r\n\r\nexport interface BaseComponentProps {\r\n    setPageTitle: (value: string) => void;\r\n}\r\n\r\nexport function MainComponentBase(props: MainComponentBaseProps) {\r\n    const routeData = MAPPIGNS.getRoute(props.routeName);\r\n    const [title, setTitle] = React.useState(routeData.name);\r\n\r\n    function updateTitle(title: string) {\r\n        if (!is(title)) {\r\n            return;\r\n        }\r\n        setPageTitle(routeData.name);\r\n        setNavbarTitle(routeData.name);\r\n        setTitle(title)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setPageTitle(routeData.name);\r\n        setNavbarTitle(routeData.name);\r\n    }, [])\r\n    return (\r\n        <>\r\n            <PageHeader title={title} icon={routeData.icon} description={routeData.description} />\r\n            <div className=\"stopwatch-content-width cui-margin-top\">\r\n                {\r\n                    createArray(props.children).map(child => {\r\n                        if (typeof child.type === 'string') {\r\n                            return React.cloneElement(child, { ...child.props })\r\n                        }\r\n                        return React.cloneElement(child, { setPageTitle: updateTitle, ...child.props })\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import * as React from 'react'\r\nimport { StopwatchAction } from '../../../core/models';\r\nimport { DefaultActions } from '../../../core/statics';\r\nimport { ACTIONS_FLOW_ACTIONS } from '../../../app/flow/actions';\r\nimport { AddActionDialog } from './AddActionDialog';\r\nimport { PageHeader } from '../common/PageHeader';\r\nimport { setNavbarTitle, setPageTitle } from '../../../core/helpers';\r\nimport { is } from '../../../../node_modules/bpd-toolkit/dist/esm/index';\r\nimport { ClearableInput } from '../common/ClearableInput';\r\nimport { ActionsEditGrid } from './ActionsEditGrid';\r\nimport { MAPPIGNS } from '../../../ui/routes';\r\nimport { MainComponentBase } from '../common/MainComponentBase';\r\n\r\nconst defaultAction: StopwatchAction = {\r\n    id: undefined,\r\n    name: \"\",\r\n    type: \"exercise\",\r\n    duration: \"5\",\r\n    removable: true,\r\n    editable: true\r\n}\r\n\r\nexport interface BpdDialogState {\r\n    action: StopwatchAction;\r\n}\r\n\r\nexport interface StopWatchActionsState {\r\n    actions: StopwatchAction[];\r\n    current: StopwatchAction;\r\n}\r\n\r\n\r\nexport function StopwatchActionsComponent() {\r\n    const [state, setState] = React.useState<StopWatchActionsState>({\r\n        actions: [...DefaultActions],\r\n        current: null\r\n    })\r\n\r\n    const routeData = MAPPIGNS.getRoute('actions');\r\n\r\n    const [filter, setFilter] = React.useState<string>(\"\");\r\n\r\n    function onDialogSave(action: StopwatchAction) {\r\n        window.$actionsFlow.perform(ACTIONS_FLOW_ACTIONS.SET_ACTION, action);\r\n    }\r\n\r\n    function onDelete(action: StopwatchAction) {\r\n        window.$actionsFlow.perform(ACTIONS_FLOW_ACTIONS.REMOVE_ACTION, action);\r\n    }\r\n\r\n    function onGetAll(actions: StopwatchAction[]) {\r\n        setState({\r\n            ...state,\r\n            actions: [...DefaultActions, ...actions]\r\n        })\r\n    }\r\n\r\n    function onAddOrEditClick(action?: StopwatchAction) {\r\n        setState({\r\n            ...state,\r\n            current: action || { ...defaultAction }\r\n        })\r\n        let dialogCui = window.$cui.get(\"#add-action-dialog\");\r\n        dialogCui.emit('open');\r\n    }\r\n\r\n    function updateFilter(value: string) {\r\n        setFilter(value);\r\n    }\r\n\r\n    function matchesName(name: string): boolean {\r\n        if (!is(filter)) {\r\n            return true;\r\n        }\r\n        let match = name.toLowerCase().match(filter.toLowerCase());\r\n        return is(match);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setPageTitle(routeData.name);\r\n        const getAllSub = window.$actionsFlow.subscribe(ACTIONS_FLOW_ACTIONS.GET_ALL, { finish: onGetAll })\r\n        const setActionSub = window.$actionsFlow.subscribe(ACTIONS_FLOW_ACTIONS.SET_ACTION)\r\n        const removeActionSub = window.$actionsFlow.subscribe(ACTIONS_FLOW_ACTIONS.REMOVE_ACTION)\r\n        window.$actionsFlow.perform(ACTIONS_FLOW_ACTIONS.GET_ALL);\r\n        return () => {\r\n            //setNavbarTitle(\"\");\r\n            window.$actionsFlow.unsubscribe(ACTIONS_FLOW_ACTIONS.GET_ALL, getAllSub.id);\r\n            window.$actionsFlow.unsubscribe(ACTIONS_FLOW_ACTIONS.SET_ACTION, setActionSub.id);\r\n            window.$actionsFlow.unsubscribe(ACTIONS_FLOW_ACTIONS.REMOVE_ACTION, removeActionSub.id);\r\n        }\r\n    }, [state.actions])\r\n\r\n    return (<>\r\n        <MainComponentBase routeName=\"actions\" >\r\n            <div key=\"search-input\" className=\"cui-container cui-flex cui-middle cui-middle cui-center cui-right--s\">\r\n                <ClearableInput value={filter} onUpdate={updateFilter} className=\"cui-width-1-1 cui-width-1-3--m cui-width-1-4--l\" />\r\n            </div>\r\n            <ActionsEditGrid key=\"actions-grid\" filter={filter} actions={state.actions} onEdit={onAddOrEditClick} onDelete={onDelete} />\r\n            <div key=\"btn-bar\" className=\"cui-position-float cui-position-bottom cui-position-center cui-margin-large-bottom app-float-bottom z-index-100\">\r\n                <button className=\"cui-icon-button cui-large cui-background-default cui-box-shadow\" cui-icon=\"plus\" onClick={() => { onAddOrEditClick() }}></button>\r\n            </div>\r\n        </MainComponentBase>\r\n        <AddActionDialog action={state.current} onSave={onDialogSave} /></>);\r\n}","import { is } from \"bpd-toolkit/dist/esm/index\";\r\nimport { Training } from \"../../core/models\";\r\nimport { ITrainingsService } from \"../../core/services/interfaces\";\r\n\r\nexport const ACTIONS = {\r\n    GET_ALL_TRAININGS: \"GET_ALL_TRAININGS\",\r\n    ADD_TRAINING: \"ADD_TRAINING\",\r\n    UPDATE_TRAINING: \"UPDATE_TRAINING\",\r\n    DELETE_TRAINING: \"DELETE_TRAINING\",\r\n    GET_TRAINING: \"GET_TRAINING\",\r\n    CLEAR_TRAININGS: \"CLEAR_TRAININGS\",\r\n    GET_DRAFT: \"GET_DRAFT\",\r\n    SET_DRAFT: \"SET_DRAFT\",\r\n    CLEAR_DRAFT: \"CLEAR_DRAFT\",\r\n    GET_FOR_EDIT: \"GET_FOR_EDIT\"\r\n}\r\n\r\nexport type TrainingsFlowInput = void | Training | number;\r\nexport type TrainingsFlowOutput = Training[] | Training | boolean;\r\n\r\nexport class TrainingsFlow {\r\n    #service: ITrainingsService;\r\n    constructor(service: ITrainingsService) {\r\n        this.#service = service;\r\n    }\r\n\r\n    getActions() {\r\n        return {\r\n            [ACTIONS.GET_ALL_TRAININGS]: () => {\r\n                return this.#service.getAllTrainings();\r\n            },\r\n            [ACTIONS.ADD_TRAINING]: (t: Training) => {\r\n                return this.#service.addTraining(t);\r\n            },\r\n            [ACTIONS.UPDATE_TRAINING]: (t: Training) => {\r\n                return this.#service.updateTraining(t);\r\n            },\r\n            [ACTIONS.DELETE_TRAINING]: (id: string) => {\r\n                return this.#service.deleteTraining(id);\r\n            },\r\n            [ACTIONS.GET_TRAINING]: (id: string) => {\r\n                return this.#service.getTraining(id);\r\n            },\r\n            [ACTIONS.GET_DRAFT]: () => {\r\n                return this.#service.getDraft();\r\n            },\r\n            [ACTIONS.SET_DRAFT]: (training: Training) => {\r\n                return this.#service.setDraft(training);\r\n            },\r\n            [ACTIONS.CLEAR_DRAFT]: () => {\r\n                return this.#service.clearDraft();\r\n            },\r\n            [ACTIONS.GET_FOR_EDIT]: (id: string) => {\r\n                let draft = this.#service.getDraft();\r\n                if (is(draft) && draft.id === id) {\r\n                    return draft;\r\n                }\r\n                if (!is(id) && is(draft.id)) {\r\n                    return undefined;\r\n                }\r\n                return this.#service.getTraining(id);\r\n            },\r\n            [ACTIONS.CLEAR_TRAININGS]: () => {\r\n                this.#service.clearTrainings();\r\n                return true;\r\n            },\r\n        }\r\n    }\r\n}","import * as React from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction GoBack(props: any) {\r\n    const { history } = props;\r\n    return (<button className=\"cui-button cui-accent\" onClick={() => history.goBack()}>Go Back</button>)\r\n}\r\n\r\n\r\nexport default withRouter(GoBack);","import * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport GoBack from \"./GoBack\";\r\n\r\nexport interface NotFoundProps {\r\n    message: string;\r\n    classes?: string;\r\n    goBack?: boolean;\r\n}\r\n\r\nexport function NotFound(props: NotFoundProps) {\r\n    return (<div className={props.classes}>\r\n        <div>\r\n            <h2 className=\"cui-h2 cui-text-center cui-text-error\">{props.message}</h2>\r\n            <div className=\"\">\r\n                <div className=\"cui-flex cui-center\">\r\n                    <Link to=\"/\" className=\"cui-button cui-margin-small-right\">Go Home</Link>\r\n                    {props.goBack ?? <GoBack />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>);\r\n}","import * as React from 'react'\r\nimport { ProgressPlugin } from 'webpack';\r\nimport { IconLabel } from './IconLabel';\r\n\r\nexport interface ButtonBarProps {\r\n    items: ButtonBarItemProps[];\r\n}\r\n\r\nexport function ButtonBar(props: ButtonBarProps) {\r\n    React.useEffect(() => {\r\n\r\n    }, [props.items])\r\n    return (<ul className=\"cui-list cui-inline\">\r\n        {props.items && props.items.length > 0 && props.items.map((item: ButtonBarItemProps, index: number) => {\r\n            return <ButtonBarItem key={item.icon} icon={item.icon} label={item.label} onClick={item.onClick} modifiers={item.modifiers} />\r\n        })}\r\n    </ul>);\r\n}\r\n\r\n\r\nexport interface ButtonBarItemProps {\r\n    icon: string;\r\n    label: string;\r\n    modifiers?: string;\r\n    onClick: (ev: any) => void;\r\n}\r\n\r\nexport function ButtonBarItem(props: ButtonBarItemProps) {\r\n    let classes = \"cui-button cui-rounded \" + (props.modifiers ?? \"\");\r\n    return (<li className=\"cui-padding-small-horizontal\">\r\n        <a className={classes} cui-icon={props.icon} onClick={props.onClick}><IconLabel label={props.label} /></a>\r\n    </li>);\r\n}","import * as React from 'react'\r\nimport { StopwatchAction } from 'src/core/models';\r\nimport { BpdActionIcon } from './BpdActionIcon';\r\n\r\nexport interface BpdActionLabelProps {\r\n    action: StopwatchAction;\r\n}\r\nexport function BpdActionLabel(props: BpdActionLabelProps) {\r\n    return (\r\n        <div className=\"cui-flex cui-middle\">\r\n            <div className=\"cui-flex-center cui-margin-right\">\r\n                <BpdActionIcon type={props.action.type} />\r\n            </div>\r\n            <div className=\"cui-flex-grow\">\r\n                <div className=\"\">{props.action.name}</div>\r\n                <div className=\"cui-text-muted\">Lasts {props.action.duration} seconds</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import * as React from 'react'\r\nimport { StopwatchAction } from 'src/core/models';\r\nimport { BpdActionIcon } from '../common/BpdActionIcon';\r\nimport { BpdActionLabel } from '../common/BpdActionLabel';\r\nimport { ActionsSelectProps } from './ActionsSelect';\r\n\r\nexport function ActionSelectDropdown(props: ActionsSelectProps) {\r\n    function onChange(action: StopwatchAction) {\r\n        if (props.onSelect && (!props.value || props.value.id !== action.id)) {\r\n            props.onSelect(action);\r\n        }\r\n        window.$cui.get(\"#\" + props.id).emit(\"close\");\r\n    }\r\n\r\n    return (<div className=\"cui-drop-trigger cui-block\">\r\n        <a className=\"cui-link cui-block\">\r\n            <DropTrigger action={props.value} />\r\n        </a>\r\n        <div className=\"cui-dropdown drop-height\" cui-drop=\"outClose: Y;\" id={props.id}>\r\n            <ul className=\"cui-drop-nav drop-max-width\">\r\n                {props.actions && props.actions.map(action => {\r\n                    return <li key={action.id}><a className=\"cui-overflow-hidden cui-text-truncate\" onClick={() => { onChange(action) }}><BpdActionLabel action={action} /></a></li>\r\n                })}\r\n            </ul>\r\n        </div>\r\n    </div >);\r\n}\r\n\r\ninterface DropTriggerProps {\r\n    action: StopwatchAction;\r\n}\r\n\r\nexport function DropTrigger(props: DropTriggerProps) {\r\n    return (\r\n        <div className=\"cui-flex cui-middle cui-width-1-1\">\r\n            <div className=\"cui-flex-grow\">{props.action ? <BpdActionLabel action={props.action} /> : <span className=\"cui-inline-block cui-padding-small\">No action selected</span>}</div>\r\n            <span cui-icon=\"chevron_small_down\"></span>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport function ActionDetailsLabel(props: DropTriggerProps) {\r\n    return (<div className=\"cui-text-truncate cui-overflow-hidden cui-width-1-1\">\r\n        <div>\r\n            <BpdActionIcon type={props.action.type} /><span className=\"cui-margin-small-left\">{props.action.name}</span>\r\n        </div>\r\n        <div>\r\n            <span className=\"cui-text-muted cui-text-small\">(Duration {props.action.duration}s)</span>\r\n        </div>\r\n    </div>)\r\n\r\n    {/* <BpdActionIcon type={props.action.type} /><span className=\"cui-margin-small-left\">{props.action.name}</span><span className=\"cui-text-muted cui-margin-small-left\">({props.action.duration}s)</span></div>) */ }\r\n}","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { are, is } from \"../../../../node_modules/bpd-toolkit/dist/esm/index\";\r\nimport { ACTIONS_FLOW_ACTIONS } from \"../../../app/flow/actions\";\r\nimport { Round, StopwatchAction } from \"../../../core/models\";\r\nimport { getDefaultRoundName } from \"../../../core/statics\";\r\nimport { RoundValidator } from \"../../../core/validators\";\r\nimport { ActionSelectDropdown } from \"../actions/ActionSelectDropdown\";\r\nimport { ActionsSelect } from \"../actions/ActionsSelect\";\r\nimport { BpdActionIcon } from \"../common/BpdActionIcon\";\r\nimport { BpdActionLabel } from \"../common/BpdActionLabel\";\r\nimport { BpdDialog } from \"../common/BpdDialog\";\r\nimport { ErrorsList } from \"../common/ErrorsList\";\r\n\r\nexport interface EditRoundDialogProps {\r\n    onSave: (round: Round, index: number) => void;\r\n    definedActions: StopwatchAction[];\r\n    round: Round;\r\n    index: number;\r\n    currentCount: number;\r\n}\r\n\r\nexport interface EditRoundDialogState {\r\n    name: string;\r\n    actions?: StopwatchAction[];\r\n    selected: StopwatchAction;\r\n    errors: string[];\r\n}\r\n\r\nexport function EditRoundDialog(props: EditRoundDialogProps) {\r\n    const [state, setState] = useState<EditRoundDialogState>({\r\n        actions: [],\r\n        selected: null,\r\n        errors: [],\r\n        name: \"\"\r\n    })\r\n\r\n    function onSave() {\r\n        if (props.onSave) {\r\n            let round: Round = {\r\n                actions: [...state.actions],\r\n                name: state.name\r\n            }\r\n            let validation = new RoundValidator().validate(round);\r\n            if (validation.status) {\r\n                props.onSave(round, props.index);\r\n                setState({\r\n                    ...state,\r\n                    name: getDefaultRoundName(props.currentCount + 1),\r\n                    selected: null,\r\n                    actions: []\r\n                })\r\n                return;\r\n            }\r\n            setState({\r\n                ...state,\r\n                errors: validation.errors\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    function onActionSelectChange(action: StopwatchAction) {\r\n        if (action) {\r\n            setState({\r\n                ...state,\r\n                selected: action\r\n            })\r\n        }\r\n    }\r\n\r\n    function onAddAction() {\r\n        if (state.selected) {\r\n            setStateRoundData([...state.actions, state.selected])\r\n        }\r\n    }\r\n\r\n    function onDeleteAction(index: number) {\r\n        let newActions = [...state.actions];\r\n        newActions.splice(index, 1);\r\n        setStateRoundData(newActions)\r\n    }\r\n\r\n    function setStateRoundData(actions: StopwatchAction[], name?: string) {\r\n        setState({\r\n            ...state,\r\n            actions: actions,\r\n            selected: state.selected ?? props.definedActions[0],\r\n            errors: [],\r\n            name: name ? name : state.name\r\n        })\r\n    }\r\n\r\n    function roundNameUpdate(ev: any) {\r\n        let name = ev.target.value;\r\n        let errors = [];\r\n        if (!is(name)) {\r\n            errors.push(\"Name cannot be empty\")\r\n        }\r\n        setState({\r\n            ...state,\r\n            errors: errors,\r\n            name: name\r\n        })\r\n    }\r\n\r\n    function onSwapAction(index: number) {\r\n        if (!are(state.selected, state.actions)) {\r\n            return;\r\n        }\r\n        let copy = [...state.actions];\r\n        copy[index] = state.selected;\r\n        setState({\r\n            ...state,\r\n            actions: copy\r\n        })\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        let name = props.round && props.round.name ? props.round.name : getDefaultRoundName(props.currentCount);\r\n        let actions = is(props.round) ? props.round.actions : [];\r\n        setStateRoundData(actions, name);\r\n        return () => {\r\n        }\r\n    }, [props.round, props.definedActions, props.currentCount])\r\n    return (<BpdDialog\r\n        id=\"edit-round-dialog\"\r\n        title=\"Edit Round\"\r\n        body={<>\r\n            <div className=\"\">\r\n                <div className=\"cui-form\">\r\n                    <label htmlFor=\"\" className=\"cui-form-label\">Round name</label>\r\n                    <input type=\"text\" className=\"cui-input\" placeholder=\"Round name\" value={state.name} onChange={roundNameUpdate} />\r\n                </div>\r\n                <div className=\"cui-margin-top\">Actions</div>\r\n                <ul className=\"cui-list cui-margin-top edit-round-dialog-body\">\r\n                    {state.actions && state.actions.map((item: StopwatchAction, index: number) => {\r\n                        return <li key={item.id + index} className=\"animation-fade-in\" >\r\n                            <div className=\"cui-flex cui-middle\">\r\n                                <div className=\"cui-flex-grow\">\r\n                                    <BpdActionLabel action={item} />\r\n                                </div>\r\n                                <ul className=\"cui-icon-nav\">\r\n                                    <li><a className=\"cui-icon\" cui-icon=\"swap\" onClick={() => { onSwapAction(index) }}></a></li>\r\n                                    <li><a className=\"cui-icon\" cui-icon=\"trash\" onClick={() => { onDeleteAction(index) }}></a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </li>\r\n                    })}\r\n                </ul>\r\n                <div className=\"cui-flex cui-middle cui-nowrap cui-margin-top\">\r\n                    <div className=\"cui-flex-grow\">\r\n                        <ActionSelectDropdown value={state.selected} actions={props.definedActions} onSelect={onActionSelectChange} name=\"actioonaa\" id=\"round-select-drop\" />\r\n                    </div>\r\n                    <div className=\"cui-padding-horizontal\">\r\n                        <button cui-icon=\"plus\" className=\"cui-icon cui-icon-button\" onClick={onAddAction}></button>\r\n                    </div>\r\n                </div>\r\n                <ErrorsList errors={state.errors} />\r\n            </div>\r\n        </>\r\n        }\r\n        footer={\r\n            <div className=\"cui-flex cui-right\" >\r\n                <button className=\"cui-button cui-margin-small-right\" cui-close=\"\">Cancel</button>\r\n                <button className=\"cui-button cui-accent\" onClick={onSave}>Save</button>\r\n            </div >\r\n        }\r\n    />)\r\n}","import * as React from 'react';\r\nimport { calculateDuration, getUserDisplayNotation } from '../../../core/helpers';\r\nimport { Round } from \"../../../core/models\";\r\nimport { getDefaultRoundName } from '../../../core/statics';\r\nimport { BpdConfirmDrop } from '../common/BpdConfirmDrop';\r\n\r\ninterface RoundListItemProps {\r\n    round: Round;\r\n    index: number;\r\n    isFirst: boolean;\r\n    isLast: boolean;\r\n    onEdit: (round: Round, index: number) => void;\r\n    onDelete: (round: Round, index: number) => void;\r\n    onMoveDown: (round: Round, index: number) => void;\r\n    onMoveUp: (round: Round, index: number) => void;\r\n    onClone: (round: Round, index: number) => void;\r\n}\r\n\r\nexport function EditRoundListItem(props: RoundListItemProps) {\r\n\r\n    return (\r\n        <div className=\"cui-flex cui-middle cui-nowrap\">\r\n            <div className=\"cui-flex-grow\">\r\n                <div><span className=\"cui-text-bold\">{props.round.name}</span></div>\r\n                <div className=\"cui-text-muted cui-text-small cui-text-no-wrap\"><span >{props.round.actions.length} actions, {getUserDisplayNotation(calculateDuration(props.round.actions))}</span></div>\r\n\r\n            </div>\r\n\r\n            <ul className=\"cui-icon-nav cui-flex-shrink\">\r\n                {!props.isFirst && <li><a className=\"cui-icon\" cui-icon=\"chevron_up\" onClick={() => { props.onMoveUp(props.round, props.index) }} cui-tooltip=\"Move up\"></a></li>}\r\n                {!props.isLast && <li><a className=\"cui-icon\" cui-icon=\"chevron_down\" onClick={() => { props.onMoveDown(props.round, props.index) }} cui-tooltip=\"Move down\"></a></li>}\r\n                <li><a className=\"cui-icon\" cui-icon=\"copy\" onClick={() => { props.onClone(props.round, props.index) }} cui-tooltip=\"Clone\"></a></li>\r\n                <li><a className=\"cui-icon\" cui-icon=\"edit\" onClick={() => { props.onEdit(props.round, props.index) }} cui-tooltip=\"Edit\"></a></li>\r\n                <li><div className=\"cui-drop-trigger\">\r\n                    <a className=\"cui-icon\" cui-icon=\"trash\"></a>\r\n                    <BpdConfirmDrop id=\"delete-confirm-drop\" message=\"Do you really want to delete this round?\" cancelLabel=\"No\" confirmLabel=\"Yes\" onConfirm={() => {\r\n                        props.onDelete(props.round, props.index);\r\n                    }} />\r\n                </div></li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}","import * as React from 'react'\r\n\r\nexport interface BpdDialogFooterProps {\r\n    confirmLabel: string;\r\n    onConfirm: () => void;\r\n    onCancel: () => void;\r\n}\r\n\r\nexport function BpdDialogFooter(props: BpdDialogFooterProps) {\r\n    return (<div className=\"cui-flex cui-right cui-middle\">\r\n        <button className=\"cui-button\" onClick={props.onCancel}>Cancel</button>\r\n        <button className=\"cui-button cui-accent cui-margin-small-left\" onClick={props.onConfirm}>{props.confirmLabel}</button>\r\n    </div>);\r\n}\r\n","import * as React from 'react'\r\nimport { buildQuickRoundActions, groupActionsByType } from '../../../core/helpers';\r\nimport { ActionsGroup, Round, RoundActions, StopwatchAction, StopwatchActionType } from '../../../core/models';\r\nimport { ActionSelectDropdown } from '../actions/ActionSelectDropdown';\r\nimport { BpdDialog } from '../common/BpdDialog';\r\nimport { BpdDialogFooter } from '../common/BpdDialogFooter';\r\n\r\n\r\nexport interface QuickRoundDialogProps {\r\n    actions: StopwatchAction[];\r\n    onSave: (round: Round) => void;\r\n    id: string;\r\n}\r\n\r\nexport function QuickRoundDialog(props: QuickRoundDialogProps) {\r\n    const groupedActions = React.useMemo<ActionsGroup>(() => {\r\n        return groupActionsByType(props.actions)\r\n    }, [props.actions])\r\n\r\n    const [actions, setActions] = React.useState<RoundActions>({\r\n        warmup: groupedActions['warmup'] ? groupedActions['warmup'][0] : null,\r\n        exercise: groupedActions['exercise'] ? groupedActions['exercise'][0] : null,\r\n        break: groupedActions['break'] ? groupedActions['break'][0] : null,\r\n        cooldown: groupedActions['cooldown'] ? groupedActions['cooldown'][0] : null\r\n    });\r\n\r\n    const [exerciseCount, setExerciseCount] = React.useState(1);\r\n\r\n    function onUpdate(data: StopwatchAction, type: string) {\r\n        setActions({\r\n            ...actions,\r\n            [type]: data\r\n        })\r\n\r\n        // props.onUpdate(data)\r\n    }\r\n\r\n    function onCounterUpdate(value: number) {\r\n        setExerciseCount(value);\r\n    }\r\n\r\n    function onDialogCancel() {\r\n        window.$cui.get(\"#\" + props.id).emit(\"close\");\r\n    }\r\n\r\n    function onConfirm() {\r\n        if (exerciseCount < 1) {\r\n            return;\r\n        }\r\n        let round: Round = {\r\n            name: \"Quick\",\r\n            actions: buildQuickRoundActions(actions, exerciseCount)\r\n        }\r\n        props.onSave(round);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setActions({\r\n            warmup: groupedActions['warmup'] ? groupedActions['warmup'][0] : null,\r\n            break: groupedActions['break'] ? groupedActions['break'][0] : null,\r\n            exercise: groupedActions['exercise'] ? groupedActions['exercise'][0] : null,\r\n            cooldown: groupedActions['cooldown'] ? groupedActions['cooldown'][0] : null,\r\n        })\r\n        return () => {\r\n\r\n        }\r\n    }, [props.actions])\r\n    return (<BpdDialog title=\"Quick Round\"\r\n        id={props.id}\r\n        body={<QuickRoundDialogBody actions={groupedActions} onUpdate={onUpdate} data={actions} count={exerciseCount} onCounterUpdate={onCounterUpdate} />}\r\n        footer={<BpdDialogFooter confirmLabel=\"Save\" onCancel={onDialogCancel} onConfirm={onConfirm} />}\r\n    />);\r\n}\r\n\r\n\r\nexport interface QuickRoundDialogBodyProps {\r\n    actions: ActionsGroup;\r\n    data: RoundActions;\r\n    count: number;\r\n    onUpdate: (action: StopwatchAction, type: string) => void;\r\n    onCounterUpdate: (value: number) => void;\r\n}\r\n\r\nexport function QuickRoundDialogBody(props: QuickRoundDialogBodyProps) {\r\n\r\n    function updateCounter(count: number) {\r\n        if (count > 0 && count < 12) {\r\n            props.onCounterUpdate(count);\r\n        }\r\n    }\r\n\r\n    return <>\r\n        <div>\r\n            <QuickRoundDialogSelect actions={props.actions[StopwatchActionType.WARMUP]} value={props.data.warmup} onUpdate={props.onUpdate} type={StopwatchActionType.WARMUP} id=\"warmup-select-drop\" name=\"warmup-action\" />\r\n        </div>\r\n        <div className=\"cui-margin-top\">\r\n            <QuickRoundDialogSelect actions={props.actions[StopwatchActionType.EXERCISE]} value={props.data.exercise} onUpdate={props.onUpdate} type={StopwatchActionType.EXERCISE} id=\"exercise-select-drop\" name=\"exercise-action\" />\r\n        </div>\r\n        <div className=\"cui-form cui-margin-top\">\r\n            <QuickRoundDialogSelect actions={props.actions[StopwatchActionType.BREAK]} value={props.data.break} onUpdate={props.onUpdate} type={StopwatchActionType.BREAK} id=\"break-select-drop\" name=\"break-action\" />\r\n        </div>\r\n        <div className=\"cui-margin-top\">\r\n            <QuickRoundDialogSelect actions={props.actions[StopwatchActionType.COOLDOWN]} value={props.data.cooldown} onUpdate={props.onUpdate} type={StopwatchActionType.COOLDOWN} id=\"cooldown-select-drop\" name=\"cooldown-action\" />\r\n        </div>\r\n        <div className=\"cui-form cui-margin-top\">\r\n            <label className=\"cui-form-label\">Number of exercises</label>\r\n            <div className=\"cui-flex cui-middle cui-margin-small-top\">\r\n                <button className=\"cui-icon-button\" cui-icon=\"minus\" onClick={() => updateCounter(props.count - 1)}></button>\r\n                <span className=\"cui-margin-horizontal\">{props.count}</span>\r\n                <button className=\"cui-icon-button\" cui-icon=\"plus\" onClick={() => updateCounter(props.count + 1)}></button>\r\n            </div>\r\n        </div>\r\n    </>;\r\n}\r\n\r\nexport interface QuickRoundDialogSelectProps {\r\n    type: string;\r\n    actions: StopwatchAction[];\r\n    value: StopwatchAction;\r\n    id: string;\r\n    name: string;\r\n    onUpdate: (actions: StopwatchAction, type: string) => void;\r\n}\r\n\r\nexport function QuickRoundDialogSelect(props: QuickRoundDialogSelectProps) {\r\n    return (<>\r\n        <span className=\"cui-text-capital cui-inline-block\">{props.type}</span>\r\n        <div className=\"cui-flex cui-middle cui-margin-small-top\">\r\n            <div className=\"cui-flex-grow\">\r\n                <ActionSelectDropdown value={props.value} actions={props.actions} onSelect={(value) => { props.onUpdate(value, props.type) }} name={props.name} id={props.id} />\r\n            </div>\r\n            <button className=\"cui-icon-button\" cui-icon=\"close\" onClick={() => { props.onUpdate(null, \"cooldown\") }}></button>\r\n        </div>\r\n    </>)\r\n}","import * as React from 'react'\r\n\r\nexport interface LoadingProps {\r\n    text?: string;\r\n    modifiers?: string;\r\n}\r\n\r\nexport function Loading(props: LoadingProps) {\r\n    let classes = \"cui-container cui-flex-center\";\r\n    const text = \"Loading...\"\r\n    if (props.modifiers) {\r\n        classes += \" \" + props.modifiers;\r\n    }\r\n    return (<div className={classes}>\r\n        <span>{props.text ?? text}</span>\r\n    </div>);\r\n}\r\n","import * as React from 'react'\r\nimport { Link, useParams, withRouter } from 'react-router-dom';\r\nimport { ACTIONS } from '../../../app/flow/trainings';\r\nimport { clone, is } from '../../../../node_modules/bpd-toolkit/dist/esm/index';\r\nimport { ACTIONS_FLOW_ACTIONS } from '../../../app/flow/actions';\r\nimport { insert, move, setNavbarTitle, setPageTitle, showMessage, showToast } from '../../../core/helpers';\r\nimport { Round, StopwatchAction, Training, TrainingState } from '../../../core/models';\r\nimport { DefaultActions } from '../../../core/statics';\r\nimport { TrainingValidator } from '../../../core/validators';\r\nimport { MAPPIGNS } from '../../routes';\r\nimport { onDeleteTrainingDialog } from '../common/Dialogs';\r\nimport { NotFound } from '../common/NotFound';\r\nimport { PageHeader } from '../common/PageHeader';\r\nimport { ButtonBar, ButtonBarItemProps } from './ButtonBar';\r\nimport { EditRoundDialog } from './EditRoundDialog';\r\nimport { EditRoundListItem } from './EditRoundListItem';\r\nimport { QuickRoundDialog } from './QuickRoundDialog';\r\nimport { Loading } from '../common/Loading';\r\n\r\nexport interface EditTrainingSectionProps {\r\n    training: Training;\r\n    //   onSave: (training: Training) => void;\r\n    onUpdate: (training: Training) => void;\r\n    onCancel: () => void;\r\n}\r\n\r\n\r\nexport interface EditTrainingProps {\r\n    history: any;\r\n}\r\n\r\ninterface EditTrainingState {\r\n    training: Training;\r\n}\r\n\r\ninterface EditTrainingSectionState {\r\n    currentIndex: number;\r\n    currentRound: Round;\r\n    currentCount: number;\r\n}\r\n\r\ninterface EditTrainingDefinedActions {\r\n    actions: StopwatchAction[];\r\n}\r\n\r\nfunction EditTraining(props: EditTrainingProps) {\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n    const [state, setState] = React.useState<EditTrainingState>({\r\n        training: {\r\n            name: \"\",\r\n            rounds: [],\r\n            state: TrainingState.NEW\r\n        }\r\n    })\r\n    const [notFound, setNotFound] = React.useState(false);\r\n    const { id } = useParams();\r\n\r\n\r\n    function getTraining() {\r\n        setIsLoading(true);\r\n        if (id) {\r\n            window.$flow.perform(ACTIONS.GET_FOR_EDIT, id);\r\n        } else {\r\n            window.$flow.perform(ACTIONS.GET_DRAFT);\r\n        }\r\n    }\r\n\r\n    function onUpdate(training: Training) {\r\n        pushDraft(training)\r\n    }\r\n\r\n    function onUpdateTraining(result: boolean): void {\r\n        if (!result) {\r\n            showMessage(\"Fail\", \"Training was not saved\")\r\n        } else {\r\n            showToast(\"Saved\");\r\n            goBack();\r\n        }\r\n    }\r\n\r\n    function goBack() {\r\n        if (props.history) {\r\n            props.history.goBack();\r\n        }\r\n    }\r\n\r\n    function onGetTraining(training: Training): void {\r\n        setIsLoading(false);\r\n        if (training) {\r\n            setPageTitle(\"Edit \" + training.name);\r\n            setState({\r\n                training: { ...training }\r\n            })\r\n        } else {\r\n            setNotFound(true);\r\n            // showMessage(\"Fail\", \"Training was not found\")\r\n        }\r\n    }\r\n\r\n    function onGetDraft(training: Training) {\r\n        setIsLoading(false);\r\n        if (training && !is(training.id)) {\r\n            setState({\r\n                training: { ...training }\r\n            })\r\n        }\r\n    }\r\n\r\n    function pushDraft(training: Training) {\r\n        window.$flow.perform(ACTIONS.SET_DRAFT, training);\r\n        setState({\r\n            training: { ...training, state: TrainingState.DRAFT }\r\n        })\r\n    }\r\n\r\n    function onTrainingSave() {\r\n        let validaton = new TrainingValidator().validate(state.training);\r\n        if (validaton.status) {\r\n            window.$flow.perform(ACTIONS.UPDATE_TRAINING, state.training)\r\n        } else {\r\n            showMessage(\"Training not valid\", validaton.errors.join(\", \"))\r\n        }\r\n    }\r\n\r\n    function onDeleteTraining() {\r\n        if (is(state.training.id) && state.training.state === TrainingState.PUBLISH)\r\n            onDeleteTrainingDialog(state.training.name, onYes)\r\n        else {\r\n            showToast(\"Draft removed\");\r\n            // For not published trainings\r\n            window.$flow.perform(ACTIONS.CLEAR_DRAFT);\r\n            goBack();\r\n        }\r\n\r\n    }\r\n\r\n    function onYes() {\r\n        window.$flow.perform(\"DELETE_TRAINING\", state.training.id)\r\n    }\r\n\r\n    function onDeleteTrainingSub(result: boolean) {\r\n        showToast(\"Removed\");\r\n        goBack();\r\n    }\r\n\r\n    function getButtonNavItems(): ButtonBarItemProps[] {\r\n        const buttonNavItems: ButtonBarItemProps[] = [];\r\n        //{ icon: \"close\", label: \"Cancel\", onClick: () => { goBack() } }];\r\n        if (is(state.training.id)) {\r\n            buttonNavItems.push({ icon: \"media_play\", label: \"Run\", onClick: () => { props.history.push(MAPPIGNS.renderUrl('perform', { id: state.training.id })) } })\r\n        }\r\n\r\n        if (state.training.state !== TrainingState.NEW) {\r\n            buttonNavItems.push({ icon: \"trash\", label: \"Delete\", onClick: () => { onDeleteTraining() } });\r\n        }\r\n\r\n        buttonNavItems.push({ icon: \"checkmark\", label: \"Save\", onClick: onTrainingSave, modifiers: \"cui-success\" });\r\n        return buttonNavItems;\r\n    }\r\n\r\n    function getPageName(): string {\r\n        if (!is(state.training) || !is(state.training.name)) {\r\n            return \"Define training\";\r\n        }\r\n\r\n        return `Update ${state.training.state === TrainingState.DRAFT ? \"draft\" : \"training\"} ${state.training.name}`;\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setPageTitle(\"Edit training\");\r\n        setNavbarTitle(\"Edit training\");\r\n        const updateTrainingSub = window.$flow.subscribe(\"UPDATE_TRAINING\", { finish: onUpdateTraining })\r\n        const getTrainingSub = window.$flow.subscribe(ACTIONS.GET_FOR_EDIT, { finish: onGetTraining })\r\n        const getDraftSub = window.$flow.subscribe(\"GET_DRAFT\", { finish: onGetDraft })\r\n        const deleteTraininSub = window.$flow.subscribe(\"DELETE_TRAINING\", {\r\n            finish: onDeleteTrainingSub\r\n        })\r\n        getTraining();\r\n\r\n        return () => {\r\n            window.$flow.unsubscribe(\"UPDATE_TRAINING\", updateTrainingSub.id);\r\n            window.$flow.unsubscribe(ACTIONS.GET_FOR_EDIT, getTrainingSub.id);\r\n            window.$flow.unsubscribe(\"DELETE_TRAINING\", deleteTraininSub.id);\r\n            window.$flow.unsubscribe(\"GET_DRAFT\", getDraftSub.id);\r\n        }\r\n    }, [state.training.id])\r\n\r\n\r\n    if (isLoading) {\r\n        return <Loading />\r\n    } else if (notFound) {\r\n        return <NotFound message=\"The training you looking for could not be found\" classes=\"\" />\r\n    } else if (!state.training) {\r\n        return <span></span>;\r\n    }\r\n    return (<>\r\n        <div className=\"edit-container\">\r\n            <div className=\"edit-container-content cui-overflow-y-auto\">\r\n                <PageHeader title={getPageName()} description=\"Customize your training settings\" icon=\"dumbbell\" />\r\n                <EditTrainingSection training={state.training} onUpdate={onUpdate} onCancel={goBack} />\r\n            </div>\r\n            <div className=\"edit-container-bottom cui-padding-small-vertical cui-border-top cui-border-remove--l cui-flex stopwatch-content-width\">\r\n                <div className=\"stopwatch-content-width cui-flex cui-middle cui-center\">\r\n                    <ButtonBar items={\r\n                        getButtonNavItems()\r\n                    } />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>);\r\n}\r\n\r\n\r\n\r\nfunction EditTrainingSection(props: EditTrainingSectionProps) {\r\n    const [state, setState] = React.useState<EditTrainingSectionState>({\r\n        currentIndex: -1,\r\n        currentCount: 0,\r\n        currentRound: null\r\n    })\r\n\r\n    const [definedActions, setDefinedActions] = React.useState<EditTrainingDefinedActions>({\r\n        actions: []\r\n    })\r\n\r\n\r\n    function onRoundEdit(round: Round, index: number) {\r\n        setState({\r\n            ...state,\r\n            currentIndex: index,\r\n            currentRound: round,\r\n            currentCount: props.training && props.training.rounds ? props.training.rounds.length : 0\r\n        })\r\n        window.$cui.get(\"#edit-round-dialog\").emit(\"open\")\r\n    }\r\n\r\n    function onRoundDelete(round: Round, index: number) {\r\n        let rounds = [...props.training.rounds]\r\n        rounds.splice(index, 1)\r\n        updateRoundsState(rounds)\r\n    }\r\n\r\n    function onRoundDown(round: Round, index: number) {\r\n        updateRoundsState(move(props.training.rounds, index, index + 1))\r\n    }\r\n\r\n\r\n    function onRoundUp(round: Round, index: number) {\r\n        updateRoundsState(move(props.training.rounds, index, index - 1))\r\n    }\r\n\r\n    function onRoundClone(round: Round, index: number) {\r\n        let idx = index + 1;\r\n        let cloned = clone(round);\r\n        updateRoundsState(insert(props.training.rounds, idx, cloned))\r\n    }\r\n\r\n    function onRoundSave(round: Round, index: number) {\r\n        updateRoundsState(updateOrInsertRound(round, index));\r\n        window.$cui.get(\"#edit-round-dialog\").emit(\"close\");\r\n    }\r\n\r\n    function updateOrInsertRound(round: Round, index: number) {\r\n        let rounds = []\r\n        if (index > -1) {\r\n            rounds = [...props.training.rounds];\r\n            rounds[index] = round;\r\n        } else {\r\n            rounds = [...props.training.rounds, round];\r\n        }\r\n        return rounds;\r\n    }\r\n\r\n    function updateRoundsState(rounds: Round[]) {\r\n        props.onUpdate(\r\n            {\r\n                ...props.training,\r\n                rounds: rounds\r\n            }\r\n        )\r\n    }\r\n\r\n    function onFormChange(ev: any) {\r\n        let name = ev.target.name;\r\n        if (['name', 'description'].includes(name)) {\r\n            props.onUpdate({\r\n                ...props.training,\r\n                [name]: ev.target.value\r\n            })\r\n        }\r\n    }\r\n\r\n    function OnQuickRoundClick() {\r\n        window.$cui.get(\"#quick-round-create\").emit(\"open\")\r\n    }\r\n\r\n    function onQuickRoundSave(round: Round) {\r\n        updateRoundsState(updateOrInsertRound(round, -1));\r\n        window.$cui.get(\"#quick-round-create\").emit(\"close\");\r\n    }\r\n\r\n    function getDefinedActions(actions: StopwatchAction[]) {\r\n        setDefinedActions({\r\n            actions: [...DefaultActions, ...actions]\r\n        })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        const getDefinedActionsSub = window.$actionsFlow.subscribe(ACTIONS_FLOW_ACTIONS.GET_ALL, { finish: getDefinedActions });\r\n        window.$actionsFlow.perform(ACTIONS_FLOW_ACTIONS.GET_ALL);\r\n        setState({\r\n            ...state\r\n        })\r\n        return () => {\r\n            window.$actionsFlow.unsubscribe(ACTIONS_FLOW_ACTIONS.GET_ALL, getDefinedActionsSub.id)\r\n\r\n        }\r\n    }, [props.training])\r\n\r\n    return (<>\r\n        <div className=\"cui-container stopwatch-content-width cui-flex-grid cui-child-width-1-1 cui-child-width-1-2--m\">\r\n            <div className=\"cui-padding-small-right\">\r\n                {/* <h3 className=\"cui-h3 cui-text-muted\">Common</h3> */}\r\n                <div className=\"cui-form\">\r\n                    <label htmlFor=\"\" className=\"cui-form-label\">Name</label>\r\n                    <input type=\"text\" className=\"cui-input stopwatch-input-width\" placeholder=\"Name\" name=\"name\" value={props.training.name} onChange={onFormChange} />\r\n                </div>\r\n                <div className=\"cui-form cui-margin-top\">\r\n                    <label htmlFor=\"\" className=\"cui-form-label\">Description</label>\r\n                    <textarea className=\"cui-textarea stopwatch-input-width stopwatch-text-area\" placeholder=\"Description\" name=\"description\" rows={5} value={props.training.description} onChange={onFormChange}></textarea>\r\n                </div>\r\n            </div>\r\n            <div className=\"cui-padding-small-left\">\r\n                {/* <h3 className=\"cui-h3 cui-text-muted\">Rounds (total count: {props.training.rounds.length})</h3> */}\r\n                <ul className=\"cui-list\">\r\n                    {props.training && props.training.rounds.map((round: Round, index: number, arr: Round[]) => {\r\n                        return <li key={index} className=\"animation-fade-in\"><EditRoundListItem\r\n                            index={index}\r\n                            round={round}\r\n                            onEdit={onRoundEdit}\r\n                            onDelete={onRoundDelete}\r\n                            onMoveUp={onRoundUp}\r\n                            onMoveDown={onRoundDown}\r\n                            onClone={onRoundClone}\r\n                            isFirst={index === 0}\r\n                            isLast={index === arr.length - 1} />\r\n                        </li>\r\n                    })}\r\n                    <li>\r\n                        <div className=\"cui-flex-grid cui-center cui-child-width-1-2--m\">\r\n                            <div className=\"\">\r\n                                <button className=\"cui-button cui-default cui-icon cui-icon-margin cui-width-1-1\" cui-icon=\"plus\" onClick={() => {\r\n                                    onRoundEdit(null, -1);\r\n                                }}>Add Round</button>\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"cui-button cui-accent cui-icon cui-icon-margin cui-width-1-1\" cui-icon=\"bolt\" onClick={OnQuickRoundClick}>Quick Round</button>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        <EditRoundDialog index={state.currentIndex} round={state.currentRound} onSave={onRoundSave} currentCount={state.currentCount} definedActions={definedActions.actions} />\r\n        <QuickRoundDialog id=\"quick-round-create\" actions={definedActions.actions} onSave={onQuickRoundSave} />\r\n    </>);\r\n}\r\n\r\nexport default withRouter(EditTraining);","export function onDeleteTrainingDialog(name: string, onConfirm: () => void) {\r\n    window.$cui.alert(\"delete-training-dialog\", \"YesNoCancel\", {\r\n        title: \"Delete training\",\r\n        message: \"Do you really want to delete training: \" + name + \"?\",\r\n        onYes: onConfirm\r\n    })\r\n}\r\n\r\nexport function deleteRoundConfirmDialog(onOnfirm: () => void) {\r\n    window.$cui.alert(\"delete-round-dialog\", \"YesNoCancel\", {\r\n        title: \"Delete round\",\r\n        message: \"Do you really want to delete this round?\",\r\n        onYes: onOnfirm\r\n    })\r\n}\r\n\r\nexport function deleteActionConfirmDialog(name: string, onConfirm: () => void) {\r\n    window.$cui.alert(\"delete-action-dialog\", \"YesNoCancel\", {\r\n        title: \"Delete action\",\r\n        message: \"Do you really want to delete action: \" + name,\r\n        onYes: onConfirm\r\n    })\r\n}","interface KeepScreenToggle {\r\n    activate(): void;\r\n    release(): void;\r\n}\r\n\r\nexport class KeepAwakeToggle implements KeepScreenToggle {\r\n    #screen: any;\r\n    constructor() {\r\n        this.#screen = screen;\r\n    }\r\n\r\n    activate() {\r\n        this.#screen.keepAwake = true;\r\n    }\r\n\r\n    release(): void {\r\n        this.#screen.keepAwake = false;\r\n    }\r\n\r\n}\r\n\r\nexport class WakeLockScreen implements KeepScreenToggle {\r\n    wakeLockRequest: any;\r\n\r\n    activate() {\r\n        let nav = navigator as any;\r\n        nav.wakeLock.request('screen').then((wakelock: any) => {\r\n            this.wakeLockRequest = wakelock;\r\n            console.log(\"Wakelock activated\");\r\n        })\r\n    }\r\n\r\n    release() {\r\n        if (this.wakeLockRequest) {\r\n            this.wakeLockRequest.release();\r\n            this.wakeLockRequest = null;\r\n            console.log(\"Wakelock deactivated\");\r\n        }\r\n    }\r\n}\r\n\r\nexport class LoopLockScreen implements KeepScreenToggle {\r\n    element: Element | undefined;\r\n\r\n    constructor() {\r\n        this.element = undefined;\r\n    }\r\n\r\n    activate(): void {\r\n        if (this.element) {\r\n            return;\r\n        }\r\n        this.element = this.createElement(\"/static/video/Screen.mp4\");\r\n        document.body.appendChild(this.element);\r\n    }\r\n\r\n    release(): void {\r\n        if (!this.element) {\r\n            return;\r\n        }\r\n        this.element.remove();\r\n        this.element = undefined;\r\n    }\r\n\r\n    private createElement(src: string): Element {\r\n        let newEl = document.createElement(\"video\");\r\n        newEl.autoplay = true;\r\n        newEl.muted = true;\r\n        newEl.loop = true;\r\n        newEl.src = src;\r\n        newEl.classList.add('loop-screen')\r\n        newEl.textContent = \"Not Supported\";\r\n        return newEl;\r\n    }\r\n\r\n}\r\n\r\nexport class KeepScreenAwakeFeature {\r\n    #toggle: KeepScreenToggle;\r\n\r\n    constructor() {\r\n        this.#toggle = this.getToggle();\r\n    }\r\n    activate() {\r\n        this.#toggle.activate();\r\n    }\r\n    release() {\r\n        this.#toggle.release();\r\n    }\r\n    private getToggle() {\r\n        if ('keepAwake' in screen) {\r\n            return new KeepAwakeToggle();\r\n        } else {\r\n            return new LoopLockScreen();\r\n            //return new WakeLockScreen();\r\n        }\r\n    }\r\n}","export const StopWatchStateOptions: any = {\r\n    RUNNING: \"RUNNING\",\r\n    STOPPED: \"STOPPED\",\r\n    PAUSED: \"PAUSED\",\r\n}\r\n\r\nexport type StopWatchPerformState = \"RUNNING\" | 'PAUSED' | \"STOPPED\";\r\n\r\nexport interface StopwatchCallback {\r\n    (current: number, total: number, stopWatch: StopWatch): boolean;\r\n}\r\n\r\nexport interface IStopWatch {\r\n    start(): boolean;\r\n    stop(): boolean;\r\n    pause(): boolean;\r\n    resume(): boolean;\r\n    finish(): void;\r\n    getState(): StopWatchPerformState;\r\n}\r\n\r\nexport class StopWatch implements IStopWatch {\r\n    #callback: StopwatchCallback;\r\n    #current: number;\r\n    #total: number;\r\n    #isReset: boolean;\r\n    #state: StopWatchPerformState;\r\n    #id: any;\r\n    constructor() {\r\n        this.#current = 0;\r\n        this.#total = 0;\r\n        this.#isReset = false;\r\n        this.#state = StopWatchStateOptions.STOPPED;\r\n        this.#id = undefined;\r\n    }\r\n\r\n    onTick(callback: StopwatchCallback) {\r\n        this.#callback = callback;\r\n    }\r\n\r\n    tick() {\r\n        this.#id = setTimeout(() => {\r\n            try {\r\n                if (this.#state === StopWatchStateOptions.RUNNING && this.#callback && this.#callback(this.#current, this.#total, this)) {\r\n                    if (this.#isReset) {\r\n                        this.#current = 0;\r\n                        this.#isReset = false;\r\n                    } else {\r\n                        this.#current += 1;\r\n                        this.#total += 1;\r\n                    }\r\n                    this.tick();\r\n                } else if (this.#state !== StopWatchStateOptions.PAUSED) {\r\n                    this.stop();\r\n                }\r\n            } catch (e) {\r\n                console.error(\"An error occured on stopwatch tick\")\r\n                console.error(e)\r\n                this.stop();\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    reset() {\r\n        this.#isReset = true;\r\n    }\r\n\r\n    start(): boolean {\r\n        if (this.#state === StopWatchStateOptions.RUNNING) {\r\n            return false;\r\n        }\r\n        this.#current = 0;\r\n        this.#state = StopWatchStateOptions.RUNNING;\r\n        this.tick();\r\n        return true;\r\n    }\r\n\r\n    stop(): boolean {\r\n        if (this.#state === StopWatchStateOptions.RUNNING) {\r\n            this.finish();\r\n            this.#state = StopWatchStateOptions.STOPPED;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    pause(): boolean {\r\n        if (this.#state === StopWatchStateOptions.RUNNING) {\r\n            this.#state = StopWatchStateOptions.PAUSED;\r\n            return true\r\n        }\r\n        return false;\r\n    }\r\n\r\n    resume() {\r\n        if (this.#state === StopWatchStateOptions.PAUSED) {\r\n            this.#state = StopWatchStateOptions.RUNNING;\r\n            this.tick();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    finish(): void {\r\n        if (this.#id) {\r\n            clearTimeout(this.#id);\r\n            this.#id = undefined;\r\n        }\r\n        this.#current = 0;\r\n        this.#total = 0;\r\n    }\r\n    getState() {\r\n        return this.#state;\r\n    }\r\n}","import { Settings } from \"../../core/models\";\r\nimport { ISettingsService } from \"../../core/services/interfaces\";\r\n\r\n\r\nexport const SETTINGS_FLOW_ACTIONS = {\r\n    GET_DARK_MODE: \"GET_DARK_MODE\",\r\n    SET_DARK_MODE: \"SET_DARK_MODE\",\r\n    GET_SOUND_ENABLED: \"GET_SOUND_ENABLED\",\r\n    SET_SOUND_ENABLED: \"SET_SOUND_ENABLED\",\r\n    SET_SETTINGS: \"SET_SETTINGS\",\r\n    GET_SETTINGS: \"GET_SETTINGS\",\r\n    GET_IS_WELCOME: \"GET_IS_WELCOME\",\r\n    SET_IS_WELCOME: \"SET_IS_WELCOME\",\r\n    GET_SIMPLE_VIEW: \"GET_SIMPLE_VIEW\",\r\n    CLEAR_SETTINGS: \"CLEAR_SETTINGS\"\r\n}\r\n\r\nexport type SettingsFlowInput = Settings | boolean;\r\nexport type SettingsFlowOutput = boolean | void | Settings;\r\n\r\nexport class SettingsFlow {\r\n    #service: ISettingsService;\r\n    constructor(service: ISettingsService) {\r\n        this.#service = service;\r\n    }\r\n    getActions() {\r\n        return {\r\n            [SETTINGS_FLOW_ACTIONS.GET_SOUND_ENABLED]: () => {\r\n                return this.#service.isSoundEnabled();\r\n            },\r\n            [SETTINGS_FLOW_ACTIONS.SET_SOUND_ENABLED]: (flag: boolean) => {\r\n                this.#service.setSoundEnabled(flag);\r\n            },\r\n            [SETTINGS_FLOW_ACTIONS.GET_DARK_MODE]: () => {\r\n                return this.#service.isDarkMode();\r\n            },\r\n            [SETTINGS_FLOW_ACTIONS.SET_DARK_MODE]: (flag: boolean) => {\r\n                this.#service.setDarkMode(flag);\r\n            },\r\n            [SETTINGS_FLOW_ACTIONS.SET_SETTINGS]: (value: Settings) => {\r\n                this.#service.setSettings(value);\r\n            },\r\n            [SETTINGS_FLOW_ACTIONS.GET_SETTINGS]: () => {\r\n                return this.#service.getSettings();\r\n            },\r\n            [SETTINGS_FLOW_ACTIONS.GET_IS_WELCOME]: () => {\r\n                return this.#service.isWelcomeSet();\r\n            },\r\n            [SETTINGS_FLOW_ACTIONS.GET_SIMPLE_VIEW]: () => {\r\n                let sett = this.#service.getSettings();\r\n                return sett.simpleView;\r\n            },\r\n            [SETTINGS_FLOW_ACTIONS.SET_IS_WELCOME]: (flag: boolean) => {\r\n                this.#service.setIsWelcome(flag);\r\n            },\r\n            [SETTINGS_FLOW_ACTIONS.CLEAR_SETTINGS]: () => {\r\n                this.#service.clearSettings();\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n}","import * as React from 'react'\r\nimport { DefaultSettings } from '../../core/statics';\r\nimport { Settings } from '../../core/models';\r\nimport { SETTINGS_FLOW_ACTIONS } from '../../app/flow/settings';\r\nimport { setDarkMode } from '../../core/helpers';\r\n\r\nexport function useSettings(): [Settings, (settings: Settings) => void] {\r\n    const [settings, setSettings] = React.useState({\r\n        ...DefaultSettings\r\n    })\r\n\r\n    function onSaveSettings() {\r\n        // Obtain settings from store\r\n        window.$settingsFlow.perform(SETTINGS_FLOW_ACTIONS.GET_SETTINGS);\r\n    }\r\n\r\n    function onGetSettings(settings: Settings) {\r\n        setSettings(settings);\r\n        setDarkMode(settings.darkMode);\r\n    }\r\n\r\n    function updateSettings(settings: Settings) {\r\n        window.$settingsFlow.perform(SETTINGS_FLOW_ACTIONS.SET_SETTINGS, settings);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        const settingsSub = window.$settingsFlow.subscribe(SETTINGS_FLOW_ACTIONS.GET_SETTINGS, { finish: onGetSettings })\r\n        const settingsUpdateSub = window.$settingsFlow.subscribe(SETTINGS_FLOW_ACTIONS.SET_SETTINGS, { finish: onSaveSettings })\r\n        onSaveSettings();\r\n        return () => {\r\n            window.$settingsFlow.unsubscribe(SETTINGS_FLOW_ACTIONS.GET_SETTINGS, settingsSub.id);\r\n            window.$settingsFlow.unsubscribe(SETTINGS_FLOW_ACTIONS.SET_SETTINGS, settingsUpdateSub.id);\r\n        }\r\n    }, [settings.darkMode, settings.soundEnabled])\r\n\r\n    return [settings, updateSettings];\r\n}\r\n","import { is } from 'bpd-toolkit/dist/esm/index'\r\nimport * as React from 'react'\r\n\r\nexport function useResize(element: Element | Window, callback: (element: Element | Window) => void) {\r\n    function onResize() {\r\n        if (callback && element) {\r\n            callback(element)\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (element) {\r\n            window.addEventListener('resize', onResize)\r\n        }\r\n\r\n        return () => {\r\n            if (element) {\r\n                window.removeEventListener('resize', onResize)\r\n            }\r\n\r\n        }\r\n    }, [element])\r\n}\r\n\r\n\r\nexport function useIsFullscreen(element: Element) {\r\n    const resizeEl = useResize(element, onResize)\r\n    const [isFullscreen, setIsFullscreen] = React.useState(isElementFullscreen(element));\r\n\r\n    function onResize(element: Element) {\r\n        if (is(element))\r\n            setIsFullscreen(isElementFullscreen(element))\r\n    }\r\n\r\n    function isElementFullscreen(element: Element) {\r\n        if (!is(element)) {\r\n            return false;\r\n        }\r\n        return element && element.clientHeight >= ((screen.availHeight || screen.height) - 30) && element.clientWidth >= ((screen.availWidth || screen.width) - 30)\r\n    }\r\n\r\n    React.useEffect(() => { }, [isFullscreen])\r\n    return isFullscreen\r\n}\r\n","import * as React from 'react'\r\nimport { createArray } from '../../../core/helpers';\r\n\r\nexport interface TrainingSoundPlayerProps {\r\n    children?: JSX.Element | JSX.Element[];\r\n}\r\n\r\nexport function TrainingSoundPlayer(props: TrainingSoundPlayerProps) {\r\n    const countdownSound = React.useRef(null);\r\n    const exerciseSound = React.useRef(null);\r\n    const warmupSound = React.useRef(null);\r\n    const breakSound = React.useRef(null);\r\n    const cooldownSound = React.useRef(null);\r\n    const endSound = React.useRef(null);\r\n\r\n    function playSound(type: string) {\r\n        let element = undefined;\r\n        switch (type) {\r\n            case \"countdown\":\r\n                element = countdownSound.current;\r\n                break;\r\n            case \"end\":\r\n                element = endSound.current;\r\n                break;\r\n            case \"exercise\":\r\n                element = exerciseSound.current;\r\n                break;\r\n            case \"warmup\":\r\n                element = warmupSound.current;\r\n                break;\r\n            case \"break\":\r\n                element = breakSound.current;\r\n                break;\r\n            case \"cooldown\":\r\n                element = cooldownSound.current;\r\n                break;\r\n\r\n        }\r\n        if (element) {\r\n            element.currentTime = 0;\r\n            element.play();\r\n        }\r\n    }\r\n\r\n    return (<>\r\n        {\r\n            props.children && createArray(props.children).map(child => {\r\n                return React.cloneElement(child, { playSound: playSound, ...child.props })\r\n            })\r\n        }\r\n        <audio ref={countdownSound} id=\"stopwatch-countdown\" src=\"/static/audio/stopwatch_countdown.mp3\" />\r\n        <audio ref={exerciseSound} id=\"stopwatch-exercise\" src=\"/static/audio/stopwatch_exercise.mp3\" />\r\n        <audio ref={warmupSound} id=\"stopwatch-warmup\" src=\"/static/audio/stopwatch_warmup.mp3\" />\r\n        <audio ref={breakSound} id=\"stopwatch-break\" src=\"/static/audio/stopwatch_break.mp3\" />\r\n        <audio ref={cooldownSound} id=\"stopwatch-cooldown\" src=\"/static/audio/stopwatch_cooldown.mp3\" />\r\n        <audio ref={endSound} id=\"stopwatch-cooldown\" src=\"/static/audio/stopwatch_end.mp3\" />\r\n    </>);\r\n}\r\n\r\n\r\nexport interface TrainingSoundPlayerItemProps {\r\n    playSound?: (value: string) => void;\r\n}","import * as React from 'react'\r\nimport { IconBtnLabel } from './IconBtnLabel'\r\nexport interface IconButtonWithLabel {\r\n    label: string;\r\n    icon: string;\r\n    onClick?: () => void;\r\n    modifiers?: string;\r\n    labelModifier?: string;\r\n}\r\n\r\nexport function IconButtonWithLabel(props: IconButtonWithLabel) {\r\n    let classes = \"cui-button cui-icon\";\r\n    if (props.modifiers) {\r\n        classes += \" \" + props.modifiers;\r\n    }\r\n    return (<button className={classes} onClick={props.onClick} cui-icon={props.icon}><IconBtnLabel label={props.label} modifiers={props.labelModifier} /></button>);\r\n}\r\n\r\nexport interface IconBtnProps {\r\n    icon: string;\r\n    onClick?: () => void;\r\n    modifiers?: string;\r\n}\r\n\r\nexport function IconButton(props: IconBtnProps) {\r\n    let classes = \"cui-icon-button cui-icon\";\r\n    if (props.modifiers) {\r\n        classes += \" \" + props.modifiers;\r\n    }\r\n    return (<button className={classes} onClick={props.onClick} cui-icon={props.icon}></button>);\r\n}\r\n","import * as React from \"react\";\r\nimport { StopWatchPerformState, StopWatchStateOptions } from \"../../../api/stopwatch/stopwatch\";\r\nimport { IconButton } from \"../common/IconButton\";\r\n\r\ninterface CurrentStateControls {\r\n    startBtnCls: string;\r\n    startBtnText: string;\r\n    isPauseVisible: boolean;\r\n    pauseBtnText: string;\r\n    startBtnIcon: string;\r\n    pauseBtnIcon: string;\r\n}\r\n\r\n\r\nexport interface PerformerButtonBarProps {\r\n    onFullScreen: () => void;\r\n    onMute: () => void;\r\n    onPauseResume: () => void;\r\n    onStartStop: () => void;\r\n    playState: StopWatchPerformState;\r\n    soundIcon: string;\r\n    fullscreenIcon: string;\r\n}\r\n\r\nexport function PerformerButtonBar(props: PerformerButtonBarProps) {\r\n    const [controls, setControls] = React.useState<CurrentStateControls>({\r\n        startBtnText: \"Start\",\r\n        startBtnCls: \"cui-accent\",\r\n        pauseBtnText: \"Pause\",\r\n        isPauseVisible: false,\r\n        startBtnIcon: \"media_play\",\r\n        pauseBtnIcon: \"media_pause\"\r\n    })\r\n\r\n\r\n    function updatePlayStateControls(state: StopWatchPerformState) {\r\n        switch (state) {\r\n            case StopWatchStateOptions.RUNNING:\r\n                setControls({\r\n                    startBtnCls: \"cui-error\",\r\n                    startBtnIcon: \"media_stop\",\r\n                    startBtnText: \"Stop\",\r\n                    isPauseVisible: true,\r\n                    pauseBtnIcon: \"media_pause\",\r\n                    pauseBtnText: \"Pause\"\r\n                })\r\n                break;\r\n            case StopWatchStateOptions.PAUSED:\r\n                setControls({\r\n                    startBtnCls: \"cui-error\",\r\n                    startBtnIcon: \"media_stop\",\r\n                    startBtnText: \"Stop\",\r\n                    isPauseVisible: true,\r\n                    pauseBtnIcon: \"media_play\",\r\n                    pauseBtnText: \"Resume\"\r\n                })\r\n                break;\r\n            case StopWatchStateOptions.STOPPED:\r\n                setControls({\r\n                    startBtnCls: \"cui-accent\",\r\n                    startBtnIcon: \"media_play\",\r\n                    startBtnText: \"Start\",\r\n                    isPauseVisible: false,\r\n                    pauseBtnIcon: \"media_pause\",\r\n                    pauseBtnText: \"Pause\"\r\n                })\r\n                break;\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        updatePlayStateControls(props.playState);\r\n        return () => { }\r\n    }, [props.playState])\r\n\r\n    return (<div className=\"training-control-btns\">\r\n        <a className=\"cui-icon-button cui-default cui-margin-small\" cui-icon={props.soundIcon} onClick={props.onMute}></a>\r\n        { controls.isPauseVisible && <IconButton icon={controls.pauseBtnIcon} onClick={props.onPauseResume} modifiers=\"cui-margin-small cui-large cui-default\" />}\r\n        <IconButton icon={controls.startBtnIcon} onClick={props.onStartStop} modifiers={\"cui-large cui-fill \" + controls.startBtnCls} />\r\n        <a className=\"cui-icon-button cui-default cui-margin-small\" cui-icon={props.fullscreenIcon} onClick={props.onFullScreen}></a>\r\n    </div >);\r\n}","import * as React from 'react'\r\nimport { getTextClassByActionType } from '../../../../core/helpers';\r\nimport { CountDownTimerProps } from './models';\r\n\r\n\r\nexport function CountDownTimer(props: CountDownTimerProps) {\r\n\r\n    return (\r\n        <div className=\"rounded-countdown-timer\">\r\n            <p className=\"cui-margin-remove round-name\">{props.watchState.round?.name}</p>\r\n            <span className=\"cui-block cui-text-muted cui-text-small round-count\">Round {props.watchState.roundIdx + 1}/{props.watchState.roundTotal}</span>\r\n            <span className=\"cui-svg total-circle-progress\" cui-circle-progress={props.watchState.trainingProgress}>\r\n                <div className=\"\">\r\n                    <span className=\"cui-svg current-circle-progress\" cui-circle-progress={props.watchState.roundProgress}>\r\n                        <div>\r\n                            <span className=\"cui-svg countdown-circle-progress\" cui-circle-progress={props.watchState.progress}>\r\n                                <div>\r\n                                    <span className=\"cui-block cui-text-small\">{props.watchState.actionIdx + 1}</span>\r\n                                    <h1 className={\"cui-h1 cui-margin-remove \" + props.watchState.timerCls}>{props.watchState.timer}</h1>\r\n                                </div>\r\n                            </span>\r\n                        </div>\r\n                    </span>\r\n                </div>\r\n            </span>\r\n        </div>);\r\n}\r\n\r\nexport function NewCountDownTimer(props: CountDownTimerProps) {\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"cui-flex-center\">\r\n                <progress className=\"cui-progress cui-small cui-success width-100\" value={props.watchState.trainingProgress} max=\"100\"></progress>\r\n            </div>\r\n            {/* <span className=\"cui-block cui-text-small\">{props.actionIdx + 1}</span> */}\r\n            <h1 className={\"cui-h1 countdown-timer-size \" + props.watchState.timerCls}>{props.watchState.timer}</h1>\r\n            <div className=\"cui-flex-center\">\r\n                <progress className=\"cui-progress cui-small width-100\" value={props.watchState.roundProgress} max=\"100\"></progress>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function SimpleCountDownTimer(props: CountDownTimerProps) {\r\n    return (\r\n        <div className=\"simple-countdown-timer\">\r\n            <p className=\"cui-margin-remove round-name\">{props.watchState.round?.name}</p>\r\n            <span className=\"cui-block cui-text-muted cui-text-small round-count\">Round {props.watchState.roundIdx + 1}/{props.watchState.roundTotal}</span>\r\n            <h1 className={\"cui-h1 main-timer \" + props.watchState.timerCls}>{props.watchState.timer}</h1>\r\n            <h3 className={\"cui-h2 cui-margin-remove action-name \" + getTextClassByActionType(props.watchState.action?.type)}>{props.watchState.action?.name}</h3>\r\n            <span className=\"cui-block cui-text-small action-index\">Action {props.watchState.actionIdx + 1}/{props.watchState.actionTotal}</span>\r\n        </div>\r\n    );\r\n}\r\n","import * as React from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport { closeFullscreen, is, openFullscreen } from '../../../../node_modules/bpd-toolkit/dist/esm/index';\r\nimport { KeepScreenAwakeFeature } from '../../../api/screen/screen';\r\nimport { StopWatch, StopWatchPerformState, StopWatchStateOptions } from '../../../api/stopwatch/stopwatch';\r\nimport { calcDisplayTimer, calculateDuration, calculateProgress, getBgClassByType, getTotalDuration, showMessage, getTextClassByActionType, setPageTitle, setNavbarTitle } from '../../../core/helpers';\r\nimport { Round, StopwatchAction, Training } from '../../../core/models';\r\nimport { CompleteTrainingValidator } from '../../../core/validators';\r\nimport { NotFound } from '../common/NotFound';\r\nimport { CountDownTimer, SimpleCountDownTimer } from './countdown/CountdownTimers';\r\nimport { useSettings } from '../../../ui/hooks/settings';\r\nimport { useIsFullscreen } from '../../../ui/hooks/useResize';\r\nimport { useIsLoading } from '../../../ui/hooks/loading';\r\nimport { TrainingSoundPlayer, TrainingSoundPlayerItemProps } from './TrainingSoundPlayer';\r\nimport { useStopwatch2 } from './hook';\r\nimport { PerformerButtonBar } from './PerformButtonBar';\r\nimport { getCountDownTimer } from './countdown/functions';\r\nimport { Loading } from '../common/Loading';\r\n;\r\n\r\ninterface TimeStateData {\r\n    time: number;\r\n    progress: number;\r\n    ct?: number;\r\n    total: number;\r\n}\r\n\r\ninterface PerfromTrainingState {\r\n    training: Training;\r\n}\r\n\r\nexport interface StopwatchState {\r\n    timer: string;\r\n    state: StopWatchPerformState;\r\n    timerCls: string;\r\n    progress: number;\r\n    roundProgress: number;\r\n    trainingProgress: number;\r\n    roundIdx: number;\r\n    roundTotal: number;\r\n    actionIdx: number;\r\n    actionTotal: number;\r\n    round: Round,\r\n    action: StopwatchAction,\r\n    roundDuration: number,\r\n    totalDuration: number\r\n}\r\n\r\nexport function PerfromTraining() {\r\n    const [state, setState] = React.useState<PerfromTrainingState>({\r\n        training: undefined\r\n    })\r\n\r\n    const [isLoading, setIsLoading] = useIsLoading(false);\r\n    const [notFound, setNotFound] = React.useState(false);\r\n\r\n    const { id } = useParams();\r\n\r\n    function onGetTraining(training: Training) {\r\n        if (!training) {\r\n            setNotFound(true);\r\n        }\r\n        let validation = new CompleteTrainingValidator().validate(training);\r\n        if (!validation.status) {\r\n            showMessage(\"Incorrect training\", `Training is not correct: ${validation.errors.join(\", \")}`)\r\n            return;\r\n        }\r\n        setIsLoading(false);\r\n        setState({\r\n            training: training\r\n        })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setPageTitle(\"Perform training\");\r\n\r\n        const getTrainingSubscription = window.$flow.subscribe(\"GET_TRAINING\", { finish: onGetTraining })\r\n\r\n        if (id > -1) {\r\n            setIsLoading(true);\r\n            window.$flow.perform(\"GET_TRAINING\", id)\r\n        }\r\n        return () => {\r\n            window.$flow.unsubscribe(\"GET_TRAINING\", getTrainingSubscription.id)\r\n        }\r\n    }, [id])\r\n\r\n    if (isLoading) {\r\n        return <Loading />;\r\n    } else if (notFound) {\r\n        return <NotFound message=\"We couldn't find training\" classes=\"cui-height-1-1 cui-flex-center\" />;\r\n    } else if (!state.training) {\r\n        return <span></span>;\r\n    }\r\n    return (<PerformTrainingElement training={state.training} />);\r\n}\r\n\r\n\r\nexport interface PerformTrainingElementProps {\r\n    training: Training;\r\n}\r\n\r\nexport function PerformTrainingElement(props: PerformTrainingElementProps) {\r\n\r\n    const [errorMessage, setErrorMessage] = React.useState(\"\");\r\n\r\n    function callError(message: string) {\r\n        setErrorMessage(message);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setPageTitle(\"Perform training\");\r\n        const wakeLock = new KeepScreenAwakeFeature();\r\n        if (props.training) {\r\n            setPageTitle(props.training.name);\r\n            setNavbarTitle(props.training.name);\r\n            try {\r\n                wakeLock.activate();\r\n            } catch (e) {\r\n                setErrorMessage(\"We could not activate feature to keep your device's screen awake during training performance\")\r\n            }\r\n\r\n        }\r\n\r\n        return () => {\r\n            wakeLock.release();\r\n        }\r\n    }, [props.training])\r\n    return (<>\r\n        <TrainingSoundPlayer>\r\n            <TrainingPerformer key={props.training?.id} callError={callError} training={props.training} />\r\n        </TrainingSoundPlayer>\r\n        {\r\n            is(errorMessage) &&\r\n            <div className=\"cui-position-float cui-position-bottom cui-position-right app-float-bottom cui-margin-right\"><span className=\"cui-icon cui-error cui-tooltip\" cui-icon=\"ban\" cui-tooltip={errorMessage}></span></div>\r\n        }\r\n    </>\r\n    );\r\n}\r\n\r\nexport interface TrainingPerformerProps {\r\n    callError: (error: string) => void;\r\n    training: Training;\r\n}\r\n\r\nexport function TrainingPerformer(props: TrainingPerformerProps & TrainingSoundPlayerItemProps) {\r\n\r\n    const [stopwatch, setOnTick] = useStopwatch2();\r\n\r\n    const [watchState, setWatchState] = React.useState<StopwatchState>({\r\n        timer: \"-\",\r\n        state: StopWatchStateOptions.STOPPED,\r\n        timerCls: \"\",\r\n        progress: 100,\r\n        roundProgress: 100,\r\n        trainingProgress: 100,\r\n        roundIdx: 0,\r\n        roundTotal: 0,\r\n        actionIdx: 0,\r\n        actionTotal: 0,\r\n        roundDuration: 0,\r\n        totalDuration: 0,\r\n        action: undefined,\r\n        round: undefined,\r\n    })\r\n\r\n    const [settings, setSettings] = useSettings();\r\n\r\n\r\n    const stopWatchRef = React.useRef(stopwatch);\r\n    stopWatchRef.current = stopwatch;\r\n    const watchStateRef = React.useRef(watchState);\r\n    watchStateRef.current = watchState;\r\n    const settingsRef = React.useRef(settings);\r\n    settingsRef.current = settings;\r\n\r\n    const mainViewRef = React.useRef(null);\r\n\r\n    const isFullscreen = useIsFullscreen(mainViewRef.current);\r\n\r\n    function setDefaultWatchState(training: Training) {\r\n        let round = training.rounds[0];\r\n        let action = round.actions[0];\r\n        setWatchState({\r\n            ...watchState,\r\n            round: round,\r\n            roundIdx: 0,\r\n            roundTotal: training.rounds.length,\r\n            roundDuration: calculateDuration(round.actions),\r\n            actionIdx: 0,\r\n            action: action,\r\n            actionTotal: round.actions.length,\r\n            totalDuration: getTotalDuration(training)[1]\r\n        })\r\n    }\r\n\r\n    function setNextAction(): boolean {\r\n        let nextActionIdx = watchStateRef.current.actionIdx + 1;\r\n        if (watchStateRef.current.round.actions.length > nextActionIdx) {\r\n            let newAction = watchStateRef.current.round.actions[nextActionIdx]\r\n            setWatchState({\r\n                ...watchStateRef.current,\r\n                actionIdx: nextActionIdx,\r\n                action: newAction,\r\n            })\r\n            return true;\r\n        }\r\n        let nextRoundIdx = watchStateRef.current.roundIdx + 1;\r\n        if (props.training.rounds.length > nextRoundIdx) {\r\n            let newRound = props.training.rounds[nextRoundIdx];\r\n            let newAction = newRound.actions[0];\r\n\r\n            setWatchState({\r\n                ...watchStateRef.current,\r\n                actionIdx: 0,\r\n                action: newAction,\r\n                actionTotal: newRound.actions.length,\r\n                round: newRound,\r\n                roundIdx: nextRoundIdx,\r\n                roundDuration: calculateDuration(newRound.actions),\r\n            })\r\n            return true;\r\n        }\r\n        setDefaultWatchState(props.training);\r\n        return false;\r\n    }\r\n\r\n    function onStopwatchTick(currentTime: number, total: number, stopwatch: StopWatch): boolean {\r\n        let actionDuration = parseInt(watchStateRef.current.action.duration)//parseInt(currentRef.current.action.duration)\r\n        let ct = actionDuration - currentTime;\r\n        let progress = calculateProgress(currentTime, actionDuration)\r\n        if (currentTime === 0) {\r\n            playSound(watchStateRef.current.action.type);\r\n        }\r\n        if (ct > 0) {\r\n            // Normal tick\r\n            updateStopWatchState(stopwatch.getState(), {\r\n                time: ct,\r\n                progress: 100 - progress,\r\n                ct: currentTime,\r\n                total: total\r\n            })\r\n            // Start round end countdown\r\n            if (ct <= 2) {\r\n                playSound(\"countdown\");\r\n            }\r\n            return true;\r\n        } else {\r\n            // Next action\r\n            if (!setNextAction()) {\r\n                // End of training\r\n                playSound(\"end\");\r\n                updateStopWatchState(StopWatchStateOptions.STOPPED, {\r\n                    time: 0, progress: 100, ct: 0, total: 0\r\n                })\r\n                return false;\r\n            }\r\n            playSound(\"countdown\");\r\n            updateStopWatchState(StopWatchStateOptions.RUNNING, { time: 0, progress: 0, ct: ct, total: total })\r\n            stopWatchRef.current.reset();\r\n            return true;\r\n        }\r\n    }\r\n\r\n    function playSound(name: string) {\r\n        if (!settingsRef.current.soundEnabled || !props.playSound || !is(name)) {\r\n            return\r\n        }\r\n\r\n        props.playSound(name);\r\n    }\r\n\r\n    function onStartClick() {\r\n        if (watchState.state === StopWatchStateOptions.STOPPED && stopwatch.start()) {\r\n            updateStopWatchState(StopWatchStateOptions.RUNNING);\r\n        } else if (watchState.state !== StopWatchStateOptions.STOPPED && stopwatch.stop()) {\r\n            setDefaultWatchState(props.training);\r\n            updateStopWatchState(StopWatchStateOptions.STOPPED, { time: 0, progress: 100, ct: 0, total: 0 });\r\n\r\n        }\r\n    }\r\n\r\n    function onPauseClick() {\r\n        if (watchState.state === StopWatchStateOptions.RUNNING && stopwatch.pause()) {\r\n            updateStopWatchState(StopWatchStateOptions.PAUSED);\r\n        } else if (watchState.state === StopWatchStateOptions.PAUSED && stopwatch && stopwatch.resume()) {\r\n            updateStopWatchState(StopWatchStateOptions.RUNNING);\r\n        }\r\n    }\r\n\r\n    function updateStopWatchState(watchstate: StopWatchPerformState, timeData?: TimeStateData) {\r\n        if (!is(timeData) || timeData.time < 0) {\r\n            setWatchState({\r\n                ...watchStateRef.current,\r\n                state: watchstate,\r\n            })\r\n        } else {\r\n            let roundProgress = calculateRoundProgress(timeData.ct);\r\n            let trainginProgress = calculateTrainingProgress(timeData.total);\r\n            setWatchState({\r\n                ...watchStateRef.current,\r\n                timer: calcDisplayTimer(timeData.time),\r\n                timerCls: getTimerCls(timeData.time, watchstate),\r\n                state: watchstate,\r\n                progress: timeData.progress,\r\n                roundProgress: roundProgress,\r\n                trainingProgress: trainginProgress\r\n            })\r\n        }\r\n    }\r\n\r\n    function calculateRoundCurrentTime(ct: number) {\r\n        return watchStateRef.current.round.actions.reduce<number>((result: number, act: StopwatchAction, idx: number) => {\r\n            if (idx < watchStateRef.current.actionIdx) {\r\n                return result + parseInt(act.duration);\r\n            }\r\n            return result;\r\n        }, 0) + ct;\r\n    }\r\n\r\n    function calculateRoundProgress(ct: number) {\r\n        return 100 - calculateProgress(calculateRoundCurrentTime(ct), watchStateRef.current.roundDuration);\r\n    }\r\n\r\n    function calculateTrainingProgress(ct: number) {\r\n        return 100 - calculateProgress(ct, watchStateRef.current.totalDuration);\r\n    }\r\n\r\n    function getTimerCls(timer: number, state: StopWatchPerformState): string {\r\n        return state === StopWatchStateOptions.RUNNING && timer >= 0 && timer < 3 ? \"cui-text-warning timer-blink-animation\" : \"\";\r\n    }\r\n\r\n    function getBackgroundClass(action: StopwatchAction) {\r\n        return !is(action) ? \"\" : getBgClassByType(action.type);\r\n    }\r\n\r\n    function onFullScreen() {\r\n        if (!mainViewRef.current) {\r\n            return;\r\n        }\r\n        if (isFullscreen) {\r\n            closeFullscreen();\r\n        }\r\n        openFullscreen(mainViewRef.current);\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n\r\n        if (props.training) {\r\n            setDefaultWatchState(props.training);\r\n            setOnTick(onStopwatchTick);\r\n        }\r\n\r\n        return () => {\r\n            if (stopWatchRef.current) {\r\n                stopWatchRef.current.stop();\r\n            }\r\n        }\r\n    }, [props.training, settings.soundEnabled])\r\n\r\n    return (<div className=\"stopwatch-layout-content cui-background-default\" ref={mainViewRef}>\r\n        <div className={\"cui-height-1-1 cui-overflow-y-auto cui-flex cui-center cui-middle \" + getBackgroundClass(watchState.action)} >\r\n            <div className=\"stopwatch-content-width cui-text-center cui-flex-center animation-fade-in\">\r\n                <div>\r\n                    {getCountDownTimer(settings.countdownView, watchState)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <PerformerButtonBar playState={watchState.state}\r\n            soundIcon={settings.soundEnabled ? \"speaker\" : \"volume_muted\"}\r\n            fullscreenIcon={isFullscreen ? \"shrink\" : \"expand\"}\r\n            onFullScreen={onFullScreen}\r\n            onStartStop={onStartClick}\r\n            onPauseResume={onPauseClick}\r\n            onMute={() => {\r\n                setSettings({\r\n                    ...settings,\r\n                    soundEnabled: !settings.soundEnabled\r\n                })\r\n            }}\r\n        />\r\n    </div>);\r\n}\r\n\r\n","import * as React from 'react'\r\n\r\nexport function useIsLoading(init: boolean): [boolean, (val: boolean) => void] {\r\n    const loading = React.useRef(init);\r\n\r\n    function setIsLoading(flag: boolean) {\r\n        console.log(\"Flag: \" + flag + \", Loading: \" + loading)\r\n        if (loading.current != flag) {\r\n            loading.current = flag;\r\n        }\r\n    }\r\n    React.useEffect(() => {\r\n        loading.current = init;\r\n    }, [])\r\n    return [loading.current, setIsLoading];\r\n}\r\n","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\n// import { Training } from \"../../../core/models\";\r\nimport { StopWatch, StopwatchCallback, StopWatchStateOptions } from \"../../../api/stopwatch/stopwatch\";\r\n// import { StopwatchState } from \"./PerformTraining\";\r\n\r\n// export function useStopwatch(callback: StopwatchCallback): StopWatch {\r\n//     const [stopwatch, setStopwatch] = useState(new StopWatch());\r\n\r\n//     React.useEffect(() => {\r\n//         console.log(\"Stopwatch hook init\")\r\n\r\n//         let stop = new StopWatch();\r\n//         stop.onTick(callback);\r\n//         return () => {\r\n//             console.log(\"Stopwatch hook end\")\r\n//         }\r\n//     }, [])\r\n//     return stopwatch;\r\n// }\r\n\r\nexport function useStopwatch2(): [StopWatch, (callback: StopwatchCallback) => void] {\r\n    const [stopwatch, setStopwatch] = React.useState(new StopWatch());\r\n\r\n    React.useEffect(() => {\r\n        console.log(\"Stopwatch hook init\")\r\n        return () => {\r\n            console.log(\"Stopwatch hook end\")\r\n        }\r\n    }, [])\r\n    return [stopwatch, (callback: StopwatchCallback) => {\r\n        stopwatch.onTick(callback);\r\n        setStopwatch(stopwatch);\r\n    }];\r\n}\r\n\r\n// export interface PerformTrainingHookObject {\r\n//     current: StopwatchState,\r\n//     pause: () => void;\r\n//     resume: () => void;\r\n//     start: () => void;\r\n//     stop: () => void;\r\n// }\r\n\r\n\r\n// export function usePerformTraining(training: Training): PerformTrainingHookObject {\r\n//     const [stopWatch, setOnTick] = useStopwatch2();\r\n//     const [watchState, setWatchState] = React.useState<StopwatchState>({\r\n//         timer: \"-\",\r\n//         state: StopWatchStateOptions.STOPPED,\r\n//         timerCls: \"\",\r\n//         progress: 100,\r\n//         roundProgress: 100,\r\n//         trainingProgress: 100,\r\n//         roundIdx: 0,\r\n//         roundTotal: 0,\r\n//         actionIdx: 0,\r\n//         actionTotal: 0,\r\n//         roundDuration: 0,\r\n//         totalDuration: 0,\r\n//         action: undefined,\r\n//         round: undefined,\r\n//     })\r\n\r\n\r\n//     React.useEffect(() => {\r\n\r\n//     }, [watchState])\r\n\r\n//     return {\r\n\r\n//     }\r\n// }","import * as React from \"react\";\r\nimport { StopwatchState } from \"../PerformTraining\";\r\nimport { SimpleCountDownTimer, CountDownTimer, NewCountDownTimer } from \"./CountdownTimers\";\r\n\r\nexport function getCountDownTimer(type: string, watchState: StopwatchState): JSX.Element {\r\n    switch (type) {\r\n        case \"simple\":\r\n            return <SimpleCountDownTimer watchState={watchState} />\r\n        case \"circle\":\r\n            return <CountDownTimer watchState={watchState} />;\r\n        case \"test\":\r\n            return <NewCountDownTimer watchState={watchState} />;\r\n        default:\r\n            return <div></div>\r\n    }\r\n}","import * as React from 'react'\r\nexport interface OnSwitchValueUpdate {\r\n    (name: string, value: boolean): void;\r\n}\r\n\r\n\r\nexport interface SettingsSwitchListItemProps {\r\n    label: string,\r\n    value: boolean,\r\n    name: string,\r\n    onUpdate: OnSwitchValueUpdate;\r\n}\r\n\r\nexport function SettingsSwitchListItem(props: SettingsSwitchListItemProps) {\r\n    function onChange(ev: any) {\r\n        let target = ev.target\r\n        if (props.onUpdate) {\r\n            props.onUpdate(target.name, target.checked);\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n    }, [props.value, props.name])\r\n    return (\r\n        <div className=\"cui-flex cui-middle cui-padding-small\">\r\n            <div className=\"cui-flex-grow\">{props.label}</div>\r\n            <div className=\"cui-input-switch\">\r\n                <input type=\"checkbox\" id={props.name} name={props.name} checked={props.value} onChange={onChange} />\r\n                <label htmlFor={props.name} className=\"cui-content\"></label>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import { is } from 'bpd-toolkit/dist/esm/index';\r\nimport * as React from 'react'\r\nimport { ElementManager } from 'cui-light/dist/esm/managers/element';\r\n\r\nexport interface BpdDropProps {\r\n    id: string;\r\n    value: string;\r\n    name?: string;\r\n    items: string[];\r\n    onChange?: (name: string, value: string) => void;\r\n    modifiers?: string;\r\n}\r\n\r\nexport function BpdDrop(props: BpdDropProps) {\r\n    const dropRef = React.useRef<ElementManager>(undefined);\r\n    function onChange(value: string) {\r\n        if (dropRef.current) {\r\n            dropRef.current.emit(\"close\");\r\n        }\r\n        if (props.onChange && value !== props.value) {\r\n            props.onChange(props.name, value);\r\n        }\r\n    }\r\n\r\n    let modifiers = !props.modifiers ? \"\" : \" \" + props.modifiers;\r\n\r\n    React.useEffect(() => {\r\n        if (!is(props.id)) {\r\n            throw new Error(\"Drop component id was not provieded, but is required!\");\r\n        }\r\n        dropRef.current = window.$cui.get(\"#\" + props.id);\r\n    })\r\n\r\n    return (<div className={\"cui-drop-trigger cui-block\" + modifiers}>\r\n        <a className=\"cui-link cui-flex cui-middle cui-width-1-1 cui-padding-small\">\r\n            <span className=\"cui-flex-grow cui-text-capital cui-margin-right\">{props.value}</span>\r\n            <span cui-icon=\"chevron_small_down\"></span>\r\n        </a>\r\n        <div className=\"cui-dropdown drop-height\" cui-drop=\"outClose: Y;autoClose: Y\" id={props.id}>\r\n            <ul className=\"cui-drop-nav drop-max-width\">\r\n                {props.items && props.items.map((item, index) => {\r\n                    return <li key={item + index}><a className=\"cui-overflow-hidden cui-text-truncate cui-text-capital\" onClick={() => { onChange(item) }}>{item}</a></li>\r\n                })}\r\n            </ul>\r\n        </div>\r\n    </div >);\r\n}\r\n","import { StopwatchState } from \"../PerformTraining\";\r\n\r\nexport const COUNTDOWN_TYPES = ['simple', 'circle', \"test\"];\r\n\r\nexport interface CountDownTimerProps {\r\n    watchState: StopwatchState;\r\n}","import { AppSettings } from \"src/core/models\";\r\n\r\nexport function useAppSettings(): AppSettings {\r\n    return window.$appSettings.getSettings();\r\n}","import * as React from 'react'\r\nimport { setNavbarTitle, setPageTitle } from '../../../core/helpers';\r\nimport { PageHeaderRouteWrapper } from '../common/PageHeader';\r\nimport { SettingsSwitchListItem } from './SettingsSwitchListItem'\r\nimport { useSettings } from '../../../ui/hooks/settings';\r\nimport { BpdDrop } from '../common/BpdDrop';\r\nimport { COUNTDOWN_TYPES } from '../perform/countdown/models';\r\nimport { MAPPIGNS } from '../../../ui/routes';\r\nimport { useAppSettings } from '../../../ui/hooks/AppSettings';\r\nimport { AppRunningModes } from '../../../core/models';\r\nimport { MainComponentBase } from '../common/MainComponentBase';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport interface SettingsState {\r\n    darkModeEnabled: boolean;\r\n    soundEnabled: boolean;\r\n}\r\n\r\nexport function StopwatchSettings() {\r\n    const [settings, setSettings] = useSettings();\r\n    const appSettings = useAppSettings();\r\n\r\n    function onValueChange(name: string, value: boolean) {\r\n        if (name !== 'soundEnabled' && name !== \"darkMode\" && name !== \"simpleView\") {\r\n            return;\r\n        }\r\n        let newSettings = {\r\n            ...settings,\r\n            [name]: value\r\n        }\r\n        setSettings(newSettings)\r\n    }\r\n\r\n    function onDropChange(name: string, value: string) {\r\n        let newSettings = {\r\n            ...settings,\r\n            [name]: value\r\n        }\r\n        setSettings(newSettings)\r\n    }\r\n    React.useEffect(() => {\r\n\r\n    }, [settings.darkMode, settings.soundEnabled])\r\n    return (<>\r\n        <MainComponentBase routeName=\"settings\">\r\n            <div className=\"cui-section stopwatch-content-width\">\r\n                <ul className=\"cui-list\">\r\n                    <li>\r\n                        <SettingsSwitchListItem label=\"Dark mode\" name=\"darkMode\" value={settings.darkMode} onUpdate={onValueChange} />\r\n                    </li>\r\n                    <li>\r\n                        <SettingsSwitchListItem label=\"Play sound\" name=\"soundEnabled\" value={settings.soundEnabled} onUpdate={onValueChange} />\r\n                    </li>\r\n                    <li>\r\n                        <div className=\"cui-flex cui-middle cui-between cui-padding-small\">\r\n                            <span>Countdown timer</span>\r\n                            <BpdDrop id=\"settings-drop\" name=\"countdownView\" value={settings.countdownView} items={COUNTDOWN_TYPES} onChange={onDropChange} />\r\n                        </div>\r\n                    </li>\r\n\r\n                </ul>\r\n            </div>\r\n            <div className=\"cui-flex cui-center cui-right--s\">\r\n                {appSettings.mode === AppRunningModes.DEVELOPMENT && <Link to={MAPPIGNS.getUrl('devtools')} className=\"cui-link\" >Visit DevTools</Link>}\r\n            </div>\r\n        </MainComponentBase></>);\r\n}","import * as React from 'react'\r\nimport { setNavbarTitle, setPageTitle } from '../../../core/helpers';\r\nimport { MainComponentBase } from '../common/MainComponentBase';\r\n\r\nexport function About() {\r\n    setPageTitle(\"About\");\r\n    setNavbarTitle(\"About\");\r\n    return (<>\r\n        <MainComponentBase routeName=\"about\">\r\n            <AboutContent key=\"about\" />\r\n\r\n        </MainComponentBase>\r\n    </>);\r\n}\r\n\r\n\r\nexport function AboutContent() {\r\n    return (<div className=\"stopwatch-content-width cui-margin-top\">\r\n        <div className=\"cui-container \">\r\n            <h3 className=\"cui-h3\">Creator</h3>\r\n            <p className=\"\">Project was created and is devloped by <span className=\"cui-text-accent cui-text-bold\">BPDev</span>: <a href=\"https://github.com/bpd-d\" className=\"cui-link cui-accent\">Visit Github</a> </p>\r\n        </div>\r\n        <div className=\"cui-container \">\r\n            <h3 className=\"cui-h3\">Repository</h3>\r\n            <p className=\"\">Project sources can be found on Github under following link: <a className=\"cui-link cui-accent\" href=\"https://github.com/bpd-d/bpd-stopwatch-app\">bpd-stopwatch-app</a></p>\r\n        </div>\r\n        <div className=\"cui-container\">\r\n            <h3 className=\"cui-h3\">Links</h3>\r\n            <p className=\"\">Project uses third party libraries, see following list: </p>\r\n            <ul className=\"cui-list\">\r\n                <li>\r\n                    <div className=\"\">\r\n                        <div className=\"\">\r\n                            <span>React</span>\r\n                        </div>\r\n                        <a href=\"https://github.com/facebook/react\" className=\"cui-link\">Github</a>\r\n                        <a href=\"https://reactjs.org/\" className=\"cui-link cui-margin-left\">React JS home page</a>\r\n                    </div>\r\n                </li>\r\n                <li>\r\n                    <div className=\"\">\r\n                        <div className=\"\">\r\n                            <span>cUI Light</span>\r\n                        </div>\r\n                        <a href=\"https://github.com/bpd-d/cui-light\" className=\"cui-link\">cUI Light on Github</a>\r\n                        <a href=\"https://github.com/bpd-d/cui-styles\" className=\"cui-link cui-margin-left\">cUI Styles on Github</a>\r\n                        <a href=\"https://github.com/bpd-d/cui-icons\" className=\"cui-link cui-margin-left\">cUI Icons on Github</a>\r\n                    </div></li>\r\n                <li>\r\n                    <div className=\"\">\r\n                        <div className=\"\">\r\n                            <span>BPD Flow</span>\r\n                        </div>\r\n                        <a href=\"https://github.com/bpd-d/bpd-flow\" className=\"cui-link\">Github</a>\r\n                    </div>\r\n\r\n                </li>\r\n                <li>\r\n                    <div className=\"\">\r\n                        <div className=\"\">\r\n                            <span>BPD Storage</span>\r\n                        </div>\r\n                        <a href=\"https://github.com/bpd-d/bpd-storage\" className=\"cui-link\">Github</a>\r\n                    </div>\r\n\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>);\r\n}\r\n","import * as React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { MAPPIGNS } from '../../../ui/routes';\r\nimport { AppRunningModes } from '../../../core/models';\r\nimport { useAppSettings } from '../../../ui/hooks/AppSettings';\r\n\r\nexport interface FooterProps {\r\n    mode: string;\r\n}\r\n\r\nexport function Footer(props: FooterProps) {\r\n    const appSettings = useAppSettings();\r\n    function currentYear(): string {\r\n        return new Date().getFullYear() + \"\";\r\n    }\r\n    return (\r\n        <div className=\"stopwatch-footer cui-flex cui-right cui-middle\">\r\n            <div className=\"cui-margin-horizontal\">\r\n                <span className=\"cui-margin-small-right\">Copyrights {currentYear()}</span>\r\n                <a href=\"https://github.com/bpd-d\" target=\"_blank\" className=\"cui-link cui-accent\">BPDDev</a>\r\n                {appSettings.mode === AppRunningModes.DEVELOPMENT && <Link to={MAPPIGNS.getUrl('devtools')} className=\"cui-link cui-secondary cui-margin-left cui-text-bold\">Dev</Link>}\r\n            </div>\r\n        </div>);\r\n}\r\n","import { is } from 'bpd-toolkit/dist/esm/index';\r\nimport * as React from 'react'\r\nimport { ElementManager } from 'cui-light/dist/esm/managers/element';\r\nimport { BpdDialog } from '../common/BpdDialog';\r\n\r\nexport function TutorialDialog() {\r\n    const [isLast, setIsLast] = React.useState(false);\r\n    const switchElement = React.useRef<ElementManager>(null);\r\n    function onSwitched(data: any) {\r\n        if (is(data) && is(data.index) && data.index === 2) {\r\n            setIsLast(true)\r\n            return\r\n        }\r\n        setIsLast(false)\r\n    }\r\n\r\n    function onNextClick() {\r\n        if (isLast) {\r\n            window.$cui.get(\"#welcome-dialog\").emit(\"close\");\r\n            return;\r\n        }\r\n        switchElement.current.emit(\"switch\", \"next\")\r\n\r\n    }\r\n\r\n    function getElement() { }\r\n\r\n    React.useEffect(() => {\r\n        switchElement.current = window.$cui.get(\"#welcome-switch\");\r\n        const ids: string[] = switchElement.current.on(\"switched\", onSwitched);\r\n        return () => {\r\n            if (is(ids)) {\r\n                ids.forEach(id => {\r\n                    switchElement.current.detach(\"switched\", id)\r\n                })\r\n\r\n            }\r\n\r\n        }\r\n    }, [isLast])\r\n    return (\r\n        <BpdDialog id=\"welcome-dialog\" title=\"Welcome\"\r\n            body={\r\n                <ul id=\"welcome-switch\" cui-switch=\"links: #welcome-step-indicator > li; height: 250px\">\r\n                    <li className=\"cui-active\"><div>Welcome to <span className=\"cui-text-bold cui-text-accent\">Bpd Stopwatch</span> app. It is simple, offline tool which will allow you to perform highly custimzed trainings that need stopwatch.</div></li>\r\n                    <li><div>Set up some <span className=\"cui-text-bold cui-text-accent\">Actions</span> to build your trainings from. You can define action name, type and it's duration. Action type has it's indications in <span className=\"cui-text-bold\">colors</span> and <span className=\"cui-text-bold\">sounds</span> later when your training is performed, so choose type accordingly to your action type.\r\n                    You can choose from <span className=\"cui-text-italic\">warmup</span>, <span className=\"cui-text-italic\">exercise</span>, <span className=\"cui-text-italic\">break</span> and <span className=\"cui-text-italic\">cooldown</span>. There are some actions already defined (they cannot be modified or deleted), which can help you to start with building your trainings.</div></li>\r\n                    <li><div>Give your <span className=\"cui-text-bold cui-text-accent\">training</span> a name and optionally  <span className=\"cui-text-bold cui-accent\">description</span>, then setup <span className=\"cui-text-bold cui-accent\">rounds</span>. You can define rounds from available actions.\r\n                        Once added they can be <span className=\"cui-text-italic\">re-positioned</span>, <span className=\"cui-text-italic\">cloned</span> or <span className=\"cui-text-italic\">deleted</span>.</div></li>\r\n                </ul>\r\n            }\r\n            footer={\r\n                <div className=\"cui-flex cui-middle\">\r\n                    <ul id=\"welcome-step-indicator\" className=\"cui-switcher-indicator cui-flex-grow\" cui-switcher=\"target: #welcome-switch\">\r\n                        <li><a></a></li>\r\n                        <li><a></a></li>\r\n                        <li><a></a></li>\r\n                    </ul>\r\n                    <div>\r\n                        <button className=\"cui-button\" onClick={onNextClick}>{isLast ? \"Close\" : \"Next\"}</button>\r\n                    </div>\r\n                </div>\r\n            }\r\n        />\r\n    );\r\n}\r\n","import * as React from \"react\";\r\n\r\nexport interface FetchResponse<T> {\r\n    response: T;\r\n    error: Error;\r\n    loading: boolean;\r\n}\r\n\r\nexport function useFetch<T>(url: string, options?: any): FetchResponse<T> {\r\n    const [response, setResponse] = React.useState<FetchResponse<T>>({\r\n        response: undefined,\r\n        error: undefined,\r\n        loading: false\r\n    });\r\n\r\n    function getDataAsync() {\r\n        setResponse({\r\n            ...response,\r\n            loading: true\r\n        })\r\n        fetch(url, options).\r\n            then(response => response.json()).\r\n            then((jsonData) => {\r\n                setResponse({\r\n                    error: undefined,\r\n                    response: jsonData,\r\n                    loading: false\r\n                })\r\n            }).catch((e) => {\r\n                setResponse({\r\n                    error: e,\r\n                    response: undefined,\r\n                    loading: false\r\n                })\r\n            });\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        getDataAsync();\r\n    }, [])\r\n\r\n    return response;\r\n}","import * as React from 'react'\r\n\r\nexport function BpdLoading() {\r\n    return (<div className=\"cui-height-1-1 cui-width-1-1 cui-flex-center\">\r\n        <span>Loading...</span>\r\n    </div>);\r\n}\r\n","import * as React from 'react'\r\n\r\nexport interface BpdErrorProps {\r\n    message: string;\r\n    modifiers?: string;\r\n}\r\nexport function BpdError(props: BpdErrorProps) {\r\n    let cls = \"cui-flex-center\";\r\n    if (props.modifiers) {\r\n        cls += \" \" + props.modifiers;\r\n    }\r\n    return (<div className={cls}><span className=\"cui-text-error\">{props.message}</span></div>);\r\n}\r\n","import * as React from \"react\";\r\nimport { DocComponentSectionProps, DocComponentParagraphProps } from \"./interfaces\";\r\n\r\nexport function DocComponentSection(props: DocComponentSectionProps) {\r\n    return (\r\n        <div className=\"cui-section\">\r\n            <h2 className=\"cui-h2\" id={props.section.id}>{props.section.name}</h2>\r\n            {props.section.content && props.section.content.map((paragraph, index) => {\r\n                return <DocComponentParagraph key={index} paragraph={paragraph} />\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport function DocComponentParagraph(props: DocComponentParagraphProps) {\r\n    return (\r\n        <div className=\"\">\r\n            {props.paragraph.header && <h3 className=\"cui-h3\">{props.paragraph.header}</h3>}\r\n            {props.paragraph.text && <p>{props.paragraph.text}</p>}\r\n            {props.paragraph.list && <ul className=\"cui-list cui-bullet-shade\">\r\n                {props.paragraph.list.map((item, index) => {\r\n                    return <li key={index}>{item}</li>\r\n                })}\r\n            </ul>}\r\n        </div>\r\n    );\r\n}","import * as React from 'react'\r\nimport { FetchResponse, useFetch } from '../../../ui/hooks/fetch';\r\nimport { BpdLoading } from '../common/BpdLoading';\r\nimport { BpdError } from '../common/BpdError';\r\nimport { DocComponentSection } from '../docs/components';\r\nimport { Doc } from '../docs/interfaces';\r\nimport { MainComponentBase } from '../common/MainComponentBase';\r\n\r\n\r\nexport function Help() {\r\n    return (\r\n        <MainComponentBase routeName=\"help\">\r\n            <HelpContent key=\"help\" />\r\n        </MainComponentBase >\r\n    );\r\n}\r\n\r\nexport function HelpContent() {\r\n    const helpDocsData: FetchResponse<Doc> = useFetch<Doc>('/static/docs/help.json');\r\n\r\n    React.useEffect(() => {\r\n    })\r\n    if (helpDocsData.error) {\r\n        return (<BpdError message={helpDocsData.error.message} />)\r\n    }\r\n    if (helpDocsData.loading || !helpDocsData.response) {\r\n        return (<BpdLoading />);\r\n    }\r\n    return (<HelpDoc doc={helpDocsData.response} />);\r\n}\r\n\r\n\r\nexport interface HelpDocProps {\r\n    doc: Doc;\r\n}\r\nexport function HelpDoc(props: HelpDocProps) {\r\n\r\n    return (<>\r\n        <div className=\"cui-section\">\r\n            <h2 className=\"cui-h2\">Contents</h2>\r\n            <ul className=\"cui-list\">\r\n                {props.doc.sections.map(section => {\r\n                    return (<li key={section.id}><a className=\"cui-link cui-accent\" href={\"#\" + section.id}>{section.name}</a></li>);\r\n                })}\r\n            </ul>\r\n        </div>\r\n        {\r\n            props.doc.sections.map(section => {\r\n                return <DocComponentSection key={section.id} section={section} />\r\n            })\r\n        }\r\n        <div className=\"\">\r\n            Version: {props.doc.version}\r\n        </div>\r\n    </>);\r\n}\r\n\r\n\r\n","import * as React from 'react'\r\nimport { ACTIONS_FLOW_ACTIONS } from '../../../app/flow/actions';\r\nimport { SETTINGS_FLOW_ACTIONS } from '../../../app/flow/settings';\r\nimport { ACTIONS } from '../../../app/flow/trainings';\r\n\r\nexport function SettingsDevTools() {\r\n    function onClear() {\r\n        window.$cui.toast(\"Data cleared\")\r\n    }\r\n\r\n    function onSettingsUpdate() {\r\n        console.log(\"Settings cleared\")\r\n        window.$settingsFlow.perform(SETTINGS_FLOW_ACTIONS.GET_SETTINGS);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        const settingsClearSub = window.$settingsFlow.subscribe(SETTINGS_FLOW_ACTIONS.CLEAR_SETTINGS, { finish: onSettingsUpdate });\r\n        const actionsClearSub = window.$actionsFlow.subscribe(ACTIONS_FLOW_ACTIONS.CLEAR_ACTIONS, { finish: onClear });\r\n        const trainingsClearSub = window.$flow.subscribe(ACTIONS.CLEAR_TRAININGS, { finish: onClear });\r\n\r\n\r\n        return () => {\r\n\r\n            window.$settingsFlow.unsubscribe(SETTINGS_FLOW_ACTIONS.CLEAR_SETTINGS, settingsClearSub.id);\r\n            window.$actionsFlow.unsubscribe(ACTIONS_FLOW_ACTIONS.CLEAR_ACTIONS, actionsClearSub.id);\r\n            window.$flow.unsubscribe(ACTIONS.CLEAR_TRAININGS, trainingsClearSub.id);\r\n        }\r\n    }, [])\r\n    return (<div className=\"cui-section\">\r\n        <h3 className=\"cui-h3\">Dev tools</h3>\r\n        <div className=\"\">\r\n            <div></div>\r\n            <button className=\"cui-button cui-margin-small cui-default \" onClick={() => { window.$actionsFlow.perform(ACTIONS_FLOW_ACTIONS.CLEAR_ACTIONS) }}>Clear actions only</button>\r\n        </div><div>\r\n            <button className=\"cui-button cui-margin-small cui-default\" onClick={() => { window.$flow.perform(ACTIONS.CLEAR_TRAININGS) }}>Clear trainings only</button>\r\n        </div><div>\r\n            <button className=\"cui-button cui-margin-small cui-default\" onClick={() => { window.$settingsFlow.perform(SETTINGS_FLOW_ACTIONS.CLEAR_SETTINGS) }}>Clear settings only</button>\r\n        </div><div>\r\n            <button className=\"cui-button cui-margin-small cui-error\" onClick={() => {\r\n                window.$actionsFlow.perform(ACTIONS_FLOW_ACTIONS.CLEAR_ACTIONS)\r\n                window.$flow.perform(ACTIONS.CLEAR_TRAININGS)\r\n                window.$settingsFlow.perform(SETTINGS_FLOW_ACTIONS.CLEAR_SETTINGS)\r\n            }}>Clear data</button>\r\n        </div>\r\n    </div>);\r\n}\r\n","import * as React from 'react'\r\nimport { useSettings } from '../../../ui/hooks/settings';\r\nimport { MainComponentBase } from '../common/MainComponentBase';\r\nimport { SettingsDevTools } from '../settings/SettingsDevTools';\r\n\r\nexport function DevTools() {\r\n    const [settings] = useSettings();\r\n    return (\r\n        <MainComponentBase routeName=\"devtools\">\r\n            <div className=\"cui-section\">\r\n                <button className=\"cui-button cui-default\" onClick={() => {\r\n                    window.$cui.get(\"#welcome-dialog\").emit(\"open\");\r\n                }}>Show tutorial dialog</button>\r\n            </div>\r\n            <div>\r\n                Welcome screen status: {settings.isWelcome ? \"Yes\" : \"No\"}\r\n            </div>\r\n            <SettingsDevTools />\r\n        </MainComponentBase>);\r\n}\r\n","import * as React from \"react\";\r\nimport { Switch, Route, BrowserRouter, useLocation } from \"react-router-dom\";\r\nimport { Home } from \"./components/home/home\";\r\nimport { ErrorRoute } from \"./error\";\r\nimport { Navbar } from \"./components/navbar/navbar\";\r\nimport { OffCanvas } from \"./components/offacanvas/offcanvas\";\r\nimport { StopwatchActionsComponent } from \"./components/actions/StopwatchActionsComponent\";\r\nimport EditTraining from \"./components/trainings/EditTraining\";\r\nimport { PerfromTraining } from \"./components/perform/PerformTraining\";\r\nimport { StopwatchSettings } from \"./components/settings/StopwatchSettings\";\r\nimport { SETTINGS_FLOW_ACTIONS } from \"../app/flow/settings\";\r\nimport { setDarkMode } from \"../core/helpers\";\r\nimport { About } from \"./components/about/About\";\r\nimport { Footer } from \"./components/footer/Footer\";\r\nimport { MAPPIGNS } from \"./routes\";\r\nimport { ElementManager } from \"cui-light/dist/esm/managers/element\";\r\nimport { is } from \"bpd-toolkit/dist/esm/index\";\r\nimport { TutorialDialog } from \"./components/tutorial/TutorialDialog\";\r\nimport { Help } from \"./components/help/help\";\r\nimport { DevTools } from \"./components/devtools/DevTools\";\r\n\r\nexport interface AppProps {\r\n    mode: string;\r\n}\r\nexport interface AppState {\r\n    currentSite?: string;\r\n}\r\n\r\nexport function AppBase(props: AppProps) {\r\n    return (<BrowserRouter>\r\n        <Route path=\"*\">\r\n            <App mode={props.mode} />\r\n        </Route>\r\n    </BrowserRouter>)\r\n}\r\n\r\nexport function App(props: AppProps) {\r\n\r\n    let welcomeDialogHandle: ElementManager;\r\n    let location = useLocation();\r\n    function onDarkMode(flag: boolean) {\r\n        setDarkMode(flag);\r\n    }\r\n\r\n    function onWelcomeScreen(flag: boolean) {\r\n        if (!flag) {\r\n            setTimeout(() => {\r\n                this.welcomeDialogHandle = window.$cui.get(\"#welcome-dialog\");\r\n                this.welcomeDialogCloseEventIds = this.welcomeDialogHandle.on(\"close\", this.onWelcomeDialogClose.bind(this));\r\n                window.$cui.get(\"#welcome-dialog\").emit(\"open\");\r\n            }, 100)\r\n\r\n        }\r\n    }\r\n\r\n    function onWelcomeDialogClose() {\r\n        window.$settingsFlow.perform(SETTINGS_FLOW_ACTIONS.SET_IS_WELCOME, true);\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n        const darkModeSub = window.$settingsFlow.subscribe(SETTINGS_FLOW_ACTIONS.GET_DARK_MODE, { finish: onDarkMode });\r\n        const welcomeScreenGetSub = window.$settingsFlow.subscribe(SETTINGS_FLOW_ACTIONS.GET_IS_WELCOME, { finish: onWelcomeScreen });\r\n        welcomeDialogHandle = window.$cui.get(\"#welcome-dialog\");\r\n        const welcomeDialogCloseEventIds = welcomeDialogHandle.on(\"close\", onWelcomeDialogClose);\r\n        window.$settingsFlow.perform(SETTINGS_FLOW_ACTIONS.GET_IS_WELCOME);\r\n        window.$settingsFlow.perform(SETTINGS_FLOW_ACTIONS.GET_DARK_MODE);\r\n\r\n        return () => {\r\n            window.$settingsFlow.unsubscribe(SETTINGS_FLOW_ACTIONS.GET_DARK_MODE, darkModeSub.id);\r\n            window.$settingsFlow.unsubscribe(SETTINGS_FLOW_ACTIONS.GET_IS_WELCOME, welcomeScreenGetSub.id);\r\n\r\n            if (is(welcomeDialogCloseEventIds)) {\r\n                welcomeDialogCloseEventIds.forEach((id: string) => {\r\n                    welcomeDialogHandle.detach(\"close\", id);\r\n                })\r\n            }\r\n        }\r\n    })\r\n    return (\r\n        <div className=\"stopwatch-layout-main\">\r\n            <Navbar />\r\n            <div className=\"stopwatch-layout-content cui-overflow-y-auto\">\r\n                <Switch location={location}>\r\n                    <Route path={MAPPIGNS.getUrl(\"perform\")} component={PerfromTraining}></Route>\r\n                    <Route path={MAPPIGNS.getUrl(\"newTraining\")} component={EditTraining}></Route>\r\n                    <Route path={MAPPIGNS.getUrl(\"editTraining\")} component={EditTraining}></Route>\r\n                    <Route path={MAPPIGNS.getUrl(\"actions\")} component={StopwatchActionsComponent}></Route>\r\n                    <Route path={MAPPIGNS.getUrl(\"settings\")} component={StopwatchSettings}></Route>\r\n                    <Route path={MAPPIGNS.getUrl(\"about\")} component={About}></Route>\r\n                    <Route path={MAPPIGNS.getUrl(\"devtools\")} component={DevTools}></Route>\r\n                    <Route path={MAPPIGNS.getUrl(\"help\")} component={Help}></Route>\r\n                    <Route path={MAPPIGNS.getUrl(\"home\")} component={Home}></Route>\r\n                    <Route>\r\n                        <ErrorRoute />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n            <Footer mode={props.mode} />\r\n            <OffCanvas />\r\n            <TutorialDialog />\r\n        </div>);\r\n}","import { ITrainingsService, IActionsService, ISettingsService } from \"./interfaces\";\r\nimport { Training, StopwatchAction, Settings, TrainingState } from \"../models\";\r\nimport { BpdStorage } from \"../../../node_modules/bpd-storage/dist/index\";\r\nimport { ActionValidator, TrainingValidator } from \"../validators\";\r\nimport { is } from \"bpd-toolkit/dist/esm/index\";\r\nimport { DefaultSettings } from \"../statics\";\r\n\r\nconst TRAININGS_STORAGE = \"Trainings\";\r\nconst DRAFT_STORAGE = \"DRAFT_TRAINING\";\r\n\r\nexport class TrainingsStorageService implements ITrainingsService {\r\n    #storage: BpdStorage;\r\n    // #trainings: Training[];\r\n    #validator: TrainingValidator;\r\n    constructor() {\r\n        this.#storage = new BpdStorage(\"local\", \"BPD_TRAININGS\");\r\n        // this.#trainings = [];\r\n        this.#validator = new TrainingValidator();\r\n    }\r\n\r\n\r\n    getAllTrainings(): Training[] {\r\n        return this.getTrainings();\r\n    }\r\n\r\n    addTraining(training: Training): boolean {\r\n        let result = false;\r\n\r\n        if (this.validate(training)) {\r\n            this.onAction((t: Training[]) => {\r\n                if (!is(training.id)) {\r\n                    if (training.state === TrainingState.DRAFT) {\r\n                        this.clearDraft();\r\n                    }\r\n                    training.id = \"00\" + this.getNextIndex();\r\n                    training.state = TrainingState.PUBLISH;\r\n                    t.push(training)\r\n                    result = true;\r\n                    return t;\r\n                }\r\n                return null;\r\n            })\r\n        }\r\n        return result;\r\n    }\r\n\r\n    updateTraining(training: Training): boolean {\r\n        let result = false;\r\n\r\n        if (this.validate(training)) {\r\n            if (!is(training.id)) {\r\n                result = this.addTraining(training)\r\n            } else {\r\n                this.onAction((t: Training[]) => {\r\n                    let idx = t.findIndex(item => item.id === training.id);\r\n                    if (idx > -1) {\r\n                        if (training.state === TrainingState.DRAFT) {\r\n                            this.clearDraft();\r\n                        }\r\n                        training.state = TrainingState.PUBLISH;\r\n                        t[idx] = training;\r\n                        result = true;\r\n                        return t;\r\n                    }\r\n                    return null;\r\n                })\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Removes training from storage\r\n     * @param id Id of training\r\n     */\r\n    deleteTraining(id: string): boolean {\r\n        let result = false;\r\n        if (!is(id)) {\r\n            return false;\r\n        }\r\n        this.onAction((t: Training[]) => {\r\n            let idx = t.findIndex(item => item.id === id);\r\n            if (idx > -1) {\r\n                t.splice(idx, 1);\r\n                result = true;\r\n                return t;\r\n            }\r\n            return null;\r\n        })\r\n        return result;\r\n    }\r\n\r\n    getTraining(id: string): Training {\r\n        let training = undefined;\r\n        this.onAction((t) => {\r\n            training = t.find(item => { return item.id === id });\r\n            return null;\r\n        })\r\n        return training;\r\n    }\r\n\r\n    /**\r\n     * Removes all trainings from storage\r\n     */\r\n    clearTrainings(): void {\r\n        this.onAction((trainings: Training[]) => {\r\n            return [];\r\n        })\r\n    }\r\n\r\n    isDraft(): boolean {\r\n        throw is(this.#storage.getAny(DRAFT_STORAGE));\r\n    }\r\n\r\n    getDraft(): Training {\r\n        return this.#storage.getAny(DRAFT_STORAGE) ?? undefined;\r\n    }\r\n\r\n    setDraft(training: Training): boolean {\r\n        if (!is(training)) {\r\n            return;\r\n        }\r\n        training.state = TrainingState.DRAFT;\r\n        this.#storage.setAny(DRAFT_STORAGE, training);\r\n    }\r\n\r\n    clearDraft(): void {\r\n        this.#storage.removeItem(DRAFT_STORAGE);\r\n    }\r\n\r\n    getCurrentTraining(): Training {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    setCurrentTraining(training: Training): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    private getTrainings(): Training[] {\r\n        return this.#storage.getAny(TRAININGS_STORAGE) ?? [];\r\n    }\r\n\r\n    private setTrainings(t: Training[]): void {\r\n        this.#storage.setAny(TRAININGS_STORAGE, t);\r\n    }\r\n\r\n    private getNextIndex(): number {\r\n        let idx = this.#storage.getNumber(\"TRAININGS_INDEX\");\r\n        if (!idx || idx === NaN) {\r\n            idx = 1;\r\n        } else {\r\n            idx += 1;\r\n        }\r\n        this.#storage.setNumber(\"TRAININGS_INDEX\", idx);\r\n        return idx;\r\n    }\r\n\r\n    private validate(training: Training): boolean {\r\n        return this.#validator.validate(training).status;\r\n    }\r\n\r\n    private onAction(callback: (t: Training[]) => Training[] | null) {\r\n        let t = this.getTrainings();\r\n        let result = callback(t)\r\n        if (result !== null) {\r\n            this.setTrainings(result);\r\n        }\r\n    }\r\n}\r\n\r\nexport class ActionStorageService implements IActionsService {\r\n    #storage: BpdStorage;\r\n    #actions: StopwatchAction[];\r\n    #validator: ActionValidator;\r\n    constructor() {\r\n        this.#storage = new BpdStorage(\"local\", \"BPD_TRAININGS\");\r\n        this.#actions = [];\r\n        this.#validator = new ActionValidator();\r\n        this.getActionsFromStorage();\r\n    }\r\n\r\n    getAllActions(): StopwatchAction[] {\r\n        return [...this.#actions];\r\n    }\r\n\r\n    setAction(action: StopwatchAction): boolean {\r\n        if (!this.#validator.validate(action).status) {\r\n            return false;\r\n        }\r\n        if (!is(action.id)) {\r\n            action.id = \"000\" + this.getNextIndex();\r\n            this.#actions.push(action);\r\n        }\r\n        let existingIndex = this.getIndex(action);\r\n        if (existingIndex > -1) {\r\n            this.#actions[existingIndex] = action;\r\n            this.setActionsToStorage();\r\n            return true;\r\n        }\r\n        console.log(\"Unknown action id: \" + action.id);\r\n        return false;\r\n    }\r\n\r\n    removeAction(action: StopwatchAction): boolean {\r\n        if (!this.#validator.validate(action).status) {\r\n            return false;\r\n        }\r\n        let existingIndex = this.getIndex(action);\r\n        if (existingIndex < 0) {\r\n            console.log(\"Unknown action id: \" + action.id);\r\n            return false;\r\n        }\r\n        this.#actions.splice(existingIndex, 1);\r\n        this.setActionsToStorage();\r\n        return true;\r\n    }\r\n\r\n    clearActions(): void {\r\n        this.#actions = [];\r\n        this.setActionsToStorage();\r\n    }\r\n\r\n    getActionsById(...id: string[]): StopwatchAction[] | undefined {\r\n        if (!is(id)) {\r\n            return undefined;\r\n        }\r\n        return this.#actions.reduce((result: StopwatchAction[], action: StopwatchAction, index: number) => {\r\n            if (id.includes(action.id)) {\r\n                result.push(action);\r\n            }\r\n            return result;\r\n        }, []);\r\n    }\r\n\r\n    private getIndex(action: StopwatchAction): number {\r\n        return this.#actions.findIndex(item => item.id === action.id);\r\n    }\r\n\r\n    private getActionsFromStorage() {\r\n        let val = this.#storage.getAny(\"ACTIONS\");\r\n        this.#actions = val ?? [];\r\n    }\r\n\r\n    private setActionsToStorage() {\r\n        this.#storage.setAny(\"ACTIONS\", this.#actions);\r\n    }\r\n\r\n    private getNextIndex() {\r\n        let item = this.#storage.getNumber(\"ACTION_INDEX\");\r\n        if (!item) {\r\n            item = 5;\r\n        } else {\r\n            item = item + 1;\r\n        }\r\n        this.#storage.setNumber(\"ACTION_INDEX\", item);\r\n        return item;\r\n    }\r\n\r\n}\r\n\r\nexport class SettingsService implements ISettingsService {\r\n    #storage: BpdStorage;\r\n    constructor() {\r\n        this.#storage = new BpdStorage(\"local\", \"BPD_SETTINGS\");\r\n    }\r\n\r\n\r\n    setSettings(value: Settings): boolean {\r\n        this.#storage.setAny(\"SETTINGS\", value);\r\n        return true;\r\n    }\r\n\r\n    getSettings(): Settings {\r\n        return this.#storage.getAny(\"SETTINGS\") || {\r\n            darkMode: false,\r\n            soundEnabled: false\r\n        };\r\n    }\r\n\r\n    setSoundEnabled(flag: boolean): void {\r\n        let settings = this.getSettings();\r\n        if (flag !== settings.soundEnabled) {\r\n            settings.soundEnabled = flag;\r\n            this.setSettings(settings)\r\n        }\r\n    }\r\n\r\n    isSoundEnabled(): boolean {\r\n        return this.getSettings()?.soundEnabled;\r\n    }\r\n\r\n    setDarkMode(flag: boolean): void {\r\n        let settings = this.getSettings();\r\n        if (flag !== settings.darkMode) {\r\n            settings.darkMode = flag;\r\n            this.setSettings(settings)\r\n        }\r\n    }\r\n\r\n    isDarkMode(): boolean {\r\n        return this.getSettings()?.darkMode;\r\n    }\r\n\r\n    isWelcomeSet(): boolean {\r\n        return this.getSettings()?.isWelcome;\r\n    }\r\n\r\n    setIsWelcome(flag: boolean) {\r\n        let settings = this.getSettings();\r\n        if (flag !== settings.isWelcome) {\r\n            settings.isWelcome = flag;\r\n            this.setSettings(settings)\r\n        }\r\n    }\r\n\r\n    clearSettings(): void {\r\n        this.setSettings({\r\n            ...DefaultSettings\r\n        })\r\n    }\r\n}","import { IPushService } from \"./interfaces\";\r\n\r\nexport class PushService implements IPushService {\r\n    constructor() {\r\n\r\n    }\r\n\r\n    setNavbarTitle(title: string): string {\r\n        return title ?? \"\";\r\n    }\r\n}","import { AppSettings } from \"../models\";\r\nimport { IAppSettingsService } from \"./interfaces\";\r\n\r\nexport class AppSettingsService implements IAppSettingsService {\r\n    #settings: AppSettings;\r\n    constructor(settings: AppSettings) {\r\n        this.#settings = settings;\r\n    }\r\n    \r\n    getSettings(): AppSettings {\r\n        return this.#settings;\r\n    }\r\n\r\n}","export class CuiSetup {\r\n    constructor() {\r\n        this.autoLightMode = false;\r\n        this.scrollThreshold = 20;\r\n        this.resizeThreshold = 20;\r\n        this.prefix = \"cui\";\r\n        this.plugins = {};\r\n    }\r\n    fromInit(init) {\r\n        var _a;\r\n        this.prefix = (_a = init.prefix) !== null && _a !== void 0 ? _a : \"cui\";\r\n        this.logLevel = init.logLevel;\r\n        this.cacheSize = init.cacheSize;\r\n        this.autoLightMode = init.autoLightMode;\r\n        this.animationTime = init.animationTime;\r\n        this.animationTimeShort = init.animationTimeShort;\r\n        this.animationTimeLong = init.animationTimeLong;\r\n        this.scrollThreshold = init.scrollThreshold;\r\n        this.resizeThreshold = init.resizeThreshold;\r\n        return this;\r\n    }\r\n}\r\nexport class CuiSetupInit {\r\n    constructor() {\r\n        this.prefix = 'cui';\r\n        this.app = '$cui';\r\n        this.logLevel = 'warning';\r\n        this.interaction = 'async';\r\n        this.animationTime = 300;\r\n        this.animationTimeShort = 150;\r\n        this.animationTimeLong = 500;\r\n        this.cacheSize = 500;\r\n        this.autoLightMode = false;\r\n        this.scrollThreshold = 20;\r\n        this.resizeThreshold = 20;\r\n        this.root = document.body;\r\n        this.busSetup = undefined;\r\n        this.development = undefined;\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport '../styles/styles.scss';\r\nimport { AppBase } from \"./ui/app\";\r\nimport { CuiIconsPack } from 'bpd-cui-icons/esm/index';\r\nimport { Flow, FlowFactory } from '../node_modules/bpd-flow/dist/index';\r\nimport { TrainingsStorageService, ActionStorageService, SettingsService } from './core/services/storage';\r\nimport { TrainingsFlow, TrainingsFlowInput, TrainingsFlowOutput } from \"./app/flow/trainings\";\r\nimport { ActionsFlowInput, ActionsFlowOutput, ActionsFlow } from \"./app/flow/actions\";\r\nimport { SettingsFlow, SettingsFlowInput, SettingsFlowOutput } from \"./app/flow/settings\";\r\nimport { CuiInstance } from \"cui-light-app/dist/esm/index\";\r\nimport { CuiInitData, CuiInitializer } from \"cui-light-app/dist/esm/app/initializer\";\r\nimport { PushServiceFlow, PushServiceInput, PushServiceOutput } from \"./app/push/push\";\r\nimport { PushService } from \"./core/services/push\";\r\nimport { AppSettingsService } from \"./core/services/app\";\r\nimport { IAppSettingsService } from \"./core/services/interfaces\";\r\nimport { CuiSetupInit } from \"../../cui-light-app/dist/esm/core/models/setup\";\r\nimport { getUsedCuiComponents, getUsedPlugins } from \"./ui/imports\";\r\n\r\n\r\ndeclare global {\r\n    interface Window {\r\n        // cuiInit: CuiInit;\r\n        $cui: CuiInstance;\r\n        $flow: Flow<any, any>;\r\n        $actionsFlow: Flow<ActionsFlowInput, ActionsFlowOutput>;\r\n        $settingsFlow: Flow<SettingsFlowInput, SettingsFlowOutput>;\r\n        $push: Flow<PushServiceInput, PushServiceOutput>;\r\n        $appSettings: IAppSettingsService;\r\n    }\r\n}\r\n\r\nconst loadingIndicator = document.getElementById(\"loading-indicator\");\r\nconst loading = document.getElementById(\"loading-screen\");\r\n\r\nfunction setText(text: string) {\r\n    if (window.requestAnimationFrame) {\r\n        window.requestAnimationFrame(() => {\r\n            loadingIndicator.textContent = text;\r\n        })\r\n    } else {\r\n        loadingIndicator.textContent = text;\r\n    }\r\n}\r\n\r\nPromise.all([\r\n    fetch('/app_settings.json').then(response => response.json()),\r\n    fetch('/static/icons/all.json').then(response => response.json())\r\n]).then((result) => {\r\n    onDataFetch(result[0], result[1])\r\n}).catch(() => {\r\n    loadingIndicator.classList.add(\"error\");\r\n    setText(\"Application cannot be loaded!\")\r\n})\r\n\r\nfunction onDataFetch(settings: any, icons: any) {\r\n    setText(\"Initializing...\")\r\n    const rootElement = document.getElementById('root');\r\n    const setup = new CuiSetupInit();\r\n    setup.logLevel = settings?.mode === \"production\" ? 'error' : \"debug\";\r\n    setup.root = rootElement;\r\n    setup.busSetup = [\r\n        {\r\n            name: \"MoveQueue\",\r\n            eventsDef: [\"global_move\"],\r\n            handler: 'tasked',\r\n            priority: 0\r\n        },\r\n        {\r\n            name: \"InteractQueue\",\r\n            eventsDef: [\"open\", \"close\", \"switch\"],\r\n            handler: 'tasked',\r\n            priority: 0\r\n        },\r\n        {\r\n            name: \"ResponsesQueue\",\r\n            eventsDef: [\"opened\", \"closed\", \"switched\", \"resize\", \"offset\"],\r\n            handler: 'tasked',\r\n            priority: 1\r\n        },\r\n        {\r\n            name: \"GlobalSimple\",\r\n            eventsDef: [\"keydown\", \"scroll\", \"intersection\", \"windowclick\"],\r\n            handler: 'tasked',\r\n            priority: 2\r\n        },\r\n    ]\r\n\r\n    const cuiSetup: CuiInitData = {\r\n        setup: setup,\r\n        components: getUsedCuiComponents(),\r\n        plugins: getUsedPlugins(),\r\n        icons: {\r\n            ...CuiIconsPack,\r\n            ...icons\r\n        }\r\n    };\r\n\r\n    const service = new TrainingsStorageService();\r\n    const traningsFlow = new TrainingsFlow(service);\r\n    const actionsService = new ActionStorageService();\r\n    const actionsFlow = new ActionsFlow(actionsService);\r\n    const settingsService = new SettingsService();\r\n    const settingsFlow = new SettingsFlow(settingsService);\r\n    const pushService = new PushServiceFlow(new PushService());\r\n\r\n    window.$appSettings = new AppSettingsService(settings);\r\n\r\n    window.$flow = FlowFactory.create<TrainingsFlowInput, TrainingsFlowOutput>(traningsFlow.getActions());\r\n    window.$actionsFlow = FlowFactory.create<ActionsFlowInput, ActionsFlowOutput>(actionsFlow.getActions());\r\n    window.$settingsFlow = FlowFactory.create<SettingsFlowInput, SettingsFlowOutput>(settingsFlow.getActions());\r\n    window.$push = FlowFactory.create<PushServiceInput, PushServiceOutput>(pushService.getActions());\r\n\r\n    setTimeout(() => {\r\n        new CuiInitializer().init(cuiSetup).then((result) => {\r\n            ReactDOM.render(<AppBase mode={settings.mode} />, rootElement);\r\n            loading.remove();\r\n            rootElement.classList.remove(\"hidden\");\r\n        });\r\n    }, 0)\r\n\r\n}\r\n\r\n\r\n\r\n","import { ICuiComponent, ICuiPlugin } from \"cui-light-app/dist/esm/core/models/interfaces\";\r\nimport { CuiAccordionComponent } from \"cui-light-app/dist/esm/components/accordion/accordion\";\r\nimport { CuiCircleComponent } from \"cui-light-app/dist/esm/components/circle/circle\";\r\nimport { CuiCloseComponent } from \"cui-light-app/dist/esm/components/close/close\";\r\nimport { CuiDialogComponent } from \"cui-light-app/dist/esm/components/dialog/dialog\";\r\nimport { CuiDropComponenet } from \"cui-light-app/dist/esm/components/drop/drop\";\r\nimport { CuiIconComponent } from \"cui-light-app/dist/esm/components/icon/icon\";\r\nimport { CuiOffCanvasComponent } from \"cui-light-app/dist/esm/components/offcanvas/offcanvas\";\r\nimport { CuiOpenComponent } from \"cui-light-app/dist/esm/components/open/open\";\r\nimport { CuiSpinnerComponent } from \"cui-light-app/dist/esm/components/spinner/spinner\";\r\nimport { CuiSliderComponent } from \"cui-light-app/dist/esm/components/switch/slider\";\r\nimport { CuiSwitchComponent } from \"cui-light-app/dist/esm/components/switch/switch\";\r\nimport { CuiSwitcherComponent } from \"cui-light-app/dist/esm/components/switch/switcher\";\r\nimport { CuiTooltipComponent } from \"cui-light-app/dist/esm/components/tooltip/tooltip\";\r\n\r\nimport { CuiAutoLightModePlugin } from \"cui-light-app/dist/esm/plugins/light/light\";\r\nimport { CuiAutoPrintModePlugin } from \"cui-light-app/dist/esm/plugins/print/print\";\r\n\r\nexport function getUsedCuiComponents(): ICuiComponent[] {\r\n    let prefix = 'cui'\r\n    return [\r\n        new CuiIconComponent(prefix),\r\n        new CuiTooltipComponent(prefix),\r\n        new CuiCircleComponent(prefix),\r\n        new CuiSpinnerComponent(prefix),\r\n        new CuiOpenComponent(prefix),\r\n        new CuiCloseComponent(prefix),\r\n        new CuiDialogComponent(prefix),\r\n        new CuiOffCanvasComponent(prefix),\r\n        new CuiAccordionComponent(prefix),\r\n        new CuiDropComponenet(prefix),\r\n        new CuiSwitchComponent(prefix),\r\n        new CuiSwitcherComponent(prefix),\r\n        new CuiSliderComponent(prefix),\r\n    ]\r\n}\r\n\r\nexport function getUsedPlugins(): ICuiPlugin[] {\r\n    return [\r\n        new CuiAutoLightModePlugin({ autoLight: true }),\r\n        new CuiAutoPrintModePlugin({ autoPrint: false })\r\n    ]\r\n}"],"sourceRoot":""}